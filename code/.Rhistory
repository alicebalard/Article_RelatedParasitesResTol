names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
# names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
#   paste(names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
x
# names(nameRes(X)) <- "name"
# X <- data.frame(nameRes(X))
# colnames(nameRes(X)) <- gsub("name.", "", colnames(nameRes(X)))
# names(nameRes(Y)) <- "name"
# Y <- data.frame(nameRes(Y))
# colnames(nameRes(Y)) <- gsub("name.", "", colnames(nameRes(Y)))
# merge(nameRes(X), nameRes(Y))
}
getMergeRT(predResList["full"], predTolList["full"])
getMergeRT <- function(x, y){
names(nameRes(x)) <- "name"
x <- data.frame(nameRes(x))
colnames(nameRes(x)) <- gsub("name.", "", colnames(nameRes(x)))
names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
# names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
#   paste(names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
x
#
# names(nameRes(Y)) <- "name"
# Y <- data.frame(nameRes(Y))
# colnames(nameRes(Y)) <- gsub("name.", "", colnames(nameRes(Y)))
# merge(nameRes(X), nameRes(Y))
}
getMergeRT(predResList["full"], predTolList["full"])
getMergeRT <- function(x, y){
names(x) <- "name"
# x <- data.frame(nameRes(x))
# colnames(nameRes(x)) <- gsub("name.", "", colnames(nameRes(x)))
#
# names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
#   paste(names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
# # names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
#   paste(names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
x
#
# names(nameRes(Y)) <- "name"
# Y <- data.frame(nameRes(Y))
# colnames(nameRes(Y)) <- gsub("name.", "", colnames(nameRes(Y)))
# merge(nameRes(X), nameRes(Y))
}
getMergeRT(predResList["full"], predTolList["full"])
getMergeRT <- function(x, y){
names(x) <- "name"
x <- data.frame(x)
colnames(x) <- gsub("name.", "", colnames(x))
#
# names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
#   paste(names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
# # names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
#   paste(names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
x
#
# names(nameRes(Y)) <- "name"
# Y <- data.frame(nameRes(Y))
# colnames(nameRes(Y)) <- gsub("name.", "", colnames(nameRes(Y)))
# merge(nameRes(X), nameRes(Y))
}
getMergeRT(predResList["full"], predTolList["full"])
getMergeRT <- function(x, y){
names(x) <- "name"
x <- data.frame(x)
colnames(x) <- gsub("name.", "", colnames(x))
names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
# # names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
#   paste(names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
x
#
# names(nameRes(Y)) <- "name"
# Y <- data.frame(nameRes(Y))
# colnames(nameRes(Y)) <- gsub("name.", "", colnames(nameRes(Y)))
# merge(nameRes(X), nameRes(Y))
}
getMergeRT(predResList["full"], predTolList["full"])
getMergeRT <- function(x, y){
names(x) <- "name"
x <- data.frame(x)
colnames(x) <- gsub("name.", "", colnames(x))
names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
names(y) <- "name"
y <- data.frame(y)
colnames(y) <- gsub("name.", "", colnames(y))
names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Tol", sep = "_")
merge(x, y)
}
getMergeRT(predResList["full"], predTolList["full"])
#### Final: Res-Tol plots
getMergeRT <- function(x, y){
names(x) <- "name"
x <- data.frame(x)
colnames(x) <- gsub("name.", "", colnames(x))
names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Res", sep = "_")
names(y) <- "name"
y <- data.frame(y)
colnames(y) <- gsub("name.", "", colnames(y))
names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Tol", sep = "_")
merge(x, y)
}
getMergeRT(predResList["full"], predTolList["full"])
finalplotDF <- merge(predResList["full"], predTolList["full"])
finalplotDF <- getMergeRT(predResList["full"], predTolList["full"])
finalplotDF
## test correlations
lapply(levels(finalplotDF$infection_isolate), function(x){
cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="spearman")})
finalplotDF
finalplot_Efer <- ggplot(finalplotDF_Efer, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
finalplotDF
finalplotDF <- getMergeRT(predResList["full"], predTolList["full"])
finalplotDF
finalplotDF_full<- getMergeRT(predResList["full"], predTolList["full"])
finalplotDF_full
finalplotDF <- finalplotDF_full
# Plot
finalplotDF_Efal <- finalplotDF[grep("falciformis", finalplotDF$group),]
finalplotDF_Efer <- finalplotDF[grep("ferrisi", finalplotDF$group),]
finalplotDF_Efal
finalplot_Efer <- ggplot(finalplotDF_Efer, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
finalplot_Efer
finalplot_Efal <- ggplot(finalplotDF_Efal, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
finalplot_Efal
finalplotDF <- finalplotDF_full
# Plot
finalplotDF_Efal <- finalplotDF[grep("falciformis", finalplotDF$group),]
finalplotDF_Efer <- finalplotDF[grep("ferrisi", finalplotDF$group),]
## test correlations
lapply(levels(finalplotDF$infection_isolate), function(x){
cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="spearman")})
cor(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="spearman")})
## test correlations
lapply(levels(finalplotDF$infection_isolate), function(x){
cor(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="spearman")})
levels(finalplotDF$infection_isolate)
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"]
## test correlations
lapply(levels(finalplotDF$infection_isolate), function(x){
cor(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="spearman")})
## test correlations
lapply(listPar, function(x){
cor(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="spearman")})
cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="spearman")})
## test correlations
lapply(listPar, function(x){
cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="spearman")})
cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"],
log10(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"]),
method="spearman")})
## test correlations
lapply(listPar, function(x){
cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"],
log10(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"]),
method="spearman")})
## test correlations
lapply(listPar, function(x){
cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Res"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="spearman")})
lapply(predResList, function(x){
lapply(predTolList, function(y){
getMergeRT(x,y)
})
})
finalplotDF_full <- getMergeRT(predResList["full"], predTolList["full"])
finalplotDF_cons1 <- getMergeRT(predResList["cons1"], predTolList["cons1"])
finalplotDF_cons2 <- getMergeRT(predResList["cons2"], predTolList["cons2"])
finalplotDF_cons2
finalplotDF_full <- getMergeRT(predResList["full"], predTolList["full"])
finalplotDF_cons1 <- getMergeRT(predResList["cons1"], predTolList["cons1"])
finalplotDF_cons2 <- getMergeRT(predResList["cons2"], predTolList["cons2"])
list_finalplotDf <- list(finalplotDF_full = finalplotDF_full,
finalplotDF_cons1 = finalplotDF_cons1,
finalplotDF_cons2 = finalplotDF_cons2)
## test correlations
lapply(list_finalplotDf, function(df){
lapply(listPar, function(x){
cor.test(df[df$infection_isolate %in% x, "predicted_Res"],
df[df$infection_isolate %in% x, "predicted_Tol"],
method="spearman")})
})
# Plot
getPlot <- function(df){
finalplotDF_Efal <- df[grep("falciformis", df$group),]
finalplotDF_Efer <- df[grep("ferrisi", df$group),]
}
# Plot
getPlot <- function(df){
finalplotDF_Efal <- df[grep("falciformis", df$group),]
finalplotDF_Efer <- df[grep("ferrisi", df$group),]
finalplot_Efer <- ggplot(finalplotDF_Efer, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
finalplot_Efal <- ggplot(finalplotDF_Efal, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
finalplot_Efal
}
# Plot
getPlot <- function(df){
finalplotDF_Efal <- df[grep("falciformis", df$group),]
finalplotDF_Efer <- df[grep("ferrisi", df$group),]
finalplot_Efer <- ggplot(finalplotDF_Efer, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
finalplot_Efal <- ggplot(finalplotDF_Efal, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
return(finalplot_Efer = finalplot_Efer, finalplot_Efal = finalplot_Efal)
}
lapply(list_finalplotDf, getPlot)
# Plot
getPlot <- function(df){
finalplotDF_Efal <- df[grep("falciformis", df$group),]
finalplotDF_Efer <- df[grep("ferrisi", df$group),]
finalplot_Efer <- ggplot(finalplotDF_Efer, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
finalplot_Efal <- ggplot(finalplotDF_Efal, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
return(finalplot_Efer = finalplot_Efer, finalplot_Efal = finalplot_Efal)
}
lapply(list_finalplotDf, getPlot)
list_finalplotDf
# Plot
getPlot <- function(df){
finalplotDF_Efal <- df[grep("falciformis", df$group),]
finalplotDF_Efer <- df[grep("ferrisi", df$group),]
# finalplot_Efer <- ggplot(finalplotDF_Efer, aes(x = predicted_Res, y = predicted_Tol)) +
#   geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
#   geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
#   geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
#   scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
#                      name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
#   scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
#                      breaks = seq(0, 3500000, 500000),
#                      labels = seq(0, 3500000, 500000)/1000000)+
#   scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
#
# finalplot_Efal <- ggplot(finalplotDF_Efal, aes(x = predicted_Res, y = predicted_Tol)) +
#   geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
#   geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
#   geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
#   scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
#                      name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
#   scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
#                      breaks = seq(0, 3500000, 500000),
#                      labels = seq(0, 3500000, 500000)/1000000)+
#   scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
# return(finalplot_Efer = finalplot_Efer, finalplot_Efal = finalplot_Efal)
}
lapply(list_finalplotDf, getPlot)
# Plot
getPlot <- function(df){
finalplotDF_Efal <- df[grep("falciformis", df$group),]
finalplotDF_Efer <- df[grep("ferrisi", df$group),]
finalplot_Efer <- ggplot(finalplotDF_Efer, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
# finalplot_Efal <- ggplot(finalplotDF_Efal, aes(x = predicted_Res, y = predicted_Tol)) +
#   geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
#   geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
#   geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
#   scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
#                      name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
#   scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
#                      breaks = seq(0, 3500000, 500000),
#                      labels = seq(0, 3500000, 500000)/1000000)+
#   scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
# return(finalplot_Efer = finalplot_Efer, finalplot_Efal = finalplot_Efal)
}
lapply(list_finalplotDf, getPlot)
# Plot
getPlot <- function(df){
finalplotDF_Efal <- df[grep("falciformis", df$group),]
finalplotDF_Efer <- df[grep("ferrisi", df$group),]
finalplot_Efer <- ggplot(finalplotDF_Efer, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
# finalplot_Efal <- ggplot(finalplotDF_Efal, aes(x = predicted_Res, y = predicted_Tol)) +
#   geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
#   geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
#   geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
#   scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
#                      name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
#   scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
#                      breaks = seq(0, 3500000, 500000),
#                      labels = seq(0, 3500000, 500000)/1000000)+
#   scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
return(finalplot_Efer = finalplot_Efer)#, finalplot_Efal = finalplot_Efal)
}
lapply(list_finalplotDf, getPlot)
# Plot
getPlot <- function(df){
finalplotDF_Efal <- df[grep("falciformis", df$group),]
finalplotDF_Efer <- df[grep("ferrisi", df$group),]
finalplot_Efer <- ggplot(finalplotDF_Efer, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
finalplot_Efal <- ggplot(finalplotDF_Efal, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
return(finalplot_Efer = finalplot_Efer)#, finalplot_Efal = finalplot_Efal)
}
lapply(list_finalplotDf, getPlot)
# Plot
getPlot <- function(df){
finalplotDF_Efal <- df[grep("falciformis", df$group),]
finalplotDF_Efer <- df[grep("ferrisi", df$group),]
finalplot_Efer <- ggplot(finalplotDF_Efer, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
finalplot_Efal <- ggplot(finalplotDF_Efal, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
return(finalplot_Efer = finalplot_Efer, finalplot_Efal = finalplot_Efal)
}
lapply(list_finalplotDf, getPlot)
# Plot
getPlot <- function(df){
finalplotDF_Efal <- df[grep("falciformis", df$group),]
finalplotDF_Efer <- df[grep("ferrisi", df$group),]
finalplot_Efer <- ggplot(finalplotDF_Efer, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
finalplot_Efal <- ggplot(finalplotDF_Efal, aes(x = predicted_Res, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_Res, xmax = conf.high_Res), color = "grey") +
geom_point(aes(col = Mouse_genotype, pch = infection_isolate), size = 7)+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
return(list(finalplot_Efer = finalplot_Efer, finalplot_Efal = finalplot_Efal))
}
lapply(list_finalplotDf, getPlot)
listPlots <- lapply(list_finalplotDf, getPlot)
listPlots$finalplotDF_full$finalplot_Efer
listPlots$finalplotDF_cons1$finalplot_Efer
listPlots$finalplotDF_full$finalplot_Efer
listPlots$finalplotDF_cons1$finalplot_Efer
listPlots$finalplotDF_cons2$finalplot_Efer
listPlots <- lapply(list_finalplotDf, getPlot)
listPlots$finalplotDF_full$finalplot_Efer
listPlots$finalplotDF_cons1$finalplot_Efer
listPlots$finalplotDF_cons2$finalplot_Efer
listPlots$finalplotDF_full$finalplot_Efal
listPlots$finalplotDF_cons1$finalplot_Efal
listPlots$finalplotDF_cons2$finalplot_Efal
listPlots$finalplotDF_full$finalplot_Efal
listPlots$finalplotDF_cons1$finalplot_Efal
listPlots$finalplotDF_cons2$finalplot_Efal
listPlots$finalplotDF_full$finalplot_Efal
listPlots$finalplotDF_cons1$finalplot_Efal
listPlots$finalplotDF_cons2$finalplot_Efal
########## All
ggplot(finalplotDF, aes(x = predicted_Res, y = predicted_Tol)) +
geom_point( aes(col = Mouse_genotype, pch = infection_isolate), size = 5)+
scale_fill_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
geom_smooth(method = "lm", se = F, aes(group = infection_isolate, linetype = infection_isolate)) +
scale_color_manual(values = as.character(levels(forMap$color)))  +
scale_x_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
scale_y_continuous("% weight loss by million OPG shed", labels = scales::percent_format(accuracy = 5L))
finalplot
