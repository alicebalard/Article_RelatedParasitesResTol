plotChoiceTolIndex
################################
##### Statistical analyses #####
################################
## LRT test
homemadeGtest <- function(full, base){
dLL = logLik(full) - logLik(base)
dDF = base$df.residual - full$df.residual
pvalue <- 1 - stats::pchisq(2*dLL, df=dDF)
chisqvalue <- stats::qchisq(p = pvalue, df=dDF)
print(paste0("G=",round(2*dLL, 1), " ,df=", dDF, " ,p=", round(pvalue, 6)))
}
## LRT significance for each factor
myLRTsignificanceFactors <- function(modFull, modPar, modMouse, modInt){
print("significance of parasite:")
homemadeGtest(modFull, modPar)
print("significance of mouse:")
homemadeGtest(modFull, modMouse)
print("significance of interaction:")
homemadeGtest(modFull, modInt)
}
# for posthoc tests
art2al_SUMdf$intFacSPECIES <- interaction(art2al_SUMdf$Eimeria_species,
art2al_SUMdf$Mouse_subspecies, drop=T)
art2al_SUMdf$intFacSTRAINS <- interaction(art2al_SUMdf$infection_isolate,
art2al_SUMdf$Mouse_genotype, drop=T)
SUBsummaryDF77mice$intFacSPECIES <- interaction(SUBsummaryDF77mice$Eimeria_species,
SUBsummaryDF77mice$Mouse_subspecies, drop=T)
SUBsummaryDF77mice$intFacSTRAINS <- interaction(SUBsummaryDF77mice$infection_isolate,
SUBsummaryDF77mice$Mouse_genotype, drop=T)
testSignif <- function(dataframe, which, level){
if(which == "RES"){
if(level == "SPECIES"){
modFULL <- glm.nb(max.OPG ~ Eimeria_species*Mouse_subspecies, data = dataframe)
modPara <- glm.nb(max.OPG ~ Mouse_subspecies, data = dataframe)
modMous <- glm.nb(max.OPG ~ Eimeria_species, data = dataframe)
modinter <- glm.nb(max.OPG ~ Eimeria_species+Mouse_subspecies, data = dataframe)
} else if (level == "STRAINS"){
modFULL <- glm.nb(max.OPG ~ infection_isolate*Mouse_genotype, data = dataframe)
modPara <- glm.nb(max.OPG ~ Mouse_genotype, data = dataframe)
modMous <- glm.nb(max.OPG ~ infection_isolate, data = dataframe)
modinter <- glm.nb(max.OPG ~ infection_isolate+Mouse_genotype, data = dataframe)
}
} else if (which == "IMP"){
if(level == "SPECIES"){
modFULL <- survreg(Surv(impact)~Eimeria_species*Mouse_subspecies, data = dataframe, dist="weibull")
modPara <- survreg(Surv(impact)~Mouse_subspecies, data = dataframe, dist="weibull")
modMous <- survreg(Surv(impact)~Eimeria_species, data = dataframe, dist="weibull")
modinter <- survreg(Surv(impact)~Eimeria_species+Mouse_subspecies, data = dataframe, dist="weibull")
} else if (level == "STRAINS"){
modFULL <- survreg(Surv(impact)~infection_isolate*Mouse_genotype, data = dataframe, dist="weibull")
modPara <- survreg(Surv(impact)~Mouse_genotype, data = dataframe, dist="weibull")
modMous <- survreg(Surv(impact)~infection_isolate, data = dataframe, dist="weibull")
modinter <- survreg(Surv(impact)~infection_isolate+Mouse_genotype, data = dataframe, dist="weibull")
}
} else if (which == "TOL"){
if(level == "SPECIES"){
modFULL <- lm(ToleranceIndex ~ Eimeria_species*Mouse_subspecies, data = dataframe)
modPara <- lm(ToleranceIndex ~ Mouse_subspecies, data = dataframe)
modMous <- lm(ToleranceIndex ~ Eimeria_species, data = dataframe)
modinter <- lm(ToleranceIndex ~ Eimeria_species+Mouse_subspecies, data = dataframe)
} else if (level == "STRAINS"){
modFULL <- lm(ToleranceIndex ~ infection_isolate*Mouse_genotype, data = dataframe)
modPara <- lm(ToleranceIndex ~ Mouse_genotype, data = dataframe)
modMous <- lm(ToleranceIndex ~ infection_isolate, data = dataframe)
modinter <- lm(ToleranceIndex ~ infection_isolate+Mouse_genotype, data = dataframe)
}
}
return(list(modfull = modFULL, LRT = myLRTsignificanceFactors(modFULL, modPara, modMous, modinter)))
}
testPostHoc <- function(dataframe, which, level){
if(level == "SPECIES"){
if(which == "RES"){
mod_multicomp <- glm.nb(max.OPG ~ intFacSPECIES, data = dataframe)
} else if(which == "IMP"){
mod_multicomp <- survreg(Surv(impact)~intFacSPECIES, data = dataframe, dist="weibull")
} else if(which == "TOL"){
mod_multicomp <- lm(ToleranceIndex ~ intFacSPECIES, data = dataframe)
}
return(summary(glht(mod_multicomp, linfct=mcp(intFacSPECIES = "Tukey"))))
}
if(level == "STRAINS"){
if(which == "RES"){
mod_multicomp <- glm.nb(max.OPG ~ intFacSTRAINS, data = dataframe)
} else if(which == "IMP"){
mod_multicomp <- survreg(Surv(impact)~intFacSTRAINS, data = dataframe, dist="weibull")
} else if(which == "TOL"){
mod_multicomp <- lm(ToleranceIndex ~ intFacSTRAINS, data = dataframe)
}
return(summary(glht(mod_multicomp, linfct=mcp(intFacSTRAINS = "Tukey"))))
}
}
# Resistance
testSignif(art2al_SUMdf, "RES", "SPECIES")
testSignif(SUBsummaryDF77mice, "RES", "SPECIES")
testSignif(art2al_SUMdf, "RES", "STRAINS")
testSignif(SUBsummaryDF77mice, "RES", "STRAINS")
# Impact
testSignif(art2al_SUMdf, "IMP", "SPECIES")
testSignif(SUBsummaryDF77mice, "IMP", "SPECIES")
testSignif(art2al_SUMdf, "IMP", "STRAINS")
testSignif(SUBsummaryDF77mice, "IMP", "STRAINS") ####### !!!
## Translation of 1% because Weibull doesn't support nul data
coef(testSignif(art2al_SUMdf, "IMP", "SPECIES")$modfull)
coefImp <- exp(coef(testSignif(art2al_SUMdf, "IMP", "SPECIES")$modfull))
coefImp[1] - 0.01# Efer-MmD: 6.1%
coefImp[1] * coefImp[2] - 0.01 # Efal-MmD: 9.3%
coefImp[1] * coefImp[3] - 0.01# Efer-Mmm: 8.3%
coefImp[1] * coefImp[2] * coefImp[3] * coefImp[4] -0.01 # Efal-Mmm: 18.7%
##########
## plot ##
##########
## To add Ns on top of bars
getNs <- function(proxy, df, groupMus = "Mouse_genotype", groupPar = "infection_isolate"){
noNA = df[!is.na(df[[proxy]]),]
noNA$groupMus = noNA[[groupMus]]
noNA$groupPar = noNA[[groupPar]]
tab = table(noNA$groupPar, noNA$groupMus)
Ns = as.character(as.vector(t(tab)[as.vector(t(tab))!=0]))
return(Ns)
}
############
## Resistance
# plot marginal effects of interaction terms
posx.1 <- c(0.9,1.1, 1.9,2.1)
get_plotR_SPECIES <- function(dataframe){
plot_model(testSignif(dataframe, "RES", "SPECIES")$modfull,
type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "red"),
name = "Mouse subspecies",labels = c("Mmd", "Mmm")) +
ggtitle("Maximum parasite load \n(mean and 95%CI)") +
scale_y_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 2500000, 500000),
labels = seq(0, 2500000, 500000)/1000000)+
xlab("Eimeria species") +
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.1,y=90000,label=getNs("max.OPG", dataframe,
"Mouse_subspecies", "Eimeria_species")), vjust=0)
}
# plot marginal effects of interaction terms by isolates & strains
posx.2 <- c(0.8+c(0,1/8,2/8,3/8),1.8+c(0,1/8,2/8,3/8),2.8+c(0,1/8,2/8,3/8))
get_plotR_STRAINS <- function(dataframe){
plot_model(testSignif(dataframe, "RES", "STRAINS")$modfull,
type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_y_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
ggtitle("Maximum parasite load \n(mean and 95%CI)") +
xlab("Eimeria isolate") +
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.2,y=120000,label=getNs("max.OPG", dataframe)),vjust=0)
}
plotR_SPECIES <- get_plotR_SPECIES(art2al_SUMdf)
plotR_SPECIES
plotR_SPECIES_77mice <- get_plotR_SPECIES(SUBsummaryDF77mice)
plotR_SPECIES_77mice
plotR_STRAINS <- get_plotR_STRAINS(art2al_SUMdf)
plotR_STRAINS
plotR_STRAINS_77mice <- get_plotR_STRAINS(SUBsummaryDF77mice)
plotR_STRAINS_77mice
## NB: art2al_SUMdf$impact <- art2al_SUMdf$relWL + 0.01
art2al_SUMdf %>%
group_by(Mouse_subspecies, Eimeria_species) %>%
summarise(meanImp = mean(impact, na.rm = T))
## NB. translate back 0.01
transValuesImp <- seq(0.01,0.31, 0.05)
as.character(transValuesImp - 0.01)
realValuesImpLabels <- c("0%", "5%", "10%", "15%", "20%", "25%", "30%")
get_plotI_SPECIES <- function(dataframe){
plot_model(testSignif(dataframe, "IMP", "SPECIES")$modfull,
type = "int",dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue","red"),
name = "Mouse subspecies",labels = c("Mmd", "Mmm")) +
xlab("Eimeria species") +
ggtitle("Maximum weight loss \n(mean and 95%CI)") +
scale_y_continuous(breaks = transValuesImp, labels = realValuesImpLabels,
name = "(predicted) maximum weight loss compared to day of infection")+
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.1,y=0,label=getNs("relWL", dataframe,
"Mouse_subspecies", "Eimeria_species")),vjust=0)
}
plotI_SPECIES <- get_plotI_SPECIES(art2al_SUMdf)
plotI_SPECIES
plotI_SPECIES_77mice <- get_plotI_SPECIES(SUBsummaryDF77mice)
plotI_SPECIES_77mice
get_plotI_STRAINS <- function(dataframe){
plot_model(testSignif(dataframe, "IMP", "STRAINS")$modfull,
type = "int",dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
xlab("Eimeria isolate") +
ggtitle("Maximum weight loss \n(mean and 95%CI)") +
scale_y_continuous(breaks = transValuesImp, labels = realValuesImpLabels,
name = "(predicted) maximum weight loss compared to day of infection")+
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.2,y=0,label=getNs("relWL", dataframe)),vjust=0)
}
plotI_STRAINS  <- get_plotI_STRAINS(art2al_SUMdf)
plotI_STRAINS
plotI_STRAINS_77mice <- get_plotI_STRAINS(SUBsummaryDF77mice)
plotI_STRAINS_77mice
# take the predictions from before
mydatx <- ggeffects::ggpredict(
model = testSignif(art2al_SUMdf, "RES", "STRAINS")$modfull,
terms = c("infection_isolate", "Mouse_genotype"), ci.lvl = 0.95)
names(mydatx)[2:5] <- paste0(names(mydatx)[2:5], "_OPG")
mydaty <- ggeffects::ggpredict(
model = testSignif(art2al_SUMdf, "IMP", "STRAINS")$modfull,
terms = c("infection_isolate", "Mouse_genotype"), ci.lvl = 0.95)
names(mydaty)[2:5] <- paste0(names(mydaty)[2:5], "_WL")
## NB. translate back 0.01 the y axis because we did
# art2al_SUMdf$impact <- art2al_SUMdf$relWL + 0.01
mydaty$predicted_WL <- mydaty$predicted_WL - 0.01
mydaty$conf.low_WL <- mydaty$conf.low_WL - 0.01
mydaty$conf.high_WL <- mydaty$conf.high_WL - 0.01
mydat <- merge(data.frame(mydatx), data.frame(mydaty))
mydat$x <- as.factor(mydat$x)
mydat$x <- plyr::mapvalues(mydat$x, from = c("1", "2", "3"), to = levels(art2al_SUMdf$infection_isolate))
# Trade-off plot
Fig5 <- ggplot(mydat, aes(x = predicted_OPG, y = predicted_WL, col = group)) +
geom_point(aes(pch = x), size = 2) +
geom_errorbar(aes(ymin = conf.low_WL, ymax = conf.high_WL), size = .2)+
geom_errorbarh(aes(xmin = conf.low_OPG, xmax = conf.high_OPG), size = .2)+
geom_smooth(method = "lm", col = "black", alpha = .2, aes(linetype = x), se = F) +
theme_bw()+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")+
scale_y_continuous(name = "(predicted) maximum weight loss \ncompared to day of infection",
breaks = seq(0,0.3, 0.05),
labels = c("0%", "5%", "10%", "15%", "20%", "25%", "30%")) +
ggtitle("Maximum weight loss = f(maximum parasite load) \n(mean and 95%CI)")
# pdf("../figures/Fig5.pdf", width = 8, height = 5)
Fig5
# full model
lm(relWL ~ max.OPG * infection_isolate, data = art2al_SUMdf)
# full model
modfull <- lm(relWL ~ max.OPG * infection_isolate, data = art2al_SUMdf)
modNOint <- lm(relWL ~ max.OPG + infection_isolate, data = art2al_SUMdf)
modNOOPG <- lm(relWL ~ infection_isolate, data = art2al_SUMdf)
modNOisolate <- lm(relWL ~ max.OPG, data = art2al_SUMdf)
# significance of OPG:
homemadeGtest(modFull, modNOOPG)
# significance of OPG:
homemadeGtest(modfull, modNOOPG)
# full model
modfull <- lm(relWL ~ max.OPG * infection_isolate, data = art2al_SUMdf)
modNOint <- lm(relWL ~ max.OPG + infection_isolate, data = art2al_SUMdf)
modNOOPG <- lm(relWL ~ infection_isolate, data = art2al_SUMdf)
modNOisolate <- lm(relWL ~ max.OPG, data = art2al_SUMdf)
# significance of OPG:
homemadeGtest(modfull, modNOOPG)
modNOOPG
modfull
# significance of parasite isolate
homemadeGtest(modfull, modNOisolate)
# significance of interaction = SLOPE
homemadeGtest(modfull, modNOint)
modfull
summary(glht(modfull, linfct=mcp(infection_isolate = "Tukey"))))
summary(glht(modfull, linfct=mcp(infection_isolate = "Tukey")))
summary(glht(modfull, linfct=mcp(infection_isolate = "Tukey")))
ggplot(mydat, aes(x = predicted_OPG, y = predicted_WL, col = group)) +
geom_point(aes(pch = x), size = 2) +
geom_errorbar(aes(ymin = conf.low_WL, ymax = conf.high_WL), size = .2)+
geom_errorbarh(aes(xmin = conf.low_OPG, xmax = conf.high_OPG), size = .2)+
geom_smooth(method = "lm", col = "black", alpha = .2, aes(linetype = x), se = F) +
theme_bw()+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
# scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")+
scale_y_continuous(name = "(predicted) maximum weight loss \ncompared to day of infection",
breaks = seq(0,0.3, 0.05),
labels = c("0%", "5%", "10%", "15%", "20%", "25%", "30%")) +
ggtitle("Maximum weight loss = f(maximum parasite load) \n(mean and 95%CI)")
modfull
predict(modfull)
plot_model(modfull, type = "pred", terms = c("max.OPG", "infection_isolate"))
## Plot
plot_model(modfull, type = "int")
## Plot
plot_model(modfull, type = "int") +
scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
# full model
modfull <- lm(relWL ~ max.OPG^2 + max.OPG * infection_isolate, data = art2al_SUMdf)
## Plot
plot_model(modfull, type = "int") +
scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
# full model
modfull <- lm(relWL ~ max.OPG * infection_isolate, data = art2al_SUMdf)
modNOint <- lm(relWL ~ max.OPG + infection_isolate, data = art2al_SUMdf)
modNOisolate <- lm(relWL ~ max.OPG, data = art2al_SUMdf)
# significance of parasite isolate
homemadeGtest(modfull, modNOisolate)
# significance of interaction -> different slopes per parasite isolate?
homemadeGtest(modfull, modNOint)
## Plot
plot_model(modfull, type = "int") +
scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
## Plot
plot_model(modfull, type = "int") #+
# take the predictions from before
mydatx <- ggeffects::ggpredict(
model = testSignif(art2al_SUMdf, "RES", "STRAINS")$modfull,
terms = c("infection_isolate", "Mouse_genotype"), ci.lvl = 0.95)
names(mydatx)[2:5] <- paste0(names(mydatx)[2:5], "_OPG")
mydaty <- ggeffects::ggpredict(
model = testSignif(art2al_SUMdf, "IMP", "STRAINS")$modfull,
terms = c("infection_isolate", "Mouse_genotype"), ci.lvl = 0.95)
names(mydaty)[2:5] <- paste0(names(mydaty)[2:5], "_WL")
## NB. translate back 0.01 the y axis because we did
# art2al_SUMdf$impact <- art2al_SUMdf$relWL + 0.01
mydaty$predicted_WL <- mydaty$predicted_WL - 0.01
mydaty$conf.low_WL <- mydaty$conf.low_WL - 0.01
mydaty$conf.high_WL <- mydaty$conf.high_WL - 0.01
mydat <- merge(data.frame(mydatx), data.frame(mydaty))
mydat$x <- as.factor(mydat$x)
mydat$x <- plyr::mapvalues(mydat$x, from = c("1", "2", "3"), to = levels(art2al_SUMdf$infection_isolate))
# take the predictions from before
mydatx <- ggeffects::ggpredict(
model = testSignif(art2al_SUMdf, "RES", "STRAINS")$modfull,
terms = c("infection_isolate", "Mouse_genotype"), ci.lvl = 0.95)
names(mydatx)[2:5] <- paste0(names(mydatx)[2:5], "_OPG")
mydaty <- ggeffects::ggpredict(
model = testSignif(art2al_SUMdf, "IMP", "STRAINS")$modfull,
terms = c("infection_isolate", "Mouse_genotype"), ci.lvl = 0.95)
names(mydaty)[2:5] <- paste0(names(mydaty)[2:5], "_WL")
mydatx
mydaty
## NB. translate back 0.01 the y axis because we did
# art2al_SUMdf$impact <- art2al_SUMdf$relWL + 0.01
mydaty$predicted_WL <- mydaty$predicted_WL - 0.01
mydaty$conf.low_WL <- mydaty$conf.low_WL - 0.01
mydaty$conf.high_WL <- mydaty$conf.high_WL - 0.01
mydat <- merge(data.frame(mydatx), data.frame(mydaty))
mydat
## Plot
plot_model(modfull, type = "int") +
# scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
geom_point(mydat, aes(x = predicted_OPG, y = predicted_WL, col = group, pch = x), size = 2)
modfull
## Plot
plot_model(modfull, type = "int") +
# scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
geom_point(mydat, aes(x = predicted_OPG, y = predicted_WL, col = group, pch = x), size = 2)
## Plot
plot_model(modfull, type = "int") +
# scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, col = group, pch = x), size = 2)
## Plot
plot_model(modfull, type = "int") +
# scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL), size = 2)
mydat
## Plot
plot_model(modfull, type = "int") +
# scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, col = group, pch = x), size = 2)
modfull$effects
modfull$xlevels
mydat
# mydat$x <- as.factor(mydat$x)
# mydat$x <- plyr::mapvalues(mydat$x, from = c("1", "2", "3"), to = levels(art2al_SUMdf$infection_isolate))
names(mydat$x)
# mydat$x <- as.factor(mydat$x)
# mydat$x <- plyr::mapvalues(mydat$x, from = c("1", "2", "3"), to = levels(art2al_SUMdf$infection_isolate))
names(mydat)
# mydat$x <- as.factor(mydat$x)
# mydat$x <- plyr::mapvalues(mydat$x, from = c("1", "2", "3"), to = levels(art2al_SUMdf$infection_isolate))
names(mydat)[names(mydat) =="x"]
# mydat$x <- as.factor(mydat$x)
# mydat$x <- plyr::mapvalues(mydat$x, from = c("1", "2", "3"), to = levels(art2al_SUMdf$infection_isolate))
names(mydat)[names(mydat) =="x"] <- infection_isolate
# mydat$x <- as.factor(mydat$x)
# mydat$x <- plyr::mapvalues(mydat$x, from = c("1", "2", "3"), to = levels(art2al_SUMdf$infection_isolate))
names(mydat)[names(mydat) =="x"] <- "infection_isolate"
names(mydat)
mydat
names(mydat)[names(mydat) =="group"] <- "group_col"
## Plot
plot_model(modfull, type = "int") +
# scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, col = group, pch = x), size = 2)
## Plot
plot_model(modfull, type = "int") +
# scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL), size = 2)
testSignif
mydatx
mydat
mydat <- merge(data.frame(mydatx), data.frame(mydaty))
# mydat$x <- as.factor(mydat$x)
# mydat$x <- plyr::mapvalues(mydat$x, from = c("1", "2", "3"), to = levels(art2al_SUMdf$infection_isolate))
names(mydat)[names(mydat) =="x"] <- "group_col"
## Plot
plot_model(modfull, type = "int") +
# scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL), size = 2)
names(mydat)[names(mydat) =="group"] <- "Mouse_genotype"
## Plot
plot_model(modfull, type = "int") +
# scale_x_log10(name = "(predicted) maximum oocysts per gram of feces")
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 2)
## Plot
plot_model(modfull, type = "int") +
scale_y_log10(name = "(predicted) maximum oocysts per gram of feces")
## Plot
plot_model(modfull, type = "int") +
scale_y_log(name = "(predicted) maximum oocysts per gram of feces")
## Plot
plot_model(modfull, type = "int") +
scale_y_sqrt(name = "(predicted) maximum oocysts per gram of feces")
## Plot
plot_model(modfull, type = "int") +
# scale_y_sqrt(name = "(predicted) maximum oocysts per gram of feces")
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 2)
## Plot
plot_model(modfull, type = "int") +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces")
## Plot
plot_model(modfull, type = "int") +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 2)
## Plot
plot_model(modfull, type = "int") +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 2) +
geom_point(data = art2al_SUMdf, aes(x = max.OPG, y = relWL, pch = Mouse_genotype), size = 2)
## Plot
plot_model(modfull, type = "int") +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 2) #+
## Plot
plot_model(modfull, type = "int") +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 2) +
geom_point(data = art2al_SUMdf, aes(x = max.OPG, y = relWL), size = 2)
mydat
art2al_SUMdf
mydat$predicted_OPG
art2al_SUMdf$max.OPG
mydat$predicted_WL
art2al_SUMdf$relWL
## Plot
plot_model(modfull, type = "int") +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
# geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 2) +
geom_point(data = art2al_SUMdf, aes(x = max.OPG, y = relWL), size = 2)
mydat$Mouse_genotype
mydat$group_col
art2al_SUMdf$infection_isolate
## Plot
art2al_SUMdf$group_col <- art2al_SUMdf$infection_isolate
plot_model(modfull, type = "int") +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
# geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 2) +
geom_point(data = art2al_SUMdf, aes(x = max.OPG, y = relWL), size = 2)
plot_model(modfull, type = "int") +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 2) +
geom_point(data = art2al_SUMdf, aes(x = max.OPG, y = relWL), size = 2)
plot_model(modfull, type = "int") +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 2) +
geom_point(data = art2al_SUMdf, aes(x = max.OPG, y = relWL), size = 1, alpha = 0.2)
plot_model(modfull, type = "int") +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 2) +
geom_point(data = art2al_SUMdf, aes(x = max.OPG, y = relWL), size = 1, alpha = 0.5)
plot_model(modfull, type = "int") +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 5) +
geom_point(data = art2al_SUMdf, aes(x = max.OPG, y = relWL), size = 1, alpha = 0.5)
plot_model(modfull, type = "int", se = FALSE) +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 5) +
geom_point(data = art2al_SUMdf, aes(x = max.OPG, y = relWL), size = 1, alpha = 0.5)
plot_model(modfull, type = "int", se = NULL) +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 5) +
geom_point(data = art2al_SUMdf, aes(x = max.OPG, y = relWL), size = 1, alpha = 0.5)
plot_model(modfull, type = "int", se = NULL) +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 5)
mydat$Mouse_genotype
plot_model(modfull, type = "int", se = NULL) +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 5)
# pdf("../figures/Fig5.pdf", width = 8, height = 5)
Fig5
plot_model(modfull, type = "int", se = NULL) +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 5) +
geom_errorbar(data = mydat, aes(ymin = conf.low_WL, ymax = conf.high_WL), size = .2)+
geom_errorbarh(data = mydat,aes(xmin = conf.low_OPG, xmax = conf.high_OPG), size = .2)
plot_model(modfull, type = "int", se = NULL) +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 5)
plot_model(modfull, type = "int", se = NULL) +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 5) +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
scale_y_continuous(name = "(predicted) maximum weight loss \ncompared to day of infection",
breaks = seq(0,0.3, 0.05),
labels = c("0%", "5%", "10%", "15%", "20%", "25%", "30%"))
plot_model(modfull, type = "int") +
geom_point(data = mydat, aes(x = predicted_OPG, y = predicted_WL, pch = Mouse_genotype), size = 5) +
scale_x_continuous(name = "(predicted) maximum oocysts per gram of feces") +
scale_y_continuous(name = "(predicted) maximum weight loss \ncompared to day of infection",
breaks = seq(0,0.3, 0.05),
labels = c("0%", "5%", "10%", "15%", "20%", "25%", "30%"))
