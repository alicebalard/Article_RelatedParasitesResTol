# calculate prevalence (rough cut in the middle)
fieldDF$MusSubSp[fieldDF$HI < 0.5] <- "Mmd"
fieldDF$MusSubSp[fieldDF$HI >= 0.5] <- "Mmm"
# by halves
library(dplyr)
D1 <- fieldDF %>%
dplyr::group_by(MusSubSp) %>%
dplyr::summarize(n_halfHZ = n()) %>%
as.data.frame()
D2 <- fieldDF %>%
dplyr::group_by(MusSubSp, Species) %>%
dplyr::summarize(n = n()) %>%
as.data.frame()
prevalenceDF <- merge(D1, D2)
prevalenceDF$prevalence <- round(prevalenceDF$n / prevalenceDF$n_halfHZ *100, 2)
prevalenceDF
library(tidyr)
spread(prevalenceDF[c("MusSubSp", "prevalence", "Species")], MusSubSp, prevalence)
# check y farm that there is no bias
fieldDF$locality <- paste(fieldDF$Latitude, fieldDF$Longitude, sep = "_")
View(fieldDF)
fieldDF$locality
unique(fieldDF$locality)
ddply(fieldDF, "locality", head, 1)
library(plyr)
plyr::ddply(fieldDF, "locality", head, 1)
fieldDFLOC <- plyr::ddply(fieldDF, "locality", head, 1)
D3 <- fieldDFLOC %>%
dplyr::group_by(MusSubSp) %>%
dplyr::summarize(n_halfHZ = n()) %>%
as.data.frame()
D4 <- fieldDFLOC %>%
dplyr::group_by(MusSubSp, Species) %>%
dplyr::summarize(n = n()) %>%
as.data.frame()
prevalenceDFLOC <- merge(D3, D4)
prevalenceDFLOC <- merge(D3, D4)
prevalenceDFLOC$prevalence <- round(prevalenceDFLOC$n / prevalenceDFLOC$n_halfHZ *100, 2)
prevalenceDFLOC
read.csv("/home/alice/Downloads/alphaDiv.csv")
alphaDiv <- read.csv("/home/alice/Downloads/alphaDiv.csv")
parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal")
alphaDiv$SexAl
parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal", group = "SexAl")
library(mle2)
install.packages("mle2")
install.packages("optimx")
library(optimx)
parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal", group = "SexAl")
parasiteLoad::getParamBounds(model = "normal", data = alphaDiv, response = "Chao1")
parasiteLoad::getParamBounds(model = "normal", data = alphaDiv, response = "Chao1")
hist(alphaDiv[["Chao1"]])
# improve paramBounds
speparam <- c(L1start = 200,
L1LB = 50,
L1UB = 500,
L2start = 200,
L2LB = 50,
L2UB = 500,
alphaStart = 0, alphaLB = -100, alphaUB = 100,
mysdStart = 1, mysdLB = 1.e-9, mysdUB = 1000)
parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal", group = "SexAl",
myparamBounds = speparam)
parasiteLoad::analyse(data = body_data_eimeria,
response = "residuals",
model = "normal",
group = "presence_eimeria_tissues",
myparamBounds = speparam)
# improve paramBounds
speparam <- c(L1start = 0,
L1LB = -20,
L1UB = 20,
L2start = 0,
L2LB = -20,
L2UB = 20,
alphaStart = 0, alphaLB = -100, alphaUB = 100,
mysdStart = 1, mysdLB = 1.e-9, mysdUB = 1000)
min(stats::na.omit(body_data_eimeria[["residuals"]]))
hist(body_data_eimeria[["residuals"]])
##All
fitResiduals_eimeria <-
parasiteLoad::analyse(data = body_data_eimeria,
response = "residuals",
model = "normal",
group = "presence_eimeria_tissues",
myparamBounds = speparam)
devtools::install_github("alicebalard/parasiteLoad@v2.0")
library(parasiteLoad)
# improve paramBounds
speparam <- c(L1start = 0,
L1LB = -20,
L1UB = 20,
L2start = 0,
L2LB = -20,
L2UB = 20,
alphaStart = 0, alphaLB = -100, alphaUB = 100,
mysdStart = 1, mysdLB = 1.e-9, mysdUB = 1000)
min(stats::na.omit(body_data_eimeria[["residuals"]]))
hist(body_data_eimeria[["residuals"]])
##All
fitResiduals_eimeria <-
parasiteLoad::analyse(data = body_data_eimeria,
response = "residuals",
model = "normal",
group = "presence_eimeria_tissues",
myparamBounds = speparam)
source("DataPreparation.R")
source("../../Article_IntensityEimeriaHMHZ/code/DataPreparation.R")
# improve paramBounds
speparam <- c(L1start = 0,
L1LB = -20,
L1UB = 20,
L2start = 0,
L2LB = -20,
L2UB = 20,
alphaStart = 0, alphaLB = -100, alphaUB = 100,
mysdStart = 1, mysdLB = 1.e-9, mysdUB = 1000)
min(stats::na.omit(body_data_eimeria[["residuals"]]))
hist(body_data_eimeria[["residuals"]])
##All
fitResiduals_eimeria <-
parasiteLoad::analyse(data = body_data_eimeria,
response = "residuals",
model = "normal",
group = "presence_eimeria_tissues",
myparamBounds = speparam)
parasiteLoad::getParamBounds(model = "normal", data = alphaDiv, response = "Chao1")
# improve paramBounds
speparam <- c(L1start = 200,
L1LB = 50,
L1UB = 500,
L2start = 200,
L2LB = 50,
L2UB = 500,
alphaStart = 0, alphaLB = -100, alphaUB = 100,
mysdStart = 1, mysdLB = 1.e-9, mysdUB = 1000)
parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal", group = "SexAl",
myparamBounds = speparam)
parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal", group = "SexAl")#,
alphaDiv$Chao1
alphaDiv$HI
alphaDiv <- alphaDiv[!is.na(alphaDiv$Hi),]
parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal", group = "SexAl")#,
parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal", group = "SexAl"),
myparamBounds = speparam)
alphaDiv <- read.csv("/home/alice/Downloads/alphaDiv.csv")
alphaDiv[!is.na(alphaDiv$Hi),]
alphaDiv[!is.na(alphaDiv$HI),]
alphaDiv <- alphaDiv[!is.na(alphaDiv$HI),]
parasiteLoad::getParamBounds(model = "normal", data = alphaDiv, response = "Chao1")
parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal", group = "SexAl")
fitChao <- parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal", group = "SexAl")
fitChao
##All
fitResiduals_eimeria <-
parasiteLoad::analyse(data = body_data_eimeria,
response = "residuals",
model = "normal",
group = "presence_eimeria_tissues",
myparamBounds = speparam)
warnings()
devtools::install_github("alicebalard/parasiteLoad@v0.1")
devtools::install_github("alicebalard/parasiteLoad@0.1")
library(parasiteLoad)
D3 <- fieldDFLOC %>%
dplyr::group_by(MusSubSp) %>%
dplyr::summarize(n_halfHZ = n()) %>%
as.data.frame()
alphaDiv <- read.csv("/home/alice/Downloads/alphaDiv.csv")
alphaDiv <- alphaDiv[!is.na(alphaDiv$HI),]
fitChao <- parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal", group = "SexAl")
fit_WATWM_intensity <- parasiteLoad::analyse(
data = pinwormsdata_watwm[pinwormsdata_watwm$Aspiculuris.Syphacia >=1,],
response = "Aspiculuris.Syphacia", group = "Sex", model = "negbin")
remove.packages("parasiteLoad", lib="~/R/x86_64-pc-linux-gnu-library/3.5")
devtools::install_github("alicebalard/parasiteLoad@0.1")
library(parasiteLoad)
alphaDiv <- read.csv("/home/alice/Downloads/alphaDiv.csv")
alphaDiv <- alphaDiv[!is.na(alphaDiv$HI),]
fitChao <- parasiteLoad::analyse(data = alphaDiv, response = "Chao1", model = "normal", group = "SexAl")
fit_WATWM_intensity <- parasiteLoad::analyse(
data = pinwormsdata_watwm[pinwormsdata_watwm$Aspiculuris.Syphacia >=1,],
response = "Aspiculuris.Syphacia", group = "Sex", model = "negbin")
#### Load data and functions within ####
source("dataPreparation.R")
###### Map of our samples FIGURE 1 (with design) ######
hmhzline <- read.csv("../data/HMHZ.csv")
area <- get_stamenmap(bbox = c(9, 49, 17, 53.7), zoom = 7,
maptype = "toner-lite")
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
pdf(file = "../figures/Fig1.pdf", width = 5, height =5)
map
dev.off()
# full data
rawDF108mice <- DF_all[grep("F0", DF_all$Mouse_genotype),]
length(unique(rawDF108mice$EH_ID))
levels(rawDF108mice$infection_isolate) <- c("Brandenburg139 (E. ferrisi)",
"Brandenburg64 (E. ferrisi)", "Brandenburg88 (E. falciformis)")
# summary data
summaryDF108mice <- ALL_summary_F0
summaryDF108mice$Mouse_genotype <- droplevels(factor(summaryDF108mice$Mouse_genotype))
summaryDF108mice$Mouse_subspecies <- droplevels(factor(summaryDF108mice$Mouse_subspecies))
levels(summaryDF108mice$infection_isolate) <- c("Brandenburg139 (E. ferrisi)",
"Brandenburg64 (E. ferrisi)", "Brandenburg88 (E. falciformis)")
summaryDF108mice$Eimeria_species <- as.factor(summaryDF108mice$Eimeria_species)
summaryDF108mice$Eimeria_species <- relevel(summaryDF108mice$Eimeria_species, "E.ferrisi")
length(na.omit(summaryDF108mice$relWL))# 108 F0 mice
length(na.omit(summaryDF108mice$peak.oocysts.per.g.mouse))# 99 F0 mice
length(na.omit(summaryDF108mice$invtolerance))# 99 F0 mice
## Set infection group (group 1 had anthelminthics, did not kill worms, stopped after: test effect)
summaryDF108mice$batch <- summaryDF108mice$Exp_ID
levels(summaryDF108mice$batch) <- c("B1", "B2", "B3", "B4", "B5", "B6")
summaryDF108mice$anth<- FALSE
summaryDF108mice$anth[summaryDF108mice$batch %in% "B1"] <- TRUE
table(summaryDF108mice$infection_isolate, summaryDF108mice$Mouse_genotype, summaryDF108mice$anth)
## Age of mice
range(as.numeric(rawDF108mice$ageAtInfection))
###### what is the overall peak day for each parasite isolate? ######
aggregate(summaryDF108mice$dpi_max.oocysts.per.tube,
list(summaryDF108mice$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
aggregate(summaryDF108mice$dpi_minWeight,
list(summaryDF108mice$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### what is the overall prepatent period for each parasite isolate? ######
d <- as.data.frame(
rawDF108mice[!is.na(rawDF108mice$oocysts.per.tube) & rawDF108mice$oocysts.per.tube > 0,] %>%
dplyr::group_by(EH_ID) %>%
dplyr::slice(which.min(dpi)) %>%
dplyr::select(EH_ID, weight, HI, startingWeight, ageAtInfection, Sex,
Mouse_genotype, Eimeria_species, Mouse_subspecies,
infection_isolate, Exp_ID, dpi))
aggregate(d$dpi,
list(d$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### Course of infection FIGURE 2 ######
forplot <- rawDF108mice %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(oocysts.per.tube*10e-6, na.rm = TRUE),
sd = sd(oocysts.per.tube*10e-6, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.1 <- ggplot(forplot, aes(dpi, mean, group = infection_isolate, col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("oocysts shed (10e6)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.8)) +
labs(color = "Eimeria isolate")
forplot2 <- rawDF108mice %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(relativeWeight, na.rm = TRUE),
sd = sd(relativeWeight, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.2 <- ggplot(forplot2, aes(dpi, mean, group = infection_isolate,
col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("relative weight compared to day 0 (%)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.2)) +
labs(color = "Eimeria isolate")
library(cowplot)
Fig2 <- plot_grid(F2.1, F2.2,
labels=c("A", "B"), label_size = 20)
#pdf(file = "../figures/Fig2.pdf", width = 10, height = 5)
Fig2
## Correlation sum of oocysts / peak oocysts
ggplot(summaryDF108mice, aes(sumoocysts.per.tube, max.oocysts.per.tube)) +
geom_smooth(method = "lm")+ geom_point()
cor(summaryDF108mice$sumoocysts.per.tube , summaryDF108mice$max.oocysts.per.tube,
method = "pearson")
xRes <- as.numeric(na.omit(summaryDF108mice$peak.oocysts.per.g.mouse))
xImp <- as.numeric(na.omit(summaryDF108mice$relWL))
xTol <- as.numeric(na.omit(summaryDF108mice$invtolerance))
hist(xRes, breaks = 100)
descdist(xRes)
# pdf("../figures/supfig1.1.pdf")
findGoodDist(x = xRes, distribs = c("normal", "negative binomial"),
distribs2 = c("norm", "nbinom"))
hist(xImp, breaks = 100)
descdist(xImp)
pdf("../figures/supfig1.2.pdf")
findGoodDist(x = xImp+ 0.01, distribs = c("normal", "weibull"),
distribs2 = c("norm", "weibull"))
dev.off()
summaryDF108mice$impact <- summaryDF108mice$relWL +0.01
# for tolerance, we need to find a way to deal with the massive extreme values
hist(xTol, breaks = 1000)
descdist(xTol)
## too skewed, so we log transform it
translation <- 1e-8
xTol2 <- log10(xTol+translation)
range(xTol2)
hist(xTol2, breaks = 1000)
descdist(xTol2)
pdf("../figures/supfig1.3.pdf")
findGoodDist(x = xTol2, distribs = c("normal"),
distribs2 = c("norm"))
dev.off()
### We translate, log transfor the data to deal with skewness
summaryDF108mice$tolerance <- log10(summaryDF108mice$invtolerance+translation) + 8
summaryDF108mice[is.na(summaryDF108mice$tolerance), c("EH_ID", "Mouse_genotype", "relWL", "peak.oocysts.per.g.mouse")]
################
## Resistance ##
################
# Mmd vs Mmm
modResSubsp <- glm.nb(peak.oocysts.per.g.mouse ~ Eimeria_species*Mouse_subspecies, data = summaryDF108mice)
anova(modResSubsp)
# SIGNIF infection isolate (p-value = 0.02236) + interactions with mice (p-value = 6.52e-07)
plot_model(modResSubsp, type = "int", dot.size = 4, dodge = .5)
# by strains
modResStrain <- glm.nb(peak.oocysts.per.g.mouse ~ infection_isolate*Mouse_genotype,
data = summaryDF108mice)
anova(modResStrain, test = "LRT")
# SIGNIF infection isolate (p-value = 0.01902) + interactions with mice (p-value = 8.432e-05)
plot_model(modResStrain, type = "int", dot.size = 4, dodge = .5)
############
## Impact ##
############
modImpSubsp <- survreg(Surv(impact)~Eimeria_species*Mouse_subspecies, data = summaryDF108mice, dist="weibull")
anova(modImpSubsp) # Eimeria species AND mouse subspecies significant
plot_model(modImpSubsp, type = "int",dot.size = 4, dodge = .5)
## Translation of 1% because Weibull doesn't support nul data
modImpStrain <- survreg(Surv(impact)~infection_isolate*Mouse_genotype, data = summaryDF108mice, dist="weibull")
anova(modImpStrain)
length(summaryDF108mice$relWL)
# Eimeria isolate significant
plot_model(modImpStrain, type = "int",dot.size = 4, dodge = .5)
modTolSubspecies <- lm(tolerance ~ Eimeria_species*Mouse_subspecies, data = summaryDF108mice)
anova(modTolSubspecies)
plot_model(modTolSubspecies, type = "int", dot.size = 4, dodge = .5)
length(na.omit(summaryDF108mice$tolerance))
modTolStrain <- lm(tolerance ~ infection_isolate*Mouse_genotype, data = summaryDF108mice)
anova(modTolStrain)
# mouse genotype & interactions significant
plot_model(modTol, type = "int", dot.size = 4, dodge = .5)
## TEST WITHOUT COINF BATCHES --> same direction
bonusmod <-  lm(tolerance ~ Eimeria_species*Mouse_subspecies,
data = summaryDF108mice[!summaryDF108mice$batch %in% c("B5", "B6"),])#                     dist="weibull")
anova(bonusmod)
plot_model(bonusmod, type = "int",dot.size = 4, dodge = .5)
## To add Ns on top of bars
getNs <- function(proxy, df, groupMus = "Mouse_genotype", groupPar = "infection_isolate"){
noNA = df[!is.na(df[[proxy]]),]
noNA$groupMus = noNA[[groupMus]]
noNA$groupPar = noNA[[groupPar]]
tab = table(noNA$groupPar, noNA$groupMus)
Ns = as.character(as.vector(t(tab)[as.vector(t(tab))!=0]))
return(Ns)
}
# plot marginal effects of interaction terms
posx.1 <- c(0.9,1.1, 1.9,2.1)
## and plot
plotR_F0_subsp <- plot_model(modResSubsp, type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "red"),
name = "Mouse subspecies",labels = c("Mmd", "Mmm")) +
ggtitle("Resistance", subtitle = "low parasite burden = high resistance") +
scale_y_log10("(predicted) max parasite density",
breaks = c(2000,5000, 10000, 20000, 50000, 100000,200000),
labels = c(2,5, 10, 20, 50, 100,200))+
xlab("Eimeria species") +
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.1,y=3000,label=getNs("peak.oocysts.per.g.mouse", summaryDF108mice,
"Mouse_subspecies", "Eimeria_species")), vjust=0)
plotR_F0_subsp
plotI_F0_subsp <- plot_model(modImpSubsp, type = "int",dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue","red"),
name = "Mouse subspecies",labels = c("Mmd", "Mmm")) +
xlab("Eimeria species") +
ggtitle("Impact on host health") +
ylab("(predicted) maximum weight loss") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.1,y=0,label=getNs("relWL", summaryDF108mice,
"Mouse_subspecies", "Eimeria_species")),vjust=0)
plotI_F0_subsp
plotT_F0_subsp <- plot_model(modTolSubspecies, type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "red"),
name = "Mouse subspecies",labels = c("Mmd", "Mmm")) +
xlab("Eimeria species") +
ylab("(predicted) tolerance index")+
ggtitle("Tolerance", subtitle = "low values = high tolerance") +
theme(axis.title.x = element_text(hjust=1), axis.text = element_text(size=13))+
geom_text(aes(x=posx.1,y=0.2,label=getNs("tolerance", summaryDF108mice,
"Mouse_subspecies", "Eimeria_species")),vjust=0)
plotT_F0_subsp
# Fig 3.
Fig3 <- plot_grid(plotR_F0_subsp + theme(legend.position = "none"),
plotI_F0_subsp + theme(legend.position = "none"),
plotT_F0_subsp,
plotT_F0_subsp + theme(legend.position = "none"),
labels=c("A", "B", "C", "D"), label_size = 20)
Fig3
pdf(file = "../figures/Fig3.pdf",
width = 9, height = 9)
Fig3
dev.off()
# plot marginal effects of interaction terms
posx <- c(0.8+c(0,1/8,2/8,3/8),1.8+c(0,1/8,2/8,3/8),2.8+c(0,1/8,2/8,3/8))
## and plot
plotR_F0 <- plot_model(modResStrain, type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
ggtitle("Resistance", subtitle = "low parasite burden = high resistance") +
scale_y_log10("(predicted) max parasite density",
breaks = c(2000,5000, 10000, 20000, 50000, 100000,200000),
labels = c(2,5, 10, 20, 50, 100,200))+
xlab("Eimeria isolate") +
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx,y=3000,label=getNs("peak.oocysts.per.g.mouse", summaryDF108mice)),vjust=0)
plotR_F0
plotI_F0 <- plot_model(modImpStrain, type = "int",dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
xlab("Eimeria isolate") +
ggtitle("Impact on host health") +
ylab("(predicted) maximum weight loss") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx,y=0,label=getNs("relWL", summaryDF108mice)),vjust=0)
plotI_F0
plotT_F0 <- plot_model(modTolStrain, type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
xlab("Eimeria isolate") +
ylab("(predicted) tolerance index")+
ggtitle("Tolerance", subtitle = "low values = high tolerance") +
theme(axis.title.x = element_text(hjust=1), axis.text = element_text(size=13))+
geom_text(aes(x=posx,y=0.2,label=getNs("tolerance", summaryDF108mice)),vjust=0)
plotT_F0
Fig4 <- plot_grid(plotR_F0 + theme(legend.position = "none"),
plotI_F0 + theme(legend.position = "none"),
plotT_F0,
plotT_F0 + theme(legend.position = "none"),
labels=c("A", "B", "C", "D"), label_size = 20)
Fig4
pdf(file = "../figures/Fig4.pdf",
width = 9, height = 9)
Fig4
dev.off()
## FINAL test impact of anthelminthics on our 3 variables
summaryDF108mice$anth
mresanth <- glm.nb(peak.oocysts.per.g.mouse ~ anth + infection_isolate*Mouse_genotype, data = summaryDF108mice)
anova(mresanth, test = "LRT")
mimpanth <- survreg(Surv(impact)~anth +infection_isolate*Mouse_genotype, data = summaryDF108mice, dist="weibull")
anova(mimpanth)
mtolanth <- lm(tolerance ~ anth + infection_isolate*Mouse_genotype, data = summaryDF108mice)
anova(mtolanth)
# contamination
coinfMice <- rawDF108mice[rawDF108mice$dpi %in% 0 & rawDF108mice$oocysts.per.tube > 0 &
!is.na(rawDF108mice$oocysts.per.tube), ]
nrow(coinfMice) # 9 mice
table(coinfMice$Mouse_strain, coinfMice$infection_isolate)
summaryDF108mice[summaryDF108mice$EH_ID %in% coinfMice$EH_ID,]
summaryDF108mice$tolerance
ggplot(summaryDF108mice, aes(x = peak.oocysts.per.g.mouse, y = tolerance)) +
geom_point()
ggplot(summaryDF108mice, aes(x = peak.oocysts.per.g.mouse, y = tolerance, fill = Mouse_genotype, col = infection_isolate)) +
geom_point()
ggplot(summaryDF108mice, aes(x = peak.oocysts.per.g.mouse, y = tolerance,
fill = Mouse_genotype, col = infection_isolate)) +
geom_point(pch=21)
ggplot(summaryDF108mice, aes(x = peak.oocysts.per.g.mouse, y = tolerance,
fill = Mouse_genotype, col = infection_isolate)) +
geom_point(pch=21, size = 4)
ggplot(summaryDF108mice, aes(x = peak.oocysts.per.g.mouse, y = tolerance,
fill = Mouse_genotype, col = infection_isolate)) +
geom_point(pch=21, size = 4) +
scale_fill_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"))
ggplot(summaryDF108mice, aes(x = peak.oocysts.per.g.mouse, y = tolerance,
fill = Mouse_genotype, shape = infection_isolate)) +
geom_point(pch=21, size = 4) +
scale_fill_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"))
ggplot(summaryDF108mice, aes(x = peak.oocysts.per.g.mouse, y = tolerance,
fill = Mouse_genotype, col = infection_isolate)) +
geom_point(pch=21, size = 4) +
scale_fill_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"))
ggplot(summaryDF108mice, aes(x = peak.oocysts.per.g.mouse, y = tolerance,
fill = Mouse_genotype, col = infection_isolate)) +
geom_point(pch=21, size = 4) +
scale_color_manual(values = c("orange", "orange1", "green"))+
scale_fill_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"))
ggplot(summaryDF108mice, aes(x = peak.oocysts.per.g.mouse, y = tolerance,
fill = Mouse_genotype, col = infection_isolate)) +
geom_point(pch=21, size = 4) +
facet_grid(.~infection_isolate) +
scale_color_manual(values = c("orange", "orange1", "green"))+
scale_fill_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"))
ggplot(summaryDF108mice, aes(x = peak.oocysts.per.g.mouse, y = tolerance,
fill = Mouse_genotype, col = infection_isolate)) +
geom_point(pch=21, size = 4) +
facet_grid(.~infection_isolate) +
scale_color_manual(values = c("orange", "orange1", "green"))+
scale_fill_manual(values = c("blue", "cornflowerblue", "red4", "indianred1")) +
geom_smooth(method = "lm")
