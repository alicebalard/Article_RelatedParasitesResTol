# pdf(file = "../figures/Fig2.pdf", width = 10, height = 5)
Fig2
## Correlation sum of oocysts / peak oocysts
ggplot(art2al_SUMdf, aes(sumoocysts.per.tube, max.oocysts.per.tube)) +
geom_smooth(method = "lm")+ geom_point()
cor(art2al_SUMdf$sumoocysts.per.tube , art2al_SUMdf$max.oocysts.per.tube,
method = "pearson")
## RESISTANCE: inverse of OPG
## We round
xRes <- round(as.numeric(na.omit(art2al_SUMdf$max.OPG)))
hist(xRes, breaks = 100)
descdist(xRes)
#pdf("../figures/supfig1.1.pdf")
findGoodDist(x = xRes, distribs = c("normal", "negative binomial"),
distribs2 = c("norm", "nbinom"))
## IMPACT ON HEALTH
xImp <- as.numeric(na.omit(art2al_SUMdf$relWL))
hist(xImp, breaks = 100)
descdist(xImp)
#pdf("../figures/supfig1.2.pdf")
findGoodDist(x = xImp+ 0.01, distribs = c("normal", "weibull"),
distribs2 = c("norm", "weibull"))
#dev.off()
### weibull for impact on health
art2al_SUMdf$impact <- art2al_SUMdf$relWL + 0.01
SUBsummaryDF77mice$impact <- SUBsummaryDF77mice$relWL + 0.01
################################
##### Statistical analyses #####
################################
## LRT test
homemadeGtest <- function(full, base){
dLL = logLik(full) - logLik(base)
dDF = base$df.residual - full$df.residual
pvalue <- 1 - stats::pchisq(2*dLL, df=dDF)
chisqvalue <- stats::qchisq(p = pvalue, df=dDF)
print(paste0("G=",round(2*dLL, 1), " ,df=", dDF, " ,p=", round(pvalue, 6)))
}
## LRT significance for each factor
myLRTsignificanceFactors <- function(modFull, modPar, modMouse, modInt){
print("significance of parasite:")
homemadeGtest(modFull, modPar)
print("significance of mouse:")
homemadeGtest(modFull, modMouse)
print("significance of interaction:")
homemadeGtest(modFull, modInt)
}
# for posthoc tests
art2al_SUMdf$intFacSPECIES <- interaction(art2al_SUMdf$Eimeria_species,
art2al_SUMdf$Mouse_subspecies, drop=T)
art2al_SUMdf$intFacSTRAINS <- interaction(art2al_SUMdf$infection_isolate,
art2al_SUMdf$Mouse_genotype, drop=T)
SUBsummaryDF77mice$intFacSPECIES <- interaction(SUBsummaryDF77mice$Eimeria_species,
SUBsummaryDF77mice$Mouse_subspecies, drop=T)
SUBsummaryDF77mice$intFacSTRAINS <- interaction(SUBsummaryDF77mice$infection_isolate,
SUBsummaryDF77mice$Mouse_genotype, drop=T)
testSignif <- function(dataframe, which, level){
if(which == "RES"){
if(level == "SPECIES"){
modFULL <- glm.nb(max.OPG ~ Eimeria_species*Mouse_subspecies, data = dataframe)
modPara <- glm.nb(max.OPG ~ Mouse_subspecies, data = dataframe)
modMous <- glm.nb(max.OPG ~ Eimeria_species, data = dataframe)
modinter <- glm.nb(max.OPG ~ Eimeria_species+Mouse_subspecies, data = dataframe)
} else if (level == "STRAINS"){
modFULL <- glm.nb(max.OPG ~ infection_isolate*Mouse_genotype, data = dataframe)
modPara <- glm.nb(max.OPG ~ Mouse_genotype, data = dataframe)
modMous <- glm.nb(max.OPG ~ infection_isolate, data = dataframe)
modinter <- glm.nb(max.OPG ~ infection_isolate+Mouse_genotype, data = dataframe)
}
} else if (which == "IMP"){
if(level == "SPECIES"){
modFULL <- survreg(Surv(impact)~Eimeria_species*Mouse_subspecies, data = dataframe, dist="weibull")
modPara <- survreg(Surv(impact)~Mouse_subspecies, data = dataframe, dist="weibull")
modMous <- survreg(Surv(impact)~Eimeria_species, data = dataframe, dist="weibull")
modinter <- survreg(Surv(impact)~Eimeria_species+Mouse_subspecies, data = dataframe, dist="weibull")
} else if (level == "STRAINS"){
modFULL <- survreg(Surv(impact)~infection_isolate*Mouse_genotype, data = dataframe, dist="weibull")
modPara <- survreg(Surv(impact)~Mouse_genotype, data = dataframe, dist="weibull")
modMous <- survreg(Surv(impact)~infection_isolate, data = dataframe, dist="weibull")
modinter <- survreg(Surv(impact)~infection_isolate+Mouse_genotype, data = dataframe, dist="weibull")
}
}
return(list(modfull = modFULL, LRT = myLRTsignificanceFactors(modFULL, modPara, modMous, modinter)))
}
testPostHoc <- function(dataframe, which, level){
if(level == "SPECIES"){
if(which == "RES"){
mod_multicomp <- glm.nb(max.OPG ~ intFacSPECIES, data = dataframe)
} else if(which == "IMP"){
mod_multicomp <- survreg(Surv(impact)~intFacSPECIES, data = dataframe, dist="weibull")
}
return(summary(glht(mod_multicomp, linfct=mcp(intFacSPECIES = "Tukey"))))
}
if(level == "STRAINS"){
if(which == "RES"){
mod_multicomp <- glm.nb(max.OPG ~ intFacSTRAINS, data = dataframe)
} else if(which == "IMP"){
mod_multicomp <- survreg(Surv(impact)~intFacSTRAINS, data = dataframe, dist="weibull")
}
return(summary(glht(mod_multicomp, linfct=mcp(intFacSTRAINS = "Tukey"))))
}
}
# Resistance
testSignif(art2al_SUMdf, "RES", "SPECIES")
testSignif(SUBsummaryDF77mice, "RES", "SPECIES")
### Code for data analysis of Article 2
### August 2019
### Alice Balard
## INFO
# Mouse AA_0088, HI = 0.2
# Mouse AA_0064, HI = 0.08
# Mouse AA_0139, HI = 0.85
#### Load data and functions within ####
source("1_dataPreparation.R")
library(cowplot)
library(ggplot2)
library(dplyr)
###### Map of our samples FIGURE 1 (with design) ######
hmhzline <- read.csv("../data/HMHZ.csv")
# change not visible color
forMap$color <- as.character(forMap$color)
forMap$color[forMap$color %in% "green"] <- "green4"
forMap$color <- as.factor(forMap$color)
area <- get_stamenmap(bbox = c(8, 48, 18, 54), zoom = 6, maptype = "toner-lite")
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 1) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, fill = color),
box.padding = 2, size = 7, col = "white", segment.colour = "black") +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
scale_fill_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
# pdf(file = "../figures/Fig1.pdf", width = 8, height = 8)
# map
# dev.off()
######################################
########## Read information ##########
######################################
## Read batches (Exp_003 treated by anthelminthcs only)
table(art2al_SUMdf$infection_isolate, art2al_SUMdf$Mouse_genotype, art2al_SUMdf$Exp_ID)
## Read anthelminthics
table(art2al_SUMdf$infection_isolate, art2al_SUMdf$Mouse_genotype, art2al_SUMdf$anth)
## Make subdata, removing coinfected (N=9) and anthelminthic trt mice (N=22)
contaAnimals <- art2al_RAWdf[art2al_RAWdf$oocysts.per.tube > 0 & !is.na(art2al_RAWdf$oocysts.per.tube) &
art2al_RAWdf$dpi == 0, "EH_ID"]
SUBsummaryDF77mice <- art2al_SUMdf[!art2al_SUMdf$EH_ID %in% contaAnimals &
art2al_SUMdf$anth == FALSE,]
## which mice?
problemMice <- art2al_SUMdf[art2al_SUMdf$EH_ID %in% contaAnimals |
art2al_SUMdf$anth == TRUE,]
table(problemMice$Mouse_genotype, problemMice$infection_isolate)
# 2 SCHUNT & 1 PWD falciformis, rest ferrisi
table(art2al_SUMdf$Mouse_genotype, art2al_SUMdf$infection_isolate)
## Age of mice
range(as.numeric(art2al_RAWdf$ageAtInfection))
###### what is the overall peak day for each parasite isolate? ######
aggregate(art2al_SUMdf$dpi_max.OPG,
list(art2al_SUMdf$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
aggregate(art2al_SUMdf$dpi_minWeight,
list(art2al_SUMdf$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### what is the overall prepatent period for each parasite isolate? ######
d <- as.data.frame(
art2al_RAWdf[!is.na(art2al_RAWdf$OPG) & art2al_RAWdf$OPG > 0,] %>%
dplyr::group_by(EH_ID) %>%
dplyr::slice(which.min(dpi)) %>%
dplyr::select(EH_ID, weight, HI, startingWeight, ageAtInfection, Sex,
Mouse_genotype, Eimeria_species, Mouse_subspecies,
infection_isolate, Exp_ID, dpi))
aggregate(d$dpi,
list(d$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### Course of infection FIGURE 2 ######
forplot <- art2al_RAWdf %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(OPG*10e-6, na.rm = TRUE),
sd = sd(OPG*10e-6, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.1 <- ggplot(forplot, aes(dpi, mean, group = infection_isolate, col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("OPG (x10^6)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.8)) +
labs(color = "Eimeria isolate")
F2.1
forplot2 <- art2al_RAWdf %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(relativeWeight, na.rm = TRUE),
sd = sd(relativeWeight, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.2 <- ggplot(forplot2, aes(dpi, mean, group = infection_isolate,
col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("relative weight compared to day 0 (%)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.2)) +
labs(color = "Eimeria isolate")
F2.2
Fig2 <- cowplot::plot_grid(F2.1, F2.2,
labels=c("A", "B"), label_size = 20)
# pdf(file = "../figures/Fig2.pdf", width = 10, height = 5)
Fig2
# dev.off()
## Correlation sum of oocysts / peak oocysts
ggplot(art2al_SUMdf, aes(sumoocysts.per.tube, max.oocysts.per.tube)) +
geom_smooth(method = "lm")+ geom_point()
cor(art2al_SUMdf$sumoocysts.per.tube , art2al_SUMdf$max.oocysts.per.tube,
method = "pearson")
###############################################################
########## Define our indexes and their distribution ##########
###############################################################
## RESISTANCE: inverse of OPG
## We round
xRes <- round(as.numeric(na.omit(art2al_SUMdf$max.OPG)))
hist(xRes, breaks = 100)
descdist(xRes)
#pdf("../figures/supfig1.1.pdf")
findGoodDist(x = xRes, distribs = c("normal", "negative binomial"),
distribs2 = c("norm", "nbinom"))
#dev.off()
### nbinom for resistance
## IMPACT ON HEALTH
xImp <- as.numeric(na.omit(art2al_SUMdf$relWL))
hist(xImp, breaks = 100)
descdist(xImp)
#pdf("../figures/supfig1.2.pdf")
findGoodDist(x = xImp+ 0.01, distribs = c("normal", "weibull"),
distribs2 = c("norm", "weibull"))
#dev.off()
### weibull for impact on health
art2al_SUMdf$impact <- art2al_SUMdf$relWL + 0.01
SUBsummaryDF77mice$impact <- SUBsummaryDF77mice$relWL + 0.01
# 9 mice died before peak
#
# pdf(file = "../figures/choiceIndexes.pdf", width = 10, height = 5)
# cowplot::plot_grid(plotChoiceResIndex,
#                    plotChoiceTolIndex,
#                    labels=c("A", "B"), label_size = 15)
# dev.off()
################################
##### Statistical analyses #####
################################
## LRT test
homemadeGtest <- function(full, base){
dLL = logLik(full) - logLik(base)
dDF = base$df.residual - full$df.residual
pvalue <- 1 - stats::pchisq(2*dLL, df=dDF)
chisqvalue <- stats::qchisq(p = pvalue, df=dDF)
print(paste0("G=",round(2*dLL, 1), " ,df=", dDF, " ,p=", round(pvalue, 6)))
}
## LRT significance for each factor
myLRTsignificanceFactors <- function(modFull, modPar, modMouse, modInt){
print("significance of parasite:")
homemadeGtest(modFull, modPar)
print("significance of mouse:")
homemadeGtest(modFull, modMouse)
print("significance of interaction:")
homemadeGtest(modFull, modInt)
}
# for posthoc tests
art2al_SUMdf$intFacSTRAINS <- interaction(art2al_SUMdf$infection_isolate,
art2al_SUMdf$Mouse_genotype, drop=T)
SUBsummaryDF77mice$intFacSTRAINS <- interaction(SUBsummaryDF77mice$infection_isolate,
SUBsummaryDF77mice$Mouse_genotype, drop=T)
testSignif <- function(dataframe, which){
if(which == "RES"){
modFULL <- glm.nb(max.OPG ~ infection_isolate*Mouse_genotype, data = dataframe)
modPara <- glm.nb(max.OPG ~ Mouse_genotype, data = dataframe)
modMous <- glm.nb(max.OPG ~ infection_isolate, data = dataframe)
modinter <- glm.nb(max.OPG ~ infection_isolate+Mouse_genotype, data = dataframe)
} else if (which == "IMP"){
modFULL <- survreg(Surv(impact)~infection_isolate*Mouse_genotype, data = dataframe, dist="weibull")
modPara <- survreg(Surv(impact)~Mouse_genotype, data = dataframe, dist="weibull")
modMous <- survreg(Surv(impact)~infection_isolate, data = dataframe, dist="weibull")
modinter <- survreg(Surv(impact)~infection_isolate+Mouse_genotype, data = dataframe, dist="weibull")
}
return(list(modfull = modFULL, LRT = myLRTsignificanceFactors(modFULL, modPara, modMous, modinter)))
}
testPostHoc <- function(dataframe, which){
if(which == "RES"){
mod_multicomp <- glm.nb(max.OPG ~ intFacSTRAINS, data = dataframe)
} else if(which == "IMP"){
mod_multicomp <- survreg(Surv(impact)~intFacSTRAINS, data = dataframe, dist="weibull")
}
return(summary(glht(mod_multicomp, linfct=mcp(intFacSTRAINS = "Tukey"))))
}
###############################
## Test factors significance ##
###############################
# Resistance
testSignif(art2al_SUMdf, "RES")
testSignif(SUBsummaryDF77mice, "RES")
# Impact
testSignif(art2al_SUMdf, "IMP")
testSignif(SUBsummaryDF77mice, "IMP")
# Resistance
testSignif(art2al_SUMdf, "RES")
testSignif(SUBsummaryDF77mice, "RES")
# Impact
testSignif(art2al_SUMdf, "IMP")
testSignif(SUBsummaryDF77mice, "IMP")
## Translation of 1% because Weibull doesn't support nul data
coef(testSignif(art2al_SUMdf, "IMP")$modfull)
coefImp <- exp(coef(testSignif(art2al_SUMdf, "IMP")$modfull))
# [1] "significance of parasite:"
# [1] "G=30.7 ,df=8 ,p=0.000159"
# [1] "significance of mouse:"
# [1] "G=23 ,df=9 ,p=0.006115"
# [1] "significance of interaction:"
# [1] "G=10.3 ,df=6 ,p=0.114453"
testSignif(SUBsummaryDF77mice, "IMP")
# [1] "significance of parasite:"
# [1] "G=30.7 ,df=8 ,p=0.000159"
# [1] "significance of mouse:"
# [1] "G=23 ,df=9 ,p=0.006115"
# [1] "significance of interaction:"
# [1] "G=10.3 ,df=6 ,p=0.114453"
coef(testSignif(SUBsummaryDF77mice, "IMP") )
# [1] "significance of parasite:"
# [1] "G=30.7 ,df=8 ,p=0.000159"
# [1] "significance of mouse:"
# [1] "G=23 ,df=9 ,p=0.006115"
# [1] "significance of interaction:"
# [1] "G=10.3 ,df=6 ,p=0.114453"
coef(testSignif(SUBsummaryDF77mice, "IMP"))
# Resistance
coef(testSignif(art2al_SUMdf, "RES")) # LRT "G=21.8 ,df=6 ,p=0.00131"
# [1] "significance of parasite:"
# [1] "G=35.5 ,df=8 ,p=2.2e-05"
# [1] "significance of mouse:"
# [1] "G=36.3 ,df=9 ,p=3.5e-05"
# [1] "significance of interaction:"
# [1] "G=21.8 ,df=6 ,p=0.00131"
coef(testSignif(SUBsummaryDF77mice, "RES")) # "G=19.9 ,df=6 ,p=0.002856"
## Translation of 1% because Weibull doesn't support nul data
coef(testSignif(art2al_SUMdf, "IMP")$modfull)
coefImp <- exp(coef(testSignif(art2al_SUMdf, "IMP")$modfull))
coefImp[1] - 0.01# Efer-MmD: 6.1%
coefImp[1] * coefImp[2] - 0.01 # Efal-MmD: 9.3%
coefImp[1] * coefImp[3] - 0.01# Efer-Mmm: 8.3%
coefImp
testSignif
testSignif(art2al_SUMdf, "IMP")$modfull
# marginal effect for each combination:
ggpredict(testSignif(art2al_SUMdf, "IMP")$modfull)
# marginal effect for each combination:
ggpredict(testSignif(art2al_SUMdf, "IMP")$modfull)
ggin(testSignif(art2al_SUMdf, "IMP")$modfull, terms = c("Mouse_genotype", "infection_isolate"))
# marginal effect for each combination:
ggpredict(testSignif(art2al_SUMdf, "IMP")$modfull, terms = c("Mouse_genotype", "infection_isolate"))
ggpredict(testSignif(art2al_SUMdf, "RES")$modfull, terms = c("Mouse_genotype", "infection_isolate"))
# to avoid running these long test all the time
doYouRun = "keepit"
if (doYouRun == "foncebebe"){
# Resistance
testPostHoc(art2al_SUMdf, "RES", "SPECIES")
testPostHoc(SUBsummaryDF77mice, "RES", "SPECIES")
testPostHoc(art2al_SUMdf, "RES", "STRAINS")
testPostHoc(SUBsummaryDF77mice, "RES", "STRAINS")
# Impact
testPostHoc(art2al_SUMdf, "IMP", "SPECIES")
testPostHoc(SUBsummaryDF77mice, "IMP", "SPECIES")
testPostHoc(art2al_SUMdf, "IMP", "STRAINS")
testPostHoc(SUBsummaryDF77mice, "IMP", "STRAINS")
}
# Impact
testPostHoc(art2al_SUMdf, "IMP", "STRAINS")
if (doYouRun == "foncebebe"){
# Resistance
testPostHoc(art2al_SUMdf, "RES", "STRAINS")
testPostHoc(SUBsummaryDF77mice, "RES", "STRAINS")
# Impact
testPostHoc(art2al_SUMdf, "IMP", "STRAINS")
testPostHoc(SUBsummaryDF77mice, "IMP", "STRAINS")
}
#################
## save output ##
#################
doYouSave = "foncebebe"
if (doYouSave == "foncebebe"){
# Resistance
write.csv(getMatrixPostHoc(testPostHoc(art2al_SUMdf, "RES", "STRAINS")),
"../figures/Tab_posthocResSTRAINS.csv")
write.csv(getMatrixPostHoc(testPostHoc(SUBsummaryDF77mice, "RES", "STRAINS")),
"../figures/Tab_posthocResSTRAINS_77mice.csv")
# Impact
write.csv(getMatrixPostHoc(testPostHoc(art2al_SUMdf, "IMP", "STRAINS")),
"../figures/Tab_posthocImpSTRAINS.csv")
write.csv(getMatrixPostHoc(testPostHoc(SUBsummaryDF77mice, "IMP", "STRAINS")),
"../figures/Tab_posthocImpSTRAINS_77mice.csv")
}
if (doYouSave == "foncebebe"){
# Resistance
write.csv(getMatrixPostHoc(testPostHoc(art2al_SUMdf, "RES")),
"../figures/Tab_posthocResSTRAINS.csv")
write.csv(getMatrixPostHoc(testPostHoc(SUBsummaryDF77mice, "RES")),
"../figures/Tab_posthocResSTRAINS_77mice.csv")
# Impact
write.csv(getMatrixPostHoc(testPostHoc(art2al_SUMdf, "IMP")),
"../figures/Tab_posthocImpSTRAINS.csv")
write.csv(getMatrixPostHoc(testPostHoc(SUBsummaryDF77mice, "IMP")),
"../figures/Tab_posthocImpSTRAINS_77mice.csv")
}
art2al_SUMdf$max.OPG
table(is.na(art2al_SUMdf$max.OPG))
############
## Resistance
# plot marginal effects of interaction terms
posx.1 <- c(0.9,1.1, 1.9,2.1)
############
## Resistance
# plot marginal effects of interaction terms by isolates & strains
posx.2 <- c(0.8+c(0,1/8,2/8,3/8),1.8+c(0,1/8,2/8,3/8),2.8+c(0,1/8,2/8,3/8))
get_plotR_STRAINS <- function(dataframe){
plot_model(testSignif(dataframe, "RES", "STRAINS")$modfull,
type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_y_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
ggtitle("Maximum parasite load \n(mean and 95%CI)") +
xlab("Eimeria isolate") +
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.2,y=120000,label=getNs("max.OPG", dataframe)),vjust=0)
}
plotR_STRAINS <- get_plotR_STRAINS(art2al_SUMdf)
get_plotR_STRAINS <- function(dataframe){
plot_model(testSignif(dataframe, "RES")$modfull,
type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_y_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
ggtitle("Maximum parasite load \n(mean and 95%CI)") +
xlab("Eimeria isolate") +
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.2,y=120000,label=getNs("max.OPG", dataframe)),vjust=0)
}
plotR_STRAINS <- get_plotR_STRAINS(art2al_SUMdf)
plotR_STRAINS
##########
## plot ##
##########
## To add Ns on top of bars
getNs <- function(proxy, df, groupMus = "Mouse_genotype", groupPar = "infection_isolate"){
noNA = df[!is.na(df[[proxy]]),]
noNA$groupMus = noNA[[groupMus]]
noNA$groupPar = noNA[[groupPar]]
tab = table(noNA$groupPar, noNA$groupMus)
Ns = as.character(as.vector(t(tab)[as.vector(t(tab))!=0]))
return(Ns)
}
############
## Resistance
# plot marginal effects of interaction terms by isolates & strains
posx.2 <- c(0.8+c(0,1/8,2/8,3/8),1.8+c(0,1/8,2/8,3/8),2.8+c(0,1/8,2/8,3/8))
get_plotR_STRAINS <- function(dataframe){
plot_model(testSignif(dataframe, "RES")$modfull,
type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_y_continuous("(predicted) maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 3500000, 500000),
labels = seq(0, 3500000, 500000)/1000000)+
ggtitle("Maximum parasite load \n(mean and 95%CI)") +
xlab("Eimeria isolate") +
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.2,y=120000,label=getNs("max.OPG", dataframe)),vjust=0)
}
plotR_STRAINS <- get_plotR_STRAINS(art2al_SUMdf)
plotR_STRAINS
plotR_STRAINS_77mice <- get_plotR_STRAINS(SUBsummaryDF77mice)
plotR_STRAINS_77mice
## NB: art2al_SUMdf$impact <- art2al_SUMdf$relWL + 0.01
art2al_SUMdf %>%
group_by(Mouse_subspecies, Eimeria_species) %>%
summarise(meanImp = mean(impact, na.rm = T))
## NB. translate back 0.01
transValuesImp <- seq(0.01,0.31, 0.05)
as.character(transValuesImp - 0.01)
realValuesImpLabels <- c("0%", "5%", "10%", "15%", "20%", "25%", "30%")
get_plotI_SPECIES <- function(dataframe){
plot_model(testSignif(dataframe, "IMP", "SPECIES")$modfull,
type = "int",dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue","red"),
name = "Mouse subspecies",labels = c("Mmd", "Mmm")) +
xlab("Eimeria species") +
ggtitle("Maximum weight loss \n(mean and 95%CI)") +
scale_y_continuous(breaks = transValuesImp, labels = realValuesImpLabels,
name = "(predicted) maximum weight loss compared to day of infection")+
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.1,y=0,label=getNs("relWL", dataframe,
"Mouse_subspecies", "Eimeria_species")),vjust=0)
}
plotI_SPECIES <- get_plotI_SPECIES(art2al_SUMdf)
plotI_SPECIES
plotI_SPECIES_77mice <- get_plotI_SPECIES(SUBsummaryDF77mice)
