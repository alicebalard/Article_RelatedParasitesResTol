paste(names(predTol)[names(predTol) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Tol", sep = "_")
finalplotDF <- merge(merge(predRes, predImp), predTol, by = "Genotype")
# test correlations:
c1 <- cor.test(finalplotDF$predicted_OPG, finalplotDF$predicted_relWL, method="spearman")
testcor1 <- paste0(as.character(c1$method), ": ", signif(c1$estimate, digits=2), "\n p-value=", signif(c1$p.value, digits=2))
c2 <- cor.test(finalplotDF$predicted_OPG, finalplotDF$predicted_Tol, method="spearman")
testcor2 <- paste0(as.character(c2$method), ": ", signif(c2$estimate, digits=2), "\n p-value=", signif(c2$p.value, digits=2))
# Plot
## Plot1
P1 <- ggplot(finalplotDF, aes(x=predicted_OPG, y=predicted_relWL)) +
geom_smooth(method = "lm", se = F, col = "black")+
geom_errorbarh(aes(xmin = conf.low_OPG, xmax = conf.high_OPG), color = "grey") +
geom_errorbar(aes(ymin = conf.low_relWL, ymax = conf.high_relWL), color = "grey") +
geom_point(aes(col = Genotype), size = 7, pch = 22, fill = "white")+
scale_x_continuous(name = "Maximum million OPG",
breaks = seq(0.5,5,0.5)*1e6,
labels = seq(0.5,5,0.5)) +
scale_y_continuous(name = "Maximum relative weight loss",
labels = scales::percent_format(accuracy = 1))+
geom_text(aes(label=substring(Genotype, 1, 1), col = Genotype))+
scale_color_manual(values = mycolors) +
scale_shape_manual(values = myshapes) +
annotate("text", x = posx1, y = posy1, label = testcor1)+
theme(legend.position = "none")+ theme(text = element_text(size=15))
P2 <- ggplot(finalplotDF, aes(x = predicted_OPG, y = -predicted_Tol)) +
geom_smooth(method = "lm", se = F, col = "black") +
geom_errorbar(aes(ymin = -conf.low_Tol, ymax = -conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_OPG, xmax = conf.high_OPG), color = "grey") +
geom_point(aes(col = Genotype), size = 7, pch = 22, fill = "white")+
scale_x_continuous("Maximum million OPG \n (inverse of) RESISTANCE ",
breaks = seq(0.5,5,0.5)*1e6,
labels = seq(0.5,5,0.5))+
scale_y_continuous(name = "TOLERANCE (inverse of) slope of\n maximum weight loss on maximum OPG ")+
geom_text(aes(label=substring(Genotype, 1, 1), col = Genotype))+
scale_color_manual(values = mycolors) +
scale_shape_manual(values = myshapes) +
annotate("text", x = posx2, y = posy2, label = testcor2)+
theme(legend.position = "none")+ theme(text = element_text(size=15))
return(list(P1, P2))
}
################################
##### Statistical analyses #####
################################
# to apply on our 2 DF (one more conservative):
MyListDF <- list(full = art2SummaryDF, cons = art2SummaryDF_conservative)
listPar <- list("Brandenburg139 (E. ferrisi)","Brandenburg64 (E. ferrisi)", "Brandenburg88 (E. falciformis)")
names(listPar) <- c("Brandenburg139", "Brandenburg64", "Brandenburg88")
############### 1. Local adaptation of pure strains for E. ferrisi
MyListDF_locad <- MyListDF
MyListDF_locad$full$infection_isolate <- relevel(MyListDF_locad$full$infection_isolate, "Brandenburg64 (E. ferrisi)")
MyListDF_locad$full <- MyListDF_locad$full[!grepl("-", MyListDF_locad$full$Mouse_genotype),]
MyListDF_locad$full <- dropLevelsAllFactorsDF(
MyListDF_locad$full[grep("ferrisi", MyListDF_locad$full$infection_isolate),])
MyListDF_locad$cons$infection_isolate <- relevel(MyListDF_locad$cons$infection_isolate, "Brandenburg64 (E. ferrisi)")
MyListDF_locad$cons <- MyListDF_locad$cons[!grepl("-", MyListDF_locad$cons$Mouse_genotype),]
MyListDF_locad$cons <- dropLevelsAllFactorsDF(
MyListDF_locad$cons[grep("ferrisi", MyListDF_locad$cons$infection_isolate),])
### Res
lapply(MyListDF_locad, function(x){testSignif(x,"RES")$LRT}) # interaction factor not significant
### Imp
lapply(MyListDF_locad, function(x){testSignif(x,"IMP")$LRT}) # interaction factor not significant (apart conserv.)
### Tol
lapply(MyListDF_locad, function(x){testSignif(x,"TOL")$LRT}) # interaction factor not significant
## Plot Figure 3:
listPlotRes_LA <- lapply(MyListDF_locad, function(x){get_plot_par(x, npara = 2, plottype = "RES", cols = c("blue", "blue", "red", "red"), pointshape = c(15,16,15,16))})
listPlotImp_LA <- lapply(MyListDF_locad, function(x){get_plot_par(x, npara = 2, plottype = "IMP", cols = c("blue", "blue", "red", "red"), pointshape = c(15,16,15,16))})
listPlotTol_LA <- lapply(MyListDF_locad, function(x){get_plot_par(x, npara = 2, plottype = "TOL", linetype = c(1,2,1,2), cols = c("blue", "blue", "red", "red"), pointshape = c(15,16,15,16))})
Fig3 <- cowplot::ggdraw() +
draw_plot(listPlotRes_LA$full + theme(legend.position = "none"), 0, .5, .49, .49) +
draw_plot(listPlotImp_LA$full + theme(legend.position = "none"), .5, .5, .49, .49) +
draw_plot(listPlotTol_LA$full, 0, 0, .7, .49) +
draw_plot_label(c("A", "B", "C"), c(.01, .51, .01), c(1, 1, .5), size = 15)
pdf(file = "../figures/Fig3_temp.pdf",
width = 10, height = 10)
Fig3
dev.off()
pdf(file = "../figures/SupplS2_Fig3_temp.pdf",
width = 10, height = 10)
cowplot::ggdraw() +
draw_plot(listPlotRes_LA$cons + theme(legend.position = "none"), 0, .5, .49, .49) +
draw_plot(listPlotImp_LA$cons + theme(legend.position = "none"), .5, .5, .49, .49) +
draw_plot(listPlotTol_LA$cons+ theme(legend.position = "none"), 0, 0, .7, .49) +
draw_plot_label(c("A", "B", "C"), c(.01, .51, .01), c(1, 1, .5), size = 15)
dev.off()
############### 2. E. ferrisi64 and E.fal88: res, impact, tolerance
MyListDF_64 <- MyListDF
MyListDF_64$full <- dropLevelsAllFactorsDF(MyListDF_64$full[grepl("64", MyListDF_64$full$infection_isolate),])
MyListDF_64$cons <- dropLevelsAllFactorsDF(MyListDF_64$cons[grepl("64", MyListDF_64$cons$infection_isolate),])
MyListDF_88 <- MyListDF
MyListDF_88$full <- dropLevelsAllFactorsDF(MyListDF_88$full[grepl("88", MyListDF_88$full$infection_isolate),])
MyListDF_88$cons <- dropLevelsAllFactorsDF(MyListDF_88$cons[grepl("88", MyListDF_88$cons$infection_isolate),])
##### 2.1. within E64
# RES
lapply(MyListDF_64, function(xlist){testSignifWithinParas(xlist, "RES")$LRT})
# IMP
lapply(MyListDF_64, function(xlist){testSignifWithinParas(xlist, "IMP")$LRT})
# TOL
lapply(MyListDF_64, function(xlist){testSignifWithinParas(xlist, "TOL")$LRT})
##### 2.2. within E88
# RES
lapply(MyListDF_88, function(xlist){testSignifWithinParas(xlist, "RES_ZI")$LRT})
# IMP
lapply(MyListDF_88, function(xlist){testSignifWithinParas(xlist, "IMP")$LRT})
# TOL
lapply(MyListDF_88, function(xlist){testSignifWithinParas(xlist, "TOL")$LRT})
##### 2.3. plot within E64 (figure 4)
## Plot Figure 4:
listPlotRes_64 <- lapply(MyListDF_64, function(x){get_plot_par(x, npara = 1,  plottype = "RES", cols = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
pointshape = c(15,16,17,15,16,15,16, 17))})
listPlotImp_64 <-lapply(MyListDF_64, function(x){get_plot_par(x, npara = 1,  plottype = "IMP", cols = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
pointshape = c(15,16,17,15,16,15,16, 17))})
listPlotTol_64 <- lapply(MyListDF_64, function(x){get_plot_par(x, npara = 1,  plottype = "TOL", cols = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
pointshape = c(15,16,17,15,16,15,16, 17),
linetype = c(1,2,3,1,2,1,2,3),)})
listBigPlot_64 <- lapply(MyListDF_64, function(x){
getCouplingPlot(x, posx1 = 1.5e6, posy1 = 0.01, posx2 = 1.5e6, posy2 = -0.09, mycolors = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
myshapes = c(15,16,17,15,16,15,16, 17))
})
make5panelsPlot <- function(res, imp, tol, bp1, bp2){
p1 <- plot_grid(res + theme(legend.position = "none"),
imp + theme(legend.position = "none"), labels = c('A', 'B'), label_size = 20)
p2 <- plot_grid(p1, tol, labels = c("", "C"), label_size = 20,
ncol =1, align = "v", rel_widths = c(1.5, .5))
p3 <- plot_grid(bp1, bp2, ncol =1, align = "v", labels = c("D", "E"), label_size = 20)
return(plot_grid(p2,p3,rel_widths = c(1, 1)))
}
Fig4 <- make5panelsPlot(res = listPlotRes_64$full, imp = listPlotImp_64$full, tol = listPlotTol_64$full,
bp1 = listBigPlot_64$full[[1]], bp2 = listBigPlot_64$full[[2]])
pdf(file ="../figures/Fig4_temp.pdf",  width = 15, height = 10)
Fig4
dev.off()
# Suppl
SupplFig4 <- make5panelsPlot(res = listPlotRes_64$cons, imp = listPlotImp_64$cons, tol = listPlotTol_64$cons,
bp1 = listBigPlot_64$cons[[1]], bp2 = listBigPlot_64$cons[[2]])
pdf(file ="../figures/SupplFig4_temp.pdf",  width = 15, height = 10)
SupplFig4
dev.off()
##### 2.4. plot within E88 (figure 6)
listPlotRes_88 <- lapply(MyListDF_88, function(x){get_plot_par(x, npara = 1,  plottype = "RES_ZI", cols = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
pointshape = c(15,16,17,15,16,15,16, 17))})
listPlotImp_88 <-lapply(MyListDF_88, function(x){get_plot_par(x, npara = 1,  plottype = "IMP", cols = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
pointshape = c(15,16,17,15,16,15,16, 17))})
listPlotTol_88 <- lapply(MyListDF_88, function(x){get_plot_par(x, npara = 1,  plottype = "TOL", cols = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
pointshape = c(15,16,17,15,16,15,16, 17),
linetype = c(1,2,3,1,2,1,2,3),)})
listBigPlot_88 <- lapply(MyListDF_88, function(x){
getCouplingPlot(x,  isZINB=TRUE, posx1 = 1.5e6, posy1 = 0.01, posx2 = 1.5e6, posy2 = -0.09, mycolors = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
myshapes = c(15,16,17,15,16,15,16, 17))
})
Fig5 <- make5panelsPlot(res = listPlotRes_88$full, imp = listPlotImp_88$full, tol = listPlotTol_88$full,
bp1 = listBigPlot_88$full[[1]], bp2 = listBigPlot_88$full[[2]])
pdf(file ="../figures/Fig5_temp.pdf",  width = 15, height = 10)
Fig5
dev.off()
# Suppl
SupplFig5 <- make5panelsPlot(res = listPlotRes_88$cons, imp = listPlotImp_88$cons, tol = listPlotTol_88$cons,
bp1 = listBigPlot_88$cons[[1]], bp2 = listBigPlot_88$cons[[2]])
pdf(file ="../figures/SupplFig5_temp.pdf",  width = 15, height = 10)
SupplFig5
dev.off()
## Age of mice
range(as.numeric(art2SummaryDF$ageAtInfection))
table(as.numeric(art2SummaryDF$ageAtInfection), art2SummaryDF$Mouse_genotype)
as.data.frame(table(as.numeric(art2SummaryDF$ageAtInfection), art2SummaryDF$Mouse_genotype))
d <- as.data.frame(table(as.numeric(art2SummaryDF$ageAtInfection), art2SummaryDF$Mouse_genotype))
ggplot(d, aes(x = Freq, y = Var2)) +
geom_point()
ggplot(d, aes(x = Freq, y = Var2)) +
geom_point() +
geom_boxplot()
ggplot(d, aes(x = Var2, y = Freq)) +
geom_boxplot()
ggplot(d, aes(x = Var2, y = Freq)) +
geom_boxplot()+
coord_flip()
d
ggplot(d, aes(x = Var2, y = Var1, size = Freq)) +
geom_boxplot()+
coord_flip()
ggplot(d, aes(x = Var2, y = Var1)) +
geom_boxplot()+
coord_flip()
ggplot(d, aes(x = art2SummaryDF$Mouse_genotype, y = as.numeric(art2SummaryDF$ageAtInfection)) +
y = as.numeric(art2SummaryDF$ageAtInfection)) +
y = as.numeric(ageAtInfection)) +
ggplot(art2SummaryDF, aes(x = Mouse_genotype,
y = as.numeric(ageAtInfection))) +
geom_boxplot()+
coord_flip()
art2SummaryDF$ageAtInfection
aggregate(art2SummaryDF$ageAtInfection, list(diet = art2SummaryDF$Mouse_genotype), mean)
# to pretty plot
mean_age <- aggregate(art2SummaryDF$ageAtInfection, list(diet = art2SummaryDF$Mouse_genotype), mean)
# to pretty plot
mean_age_genotype <- aggregate(art2SummaryDF$ageAtInfection, list(diet = art2SummaryDF$Mouse_genotype), mean)
# to pretty plot
d <- aggregate(art2SummaryDF$ageAtInfection, list(diet = art2SummaryDF$Mouse_genotype), mean)
d
# to pretty plot
d <- aggregate(art2SummaryDF$ageAtInfection, list(Mouse_genotype = art2SummaryDF$Mouse_genotype), mean)
names(d)[2]
names(d)[2] <- "mean_age_genotype"
merge(art2SummaryDF, d)
art2SummaryDF <- merge(art2SummaryDF, d)
ggplot(art2SummaryDF, aes(x = Mouse_genotype,
y = as.numeric(ageAtInfection))) +
geom_boxplot()+
coord_flip() +
geom_segment(aes(x = region, xend = region,
y = world_avg, yend = student_ratio_region),
size = 0.8) +
geom_hline(aes(yintercept = world_avg), color = "gray70", size = 0.6) +
geom_point(aes(region, student_ratio_region), size = 5) +
geom_jitter(size = 2, alpha = 0.25, width = 0.2)
df_sorted <- art2SummaryDF %>%
mutate(Mouse_genotype = fct_reorder(Mouse_genotype, -ageAtInfection))
df <- merge(art2SummaryDF, d)
### Code for data analysis of Article 2
### August 2019
### Alice Balard
## INFO
# Mouse AA_0088, HI = 0.2
# Mouse AA_0064, HI = 0.08
# Mouse AA_0139, HI = 0.85
#### Load data and functions within ####
source("dataPreparation_168mice.R")
library(cowplot)
library(ggplot2)
library(dplyr)
library(lmtest)
library(pscl)
library(scales)
# mycolors <- scales::seq_gradient_pal("blue", "red", "Lab")(seq(0,1,length.out=8))
# New colors, scales too difficult to distinguish
mycolors <- c("blue", "blue", "blue","purple","purple", "red", "red", "red")
## Different datasets as follow:
# FULL = DSart2 / art2SummaryDF
nrow(art2SummaryDF) # 168
# conservative = remove mice with contamination or anthelminthic
# DSart2_conservative2 ; art2SummaryDF_conservative2 # 118 mice
nrow(art2SummaryDF_conservative)
# for further plots:
art2SummaryDF$label <- art2SummaryDF$Mouse_genotype
levels(art2SummaryDF$label) <- as.character(c(1:8))
art2SummaryDF$Genotype <- paste0(art2SummaryDF$label, ". ", art2SummaryDF$Mouse_genotype)
art2SummaryDF_conservative$label <- art2SummaryDF_conservative$Mouse_genotype
levels(art2SummaryDF_conservative$label) <- as.character(c(1:8))
art2SummaryDF_conservative$Genotype <- paste0(art2SummaryDF_conservative$label, ". ", art2SummaryDF_conservative$Mouse_genotype)
###### Map of our samples FIGURE 1 (with design) ######
hmhzline <- read.csv("../data/HMHZ.csv")
# change not visible color
forMap$color <- as.character(forMap$color)
forMap$color[forMap$color %in% "green"] <- "green4"
forMap$color <- as.factor(forMap$color)
area <- get_stamenmap(bbox = c(8, 48, 18, 54), zoom = 6, maptype = "toner-lite")
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 1) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, fill = color),
box.padding = 2, size = 7, col = "white", segment.colour = "black") +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
scale_fill_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
pdf(file = "../figures/Fig1_temp.pdf", width = 8, height = 8)
map
dev.off()
### Table 1:Infection experiment design
tab1 <- table(art2SummaryDF$Mouse_genotype,art2SummaryDF$Mouse_subspecies,art2SummaryDF$Sex,art2SummaryDF$infection_isolate)
tab1 <- data.frame(tab1)
tab1 <- tab1[tab1$Freq != 0,]
tab1wide <- dcast(tab1, Var1 + Var2 ~ Var4 + Var3, value.var="Freq")
tab1wide
write.csv(tab1wide, "../figures/Table1_temp.csv", row.names = F)
###### how many mice died before shedding oocysts? ######
table(art2SummaryDF$sumoocysts.per.tube == 0)
# 5 mice did not shed oocysts, all infected by E88
deadNoOO <- art2SummaryDF[art2SummaryDF$sumoocysts.per.tube == 0,"EH_ID"]
dfNoOO <- DSart2[DSart2$EH_ID %in% deadNoOO,]
ggplot(dfNoOO, aes(x=dpi, y=relWL, group=EH_ID, col=EH_ID)) + geom_line() + geom_point()
###### what is the overall peak day for each parasite isolate? ######
aggregate(art2SummaryDF$dpi_max.OPG,
list(art2SummaryDF$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
# 1    Brandenburg139 (E. ferrisi) 25 6 0.73
# 2     Brandenburg64 (E. ferrisi) 87 6 0.86
# 3 Brandenburg88 (E. falciformis) 56 8 1.34
aggregate(art2SummaryDF$dpi_minWeight,
list(art2SummaryDF$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
# Brandenburg139 (E. ferrisi) 25 5 2.08
# Brandenburg64 (E. ferrisi) 87 5 1.69
# Brandenburg88 (E. falciformis)  56 9 1.58
## Make table with batches (only batch 1 was treated with anthelminthics)
tS1 <- data.frame(table(art2SummaryDF$Batch, art2SummaryDF$Mouse_genotype, art2SummaryDF$infection_isolate))
tS1 <- tS1[order(tS1$Var1) & tS1$Freq != 0,]
tS1 <- tS1[order(tS1$Var1),]
tS1 <- dcast(tS1, Var1 + Var3 ~ Var2, value.var="Freq")
tS1
write.csv(tS1, "../figures/TableS1_temp.csv", row.names = F) # NB done for FULL DS
## Age of mice
range(as.numeric(art2SummaryDF$ageAtInfection))
# to pretty plot
d <- aggregate(art2SummaryDF$ageAtInfection, list(Mouse_genotype = art2SummaryDF$Mouse_genotype), mean)
names(d)[2] <- "mean_age_genotype"
df <- merge(art2SummaryDF, d)
library(tidyverse)
ggplot(df, aes(Mouse_genotype, ageAtInfection)) +
geom_boxplot()
df_sorted <- art2SummaryDF %>%
mutate(Mouse_genotype = fct_reorder(Mouse_genotype, -ageAtInfection))
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
### Code for data analysis of Article 2
### August 2019
### Alice Balard
## INFO
# Mouse AA_0088, HI = 0.2
# Mouse AA_0064, HI = 0.08
# Mouse AA_0139, HI = 0.85
#### Load data and functions within ####
source("dataPreparation_168mice.R")
library(cowplot)
library(ggplot2)
library(dplyr)
library(lmtest)
library(pscl)
library(scales)
# mycolors <- scales::seq_gradient_pal("blue", "red", "Lab")(seq(0,1,length.out=8))
# New colors, scales too difficult to distinguish
mycolors <- c("blue", "blue", "blue","purple","purple", "red", "red", "red")
## Different datasets as follow:
# FULL = DSart2 / art2SummaryDF
nrow(art2SummaryDF) # 168
# conservative = remove mice with contamination or anthelminthic
# DSart2_conservative2 ; art2SummaryDF_conservative2 # 118 mice
nrow(art2SummaryDF_conservative)
# for further plots:
art2SummaryDF$label <- art2SummaryDF$Mouse_genotype
levels(art2SummaryDF$label) <- as.character(c(1:8))
art2SummaryDF$Genotype <- paste0(art2SummaryDF$label, ". ", art2SummaryDF$Mouse_genotype)
art2SummaryDF_conservative$label <- art2SummaryDF_conservative$Mouse_genotype
levels(art2SummaryDF_conservative$label) <- as.character(c(1:8))
art2SummaryDF_conservative$Genotype <- paste0(art2SummaryDF_conservative$label, ". ", art2SummaryDF_conservative$Mouse_genotype)
###### Map of our samples FIGURE 1 (with design) ######
hmhzline <- read.csv("../data/HMHZ.csv")
# change not visible color
forMap$color <- as.character(forMap$color)
forMap$color[forMap$color %in% "green"] <- "green4"
forMap$color <- as.factor(forMap$color)
area <- get_stamenmap(bbox = c(8, 48, 18, 54), zoom = 6, maptype = "toner-lite")
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 1) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, fill = color),
box.padding = 2, size = 7, col = "white", segment.colour = "black") +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
scale_fill_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
pdf(file = "../figures/Fig1_temp.pdf", width = 8, height = 8)
map
dev.off()
### Table 1:Infection experiment design
tab1 <- table(art2SummaryDF$Mouse_genotype,art2SummaryDF$Mouse_subspecies,art2SummaryDF$Sex,art2SummaryDF$infection_isolate)
tab1 <- data.frame(tab1)
tab1 <- tab1[tab1$Freq != 0,]
tab1wide <- dcast(tab1, Var1 + Var2 ~ Var4 + Var3, value.var="Freq")
tab1wide
write.csv(tab1wide, "../figures/Table1_temp.csv", row.names = F)
###### how many mice died before shedding oocysts? ######
table(art2SummaryDF$sumoocysts.per.tube == 0)
# 5 mice did not shed oocysts, all infected by E88
deadNoOO <- art2SummaryDF[art2SummaryDF$sumoocysts.per.tube == 0,"EH_ID"]
dfNoOO <- DSart2[DSart2$EH_ID %in% deadNoOO,]
ggplot(dfNoOO, aes(x=dpi, y=relWL, group=EH_ID, col=EH_ID)) + geom_line() + geom_point()
###### what is the overall peak day for each parasite isolate? ######
aggregate(art2SummaryDF$dpi_max.OPG,
list(art2SummaryDF$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
# 1    Brandenburg139 (E. ferrisi) 25 6 0.73
# 2     Brandenburg64 (E. ferrisi) 87 6 0.86
# 3 Brandenburg88 (E. falciformis) 56 8 1.34
aggregate(art2SummaryDF$dpi_minWeight,
list(art2SummaryDF$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
# Brandenburg139 (E. ferrisi) 25 5 2.08
# Brandenburg64 (E. ferrisi) 87 5 1.69
# Brandenburg88 (E. falciformis)  56 9 1.58
## Make table with batches (only batch 1 was treated with anthelminthics)
tS1 <- data.frame(table(art2SummaryDF$Batch, art2SummaryDF$Mouse_genotype, art2SummaryDF$infection_isolate))
tS1 <- tS1[order(tS1$Var1) & tS1$Freq != 0,]
tS1 <- tS1[order(tS1$Var1),]
tS1 <- dcast(tS1, Var1 + Var3 ~ Var2, value.var="Freq")
tS1
write.csv(tS1, "../figures/TableS1_temp.csv", row.names = F) # NB done for FULL DS
## Age of mice
range(as.numeric(art2SummaryDF$ageAtInfection))
# to pretty plot
d <- aggregate(art2SummaryDF$ageAtInfection, list(Mouse_genotype = art2SummaryDF$Mouse_genotype), mean)
names(d)[2] <- "mean_age_genotype"
df <- merge(art2SummaryDF, d)
df$mean_age_genotype
order(df$mean_age_genotype)
df[order(df$mean_age_genotype),]
df_order <- df[order(df$mean_age_genotype),]
View(df_order)
ggplot(df_order, aes(Mouse_genotype, ageAtInfection)) +
geom_boxplot()
df_order
ggplot(df_order, aes(Mouse_genotype, mean_age_genotype)) +
geom_boxplot()
ggplot(df_order, aes(Mouse_genotype, ageAtInfection)) +
geom_boxplot()
df_order <- df[order(df$mean_age_genotype),]
ggplot(df_order, aes(Mouse_genotype, ageAtInfection)) +
geom_boxplot()
# to pretty plot
d <- aggregate(art2SummaryDF$ageAtInfection, list(Mouse_genotype = art2SummaryDF$Mouse_genotype), mean)
names(d)[2] <- "mean_age_genotype"
df <- merge(art2SummaryDF, d)
df_order <- df[order(df$mean_age_genotype),]
ggplot(df_order, aes(Mouse_genotype, ageAtInfection)) +
geom_boxplot()
df_order <- df[order(as.numeric(df$mean_age_genotype)),]
ggplot(df_order, aes(Mouse_genotype, as.numeric(ageAtInfection))) +
geom_boxplot()
# to pretty plot
d <- aggregate(art2SummaryDF$ageAtInfection, list(Mouse_genotype = art2SummaryDF$Mouse_genotype), median)
names(d)[2] <- "mean_age_genotype"
df <- merge(art2SummaryDF, d)
df_order <- df[order(as.numeric(df$mean_age_genotype)),]
ggplot(df_order, aes(Mouse_genotype, as.numeric(ageAtInfection))) +
geom_boxplot()
# to pretty plot
d <- aggregate(art2SummaryDF$ageAtInfection, list(Mouse_genotype = art2SummaryDF$Mouse_genotype), mean)
names(d)[2] <- "mean_age_genotype"
df <- merge(art2SummaryDF, d)
df_order <- df[order(as.numeric(df$mean_age_genotype)),]
ggplot(df_order, aes(Mouse_genotype, as.numeric(ageAtInfection))) +
geom_boxplot()
df_sorted <- art2SummaryDF %>%
mutate(Mouse_genotype = fct_reorder(Mouse_genotype, -ageAtInfection))
ggplot(df_order, aes(Mouse_genotype, as.numeric(ageAtInfection))) +
geom_boxplot()
# to pretty plot
d <- aggregate(as.numeric(art2SummaryDF$ageAtInfection),
list(Mouse_genotype = art2SummaryDF$Mouse_genotype), mean)
names(d)[2] <- "mean_age_genotype"
df <- merge(art2SummaryDF, d)
df_order <- df[order(as.numeric(df$mean_age_genotype)),]
ggplot(df_order, aes(Mouse_genotype, as.numeric(ageAtInfection))) +
geom_boxplot()
df <- merge(art2SummaryDF, d)
df_order <- df[order(as.numeric(df$mean_age_genotype)),]
View(df_order)
reorder(df$Mouse_genotype, df$mean_age_genotype)
df$Mouse_genotype <- reorder(df$Mouse_genotype, df$mean_age_genotype)
ggplot(df, aes(Mouse_genotype, as.numeric(ageAtInfection))) +
geom_boxplot()
df$Mouse_genotype <- reorder(df$Mouse_genotype, df$mean_age_genotype)
ggplot(df, aes(Mouse_genotype, as.numeric(ageAtInfection))) +
geom_boxplot()
df$Mouse_genotype <- reorder(df$Mouse_genotype, as.numeric(df$mean_age_genotype))
ggplot(df, aes(Mouse_genotype, as.numeric(ageAtInfection))) +
geom_boxplot()
ggplot(df, aes(Mouse_genotype, as.numeric(ageAtInfection))) +
geom_boxplot()+
coord_flip()
ggplot(df, aes(Mouse_genotype, as.numeric(ageAtInfection))) +
geom_boxplot()+
coord_flip() +
geom_jitter(size = 2, alpha = 0.25, width = 0.2)
ggplot(df, aes(Mouse_genotype, as.numeric(ageAtInfection))) +
coord_flip() +
geom_jitter(size = 2, alpha = 0.25, width = 0.2)
ggplot(df, aes(Mouse_genotype, as.numeric(ageAtInfection), col = Mouse_genotype)) +
coord_flip() +
geom_jitter(size = 2, alpha = 0.25, width = 0.2)
ggplot(df, aes(Mouse_genotype, as.numeric(ageAtInfection), col = Mouse_genotype)) +
coord_flip() +
geom_jitter(size = 2, alpha = 0.25, width = 0.2) +
geom_point(aes(Mouse_genotype, as.numeric(mean_age_genotype)), size = 5)
avg <- df %>%
summarize(avg = mean(mean_age_genotype, na.rm = T)) %>%
pull(avg)
avg
ggplot(df, aes(Mouse_genotype, as.numeric(ageAtInfection), col = Mouse_genotype)) +
geom_hline(aes(yintercept = avg), color = "gray70", size = 0.6) +
coord_flip() +
geom_jitter(size = 2, alpha = 0.25, width = 0.2) +
geom_point(aes(Mouse_genotype, as.numeric(mean_age_genotype)), size = 5)
ggplot(df, aes(Mouse_genotype, as.numeric(ageAtInfection), col = Mouse_genotype)) +
geom_segment(aes(x = Mouse_genotype, xend = Mouse_genotype,
y = avg, yend = mean_age_genotype),
size = 0.8) +
geom_hline(aes(yintercept = avg), color = "gray70", size = 0.6) +
coord_flip() +
geom_jitter(size = 2, alpha = 0.25, width = 0.2) +
geom_point(aes(Mouse_genotype, as.numeric(mean_age_genotype)), size = 5)
