1/6
cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.18,0.6,.1,.2)
cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.18,0.51,.1,.2)
cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.18,0.52,.1,.2)
cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.18,0.53,.1,.2)
cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.18,0.54,.1,.2)
cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.18,0.58,.1,.2)
cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.18,0.56,.1,.2)
cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)
draw_plot_label(c("A", "B", "C"), c(.01, .3, .3), c(1, 1, .5), size = 15)
bigPlot <- cowplot::ggdraw() +
draw_plot(hypplot, 0, .6, .3, .4) +
draw_plot(P1, .3, .5, .7, .5) +
draw_plot(P2, .3, 0, .7, .5) +
draw_plot_label(c("A", "B", "C"), c(.01, .3, .3), c(1, 1, .5), size = 15)
bigPlot
pdf(file = "../figures/bigPlot.pdf",
width = 17, height = 12)
bigPlot
dev.off()
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)
pdf(file = "../figures/bigPlot.pdf",
width = 17, height = 12)
bigPlot
dev.off()
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5), label ="H1" col = "red", size =6) +
theme(legend.position = "none")
hypplot1
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5), label ="H1" col = "red", size =6) +
theme(legend.position = "none")
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5), label ="H1" col = "red", size =6) +
theme(legend.position = "none")
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5), label ="H1", col = "red", size =6) +
theme(legend.position = "none")
hypplot1
# hyp framework
dfhyp1 <- data.frame(hypotheses = rep("H1.neg coupling Res-Tol",2),
plot = c("x=OPG, y=relWL", "x=res, y=tol"),
x = c(1,2,3,1,2,3), y = c(3,2,1,3,2,1),
label = c("H1", rep(NA,5)))
dfhyp2 <- data.frame(hypotheses = rep("H2.pos coupling Res-Tol",2),
plot = c("x=OPG, y=relWL", "x=res, y=tol"),
x = c(1,2,3,1,2,3), y = c(2,2,2,1,2,3),
label = c("H2", rep(NA,5)))
dfhyp3 <- data.frame(hypotheses = rep("H3.no coupling Res-Tol",2),
plot = c("x=OPG, y=relWL", "x=res, y=tol"),
x = c(1,2,3,1,2,3), y = c(1,2,3,2,2,2),
label = c("H3", rep(NA,5)))
dfhyp <- rbind(dfhyp1, dfhyp2, dfhyp3)
hypplot <- ggplot(dfhyp, aes(x, y)) +
geom_line(aes(col = hypotheses)) +
facet_grid(plot~hypotheses) +
theme(legend.position = "none")
hypplot
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5), label ="H1", col = "red", size =6) +
theme(legend.position = "none")
hypplot1
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "red", size =6) +
theme(legend.position = "none")
hypplot1
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "red", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank())
hypplot1
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "red", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank())
hypplot1
strip.background = element_blank(), strip.text.x = element_blank()
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "red", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank())
hypplot1
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "red", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = %))
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "red", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = 5))
hypplot1
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "red", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = 15))
hypplot1
hypplot3 <- ggplot(dfhyp3, aes(x, y)) +
geom_line(col = "grey", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "darkgrey", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = 15))
hypplot3
hypplot3 <- ggplot(dfhyp3, aes(x, y)) +
geom_line(col = "grey", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 2.5, y= 1.5, label =label), col = "darkgrey", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = 15))
hypplot3
hypplot2 <- ggplot(dfhyp2, aes(x, y)) +
geom_line(col = "green", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "darkgreen", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = 15))
hypplot2
getFullModel <- function(dataframe, which){
if (which == "RES"){
modFULL <- glm.nb(max.OPG ~ infection_isolate*Mouse_genotype, data = dataframe)
} else if (which == "RES_ZI") { # for zero inflated
modFULL <- zeroinfl(max.OPG ~ infection_isolate*Mouse_genotype, data = dataframe, dist = "negbin")
} else if (which == "IMP"){
modFULL <- lm(relWL~infection_isolate*Mouse_genotype, data = dataframe)
} else if (which == "TOL"){
modFULL <- lm(relWL ~ 0 + max.OPG : (infection_isolate * Mouse_genotype), data = dataframe)
}
return(modFULL)
}
getPred <- function(dataframe, which){
model = getFullModel(dataframe, which)
pred = ggpredict(model, terms = c("Mouse_genotype", "infection_isolate"))
pred = (data.frame(pred))
names(pred)[names(pred) %in% c("x", "group")] = c("Mouse_genotype", "infection_isolate")
return(pred)
}
getMergeRT <- function(x, y, z){
colnames(x) <- gsub("name.", "", colnames(x))
names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "OPG", sep = "_")
colnames(y) <- gsub("name.", "", colnames(y))
names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "relWL", sep = "_")
colnames(z) <- gsub("name.", "", colnames(z))
names(z)[names(z) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(z)[names(z) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Tol", sep = "_")
merge(merge(x, y), z)
}
predRes <- getPred(art2SummaryDF, "RES")
predImp <- getPred(art2SummaryDF, "IMP")
predTol <- getPred(art2SummaryDF, "TOL")
finalplotDF <- getMergeRT(predRes, predImp, predTol)
finalplotDF$label <- finalplotDF$Mouse_genotype
levels(finalplotDF$label) <- as.character(c(1:8))
finalplotDF$Genotype <- paste0(finalplotDF$label, ". ", finalplotDF$Mouse_genotype)
# test correlations:
listPar <- list("Brandenburg139 (E. ferrisi)","Brandenburg64 (E. ferrisi)", "Brandenburg88 (E. falciformis)")
finalplotDF$infection_isolate
l1 <- lapply(listPar, function(x){
c1 <- cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_OPG"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_relWL"],
method="pearson")
c2 <- cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_OPG"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_relWL"],
method="spearman")
paste0(as.character(c1$method), ":\n", round(c1$estimate, 2), ", p-value=",  signif(c1$p.value, digits=2), "\n",
as.character(c2$method), ":\n", round(c2$estimate, 2), ", p-value=",  signif(c2$p.value, digits=2))
})
addCortext1 <- data.frame(infection_isolate = unlist(listPar),
testcor = unlist(l1))
l2 <- lapply(listPar, function(x){
c1 <- cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_OPG"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="pearson")
c2 <- cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_OPG"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="spearman")
paste0(as.character(c1$method), ":\n", round(c1$estimate, 2), ", p-value=",  signif(c1$p.value, digits=2), "\n",
as.character(c2$method), ":\n", round(c2$estimate, 2), ", p-value=",  signif(c2$p.value, digits=2))
})
addCortext2 <- data.frame(infection_isolate = unlist(listPar),
testcor = unlist(l2))
## Plot raw (WL vs OPG) and res-tol
library(scales)
mycolors <- scales::seq_gradient_pal("darkblue", "orangered", "Lab")(seq(0,1,length.out=8))
## Plot1
P1 <- ggplot(finalplotDF, aes(x=predicted_OPG, y=predicted_relWL)) +
geom_errorbarh(aes(xmin = conf.low_OPG, xmax = conf.high_OPG), color = "grey") +
geom_errorbar(aes(ymin = conf.low_relWL, ymax = conf.high_relWL), color = "grey") +
geom_point(aes(col = Genotype), size = 7)+
facet_grid(.~infection_isolate)+
geom_text(aes(label=label), col = "white")+
scale_color_manual(values = mycolors) +
geom_smooth(method = "lm", se = F, col = "black")+
geom_text(data = addCortext1, aes(label = testcor, x = 3e6, y = 0.15))
## Plot2
P2 <- ggplot(finalplotDF, aes(x = predicted_OPG, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_OPG, xmax = conf.high_OPG), color = "grey") +
geom_point(aes(col = Genotype), size = 7)+
scale_x_reverse(name = "RESISTANCE \n(inverse of) maximum OPG")+
scale_y_reverse(name = "TOLERANCE \n(inverse of) slope of maximum weight loss on maximum OPG")+
facet_grid(.~infection_isolate)+
geom_text(aes(label=label), col = "white")+
coord_cartesian(xlim=c(0,2.5e6), ylim=c(0, 0.4))+
scale_color_manual(values = mycolors) +
geom_smooth(method = "lm", se = F, col = "black") +
geom_text(data = addCortext2, aes(label = testcor, x = 1.5e6, y = 0.25))
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)
bigPlot
hypplot3
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)
bigPlot
pdf(file = "../figures/bigPlot.pdf",
width = 17, height = 12)
bigPlot
dev.off()
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "red", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = 10))
hypplot2 <- ggplot(dfhyp2, aes(x, y)) +
geom_line(col = "green", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "darkgreen", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = 10))
hypplot3 <- ggplot(dfhyp3, aes(x, y)) +
geom_line(col = "grey", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 2.5, y= 1.5, label =label), col = "darkgrey", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = 10))
getFullModel <- function(dataframe, which){
if (which == "RES"){
modFULL <- glm.nb(max.OPG ~ infection_isolate*Mouse_genotype, data = dataframe)
} else if (which == "RES_ZI") { # for zero inflated
modFULL <- zeroinfl(max.OPG ~ infection_isolate*Mouse_genotype, data = dataframe, dist = "negbin")
} else if (which == "IMP"){
modFULL <- lm(relWL~infection_isolate*Mouse_genotype, data = dataframe)
} else if (which == "TOL"){
modFULL <- lm(relWL ~ 0 + max.OPG : (infection_isolate * Mouse_genotype), data = dataframe)
}
return(modFULL)
}
getPred <- function(dataframe, which){
model = getFullModel(dataframe, which)
pred = ggpredict(model, terms = c("Mouse_genotype", "infection_isolate"))
pred = (data.frame(pred))
names(pred)[names(pred) %in% c("x", "group")] = c("Mouse_genotype", "infection_isolate")
return(pred)
}
getMergeRT <- function(x, y, z){
colnames(x) <- gsub("name.", "", colnames(x))
names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(x)[names(x) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "OPG", sep = "_")
colnames(y) <- gsub("name.", "", colnames(y))
names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(y)[names(y) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "relWL", sep = "_")
colnames(z) <- gsub("name.", "", colnames(z))
names(z)[names(z) %in% c("predicted", "conf.low",  "std.error", "conf.high")] <-
paste(names(z)[names(z) %in% c("predicted", "conf.low",  "std.error", "conf.high")], "Tol", sep = "_")
merge(merge(x, y), z)
}
predRes <- getPred(art2SummaryDF, "RES")
predImp <- getPred(art2SummaryDF, "IMP")
predTol <- getPred(art2SummaryDF, "TOL")
finalplotDF <- getMergeRT(predRes, predImp, predTol)
finalplotDF$label <- finalplotDF$Mouse_genotype
levels(finalplotDF$label) <- as.character(c(1:8))
finalplotDF$Genotype <- paste0(finalplotDF$label, ". ", finalplotDF$Mouse_genotype)
# test correlations:
listPar <- list("Brandenburg139 (E. ferrisi)","Brandenburg64 (E. ferrisi)", "Brandenburg88 (E. falciformis)")
finalplotDF$infection_isolate
l1 <- lapply(listPar, function(x){
c1 <- cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_OPG"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_relWL"],
method="pearson")
c2 <- cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_OPG"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_relWL"],
method="spearman")
paste0(as.character(c1$method), ":\n", round(c1$estimate, 2), ", p-value=",  signif(c1$p.value, digits=2), "\n",
as.character(c2$method), ":\n", round(c2$estimate, 2), ", p-value=",  signif(c2$p.value, digits=2))
})
addCortext1 <- data.frame(infection_isolate = unlist(listPar),
testcor = unlist(l1))
l2 <- lapply(listPar, function(x){
c1 <- cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_OPG"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="pearson")
c2 <- cor.test(finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_OPG"],
finalplotDF[finalplotDF$infection_isolate %in% x, "predicted_Tol"],
method="spearman")
paste0(as.character(c1$method), ":\n", round(c1$estimate, 2), ", p-value=",  signif(c1$p.value, digits=2), "\n",
as.character(c2$method), ":\n", round(c2$estimate, 2), ", p-value=",  signif(c2$p.value, digits=2))
})
addCortext2 <- data.frame(infection_isolate = unlist(listPar),
testcor = unlist(l2))
## Plot raw (WL vs OPG) and res-tol
library(scales)
mycolors <- scales::seq_gradient_pal("darkblue", "orangered", "Lab")(seq(0,1,length.out=8))
## Plot1
P1 <- ggplot(finalplotDF, aes(x=predicted_OPG, y=predicted_relWL)) +
geom_errorbarh(aes(xmin = conf.low_OPG, xmax = conf.high_OPG), color = "grey") +
geom_errorbar(aes(ymin = conf.low_relWL, ymax = conf.high_relWL), color = "grey") +
geom_point(aes(col = Genotype), size = 7)+
facet_grid(.~infection_isolate)+
geom_text(aes(label=label), col = "white")+
scale_color_manual(values = mycolors) +
geom_smooth(method = "lm", se = F, col = "black")+
geom_text(data = addCortext1, aes(label = testcor, x = 3e6, y = 0.15))
## Plot2
P2 <- ggplot(finalplotDF, aes(x = predicted_OPG, y = predicted_Tol)) +
geom_errorbar(aes(ymin = conf.low_Tol, ymax = conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_OPG, xmax = conf.high_OPG), color = "grey") +
geom_point(aes(col = Genotype), size = 7)+
scale_x_reverse(name = "RESISTANCE \n(inverse of) maximum OPG")+
scale_y_reverse(name = "TOLERANCE \n(inverse of) slope of maximum weight loss on maximum OPG")+
facet_grid(.~infection_isolate)+
geom_text(aes(label=label), col = "white")+
coord_cartesian(xlim=c(0,2.5e6), ylim=c(0, 0.4))+
scale_color_manual(values = mycolors) +
geom_smooth(method = "lm", se = F, col = "black") +
geom_text(data = addCortext2, aes(label = testcor, x = 1.5e6, y = 0.25))
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)
bigPlot
pdf(file = "../figures/bigPlot.pdf",
width = 17, height = 12)
bigPlot
dev.off()
hypplot1 <- ggplot(dfhyp1, aes(x, y)) +
geom_line(col = "red", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "red", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = 8))
hypplot2 <- ggplot(dfhyp2, aes(x, y)) +
geom_line(col = "green", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 1.5, y= 1.5, label =label), col = "darkgreen", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = 8))
hypplot3 <- ggplot(dfhyp3, aes(x, y)) +
geom_line(col = "grey", size =2) +
facet_grid(plot~hypotheses) +
geom_text(aes(x = 2.5, y= 1.5, label =label), col = "darkgrey", size =6) +
theme(legend.position = "none", axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
strip.background = element_blank(), strip.text.x = element_blank(),
strip.text.y = element_text(size = 8))
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)
bigPlot
pdf(file = "../figures/bigPlot.pdf",
width = 17, height = 12)
bigPlot
dev.off()
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)+
draw_plot(hypplot3, 0.49,0.56,.1,.2)+
draw_plot(hypplot1, 0.79,0.56,.1,.2)
bigPlot
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)+
draw_plot(hypplot3, 0.49,0.56,.1,.2)+
draw_plot(hypplot1, 0.69,0.56,.1,.2)
bigPlot
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)+
draw_plot(hypplot3, 0.49,0.56,.1,.2)+
draw_plot(hypplot1, 0.75,0.56,.1,.2)
bigPlot
pdf(file = "../figures/bigPlot.pdf",
width = 17, height = 12)
bigPlot
dev.off()
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)+
draw_plot(hypplot3, 0.49,0.56,.1,.2)+
draw_plot(hypplot1, 0.78,0.56,.1,.2)
bigPlot
pdf(file = "../figures/bigPlot.pdf",
width = 17, height = 12)
bigPlot
dev.off()
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)+
draw_plot(hypplot3, 0.49,0.56,.1,.2)+
draw_plot(hypplot1, 0.85,0.56,.1,.2)
bigPlot
pdf(file = "../figures/bigPlot.pdf",
width = 17, height = 12)
bigPlot
dev.off()
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)+
draw_plot(hypplot3, 0.49,0.56,.1,.2)+
draw_plot(hypplot1, 0.8,0.56,.1,.2)
bigPlot
pdf(file = "../figures/bigPlot.pdf",
width = 17, height = 12)
bigPlot
dev.off()
bigPlot <- cowplot::ggdraw() +
draw_plot(P1, 0, .5, 1, .5) +
draw_plot(P2, 0, 0, 1, .5) +
draw_plot(hypplot3, 0.19,0.56,.1,.2)+
draw_plot(hypplot3, 0.49,0.56,.1,.2)+
draw_plot(hypplot1, 0.78,0.56,.1,.2)
bigPlot
pdf(file = "../figures/bigPlot.pdf",
width = 17, height = 12)
bigPlot
dev.off()
