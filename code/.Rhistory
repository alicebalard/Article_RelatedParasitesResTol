# [1] "G=30.2 ,df=8 ,p=0.000197"
testMouse <- homemadeGtest(modfull, modNOmouse)
# [1] "G=30.6 ,df=9 ,p=0.000341"
testInteraction <- homemadeGtest(modfull, modNOint)
# [1] "G=24 ,df=6 ,p=0.000513"
# Calculate slopes for each group:
predTolSlopes <- ggpredict(modfull, terms = c("Mouse_genotype", "infection_isolate"), condition = c(max.OPG = 1000000))
## And plot
predTolSlopes <- data.frame(predTolSlopes)
names(predTolSlopes)[names(predTolSlopes) %in% c("x", "group")] <- c("Mouse_genotype", "infection_isolate")
# make line up to 5e6 OPG for plot
pts <- predTolSlopes
pts$predicted <- pts$predicted*5
pts$relWL_OPGnull <- 0
names(pts)[names(pts) %in% c("predicted")] <- "relWL_5MOPG"
pts <- melt(pts, measure.vars = c("relWL_OPGnull", "relWL_5MOPG"))
names(pts)[names(pts) %in% c("variable", "value")] <- c("max.OPG", "relWL")
pts$max.OPG <- as.character(pts$max.OPG)
pts$max.OPG[pts$max.OPG %in% "relWL_OPGnull"] <- "0"
pts$max.OPG[pts$max.OPG %in% "relWL_5MOPG"] <- "5e6"
pts$max.OPG <- as.numeric(pts$max.OPG)
pts$group <- factor(paste(pts$Mouse_genotype, pts$infection_isolate, sep = "_"))
T1 <- ggplot(pts, aes(x = max.OPG, y = relWL, col = Mouse_genotype)) +
geom_line(aes(group = group)) +
facet_grid(.~infection_isolate) +
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 5000000, 1000000),
labels = seq(0, 5000000, 1000000)/1000000) +
scale_y_continuous(name = "maximum weight loss compared to day of infection",
breaks = seq(0,0.3, 0.05),
labels = c("0%", "5%", "10%", "15%", "20%", "25%", "30%")) +
geom_point(data = dataset, size = 4, pch = 1)+
coord_cartesian(ylim=c(0, 0.30)) +
theme(legend.position = "top")
## Means & 95% CI of each slope
T2 <- ggplot(predTolSlopes, aes(x = infection_isolate, y = predicted, col = Mouse_genotype)) +
geom_point(size = 4, position = position_dodge(width = .5)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = .1,
position = position_dodge(width = .5)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
name = "(predicted) relative weight loss per million OPG") +
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
theme(legend.position = "top")
FigTOL <- cowplot::plot_grid(T1, T2,
labels=c("A", "B"), label_size = 20)
return(list(testIsolate = testIsolate, testMouse = testMouse, testInteraction = testInteraction,
predTolSlopes = predTolSlopes, T1 = T1, T2 = T2, FigTOL = FigTOL))
}
### with full dataset
tolAll <- toleranceAnalysis(dataset = art2al_SUMdf)
tolAll$T1
tolAll
########################################
### Second part: assessing tolerance ###
########################################
# toleranceAnalysis <- function(dataset){
dataset = art2al_SUMdf
modfull <- lm(relWL ~ 0 + max.OPG : (infection_isolate * Mouse_genotype), data = dataset)
modNOmouse <- lm(relWL ~ 0 + max.OPG : (infection_isolate), data = dataset)
modNOisolate <- lm(relWL ~ 0 + max.OPG : (Mouse_genotype), data = dataset)
modNOint <- lm(relWL ~ 0 + max.OPG : (infection_isolate + Mouse_genotype), data = dataset)
testIsolate <- homemadeGtest(modfull, modNOisolate)
# [1] "G=30.2 ,df=8 ,p=0.000197"
testMouse <- homemadeGtest(modfull, modNOmouse)
# [1] "G=30.6 ,df=9 ,p=0.000341"
testInteraction <- homemadeGtest(modfull, modNOint)
# Calculate slopes for each group:
predTolSlopes <- ggpredict(modfull, terms = c("Mouse_genotype", "infection_isolate"), condition = c(max.OPG = 1000000))
predTolSlopes
modfull
modfull
# extract rsquare by group
modfull$r.sq
# extract rsquare by group
modfull$xlevels
# extract rsquare by group
modfull$coefficients
# extract rsquare by group
modfull$residuals
# extract rsquare by group
modfull$effects
# extract rsquare by group
modfull$rank
# extract rsquare by group
modfull$assign
# extract rsquare by group
modfull$qr$qr
# extract rsquare by group
summary(modfull)
# extract rsquare by group
s <- summary(modfull)
s$r.squared
lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% MG &
dataset$infection_isolate %in% II]))
dataset$Mouse_genotype
levels(dataset$Mouse_genotype)
MG <- levels(dataset$Mouse_genotype)
II <- levels(dataset$infection_isolate)
lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% MG[1] &
dataset$infection_isolate %in% II[1],])
MG[1]
II[1]
MG <- levels(dataset$Mouse_genotype)
II <- levels(dataset$infection_isolate)
lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% MG[1] &
dataset$infection_isolate %in% II[1],])
MG[1]
II[1]
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% MG[1] &
dataset$infection_isolate %in% II[1],])
MG[1]
II[1]
l
summary(l)
summary(l)$r.sqr
summary(l)$r.sq
# extract rsquare by group
data.frame(Mouse_genotype = NA,
Isolate = NA,
N = NA,
R2 = NA,
slope = NA)
# extract rsquare by group
finalTable <- data.frame(Mouse_genotype = NA, Isolate = NA,
N = NA, R2 = NA, slope = NA)
s <- summary(modfull)
s$r.squared
# extract rsquare by group
finalTable <- data.frame(Mouse_genotype = NA, Isolate = NA,
N = NA, R2 = NA, slope = NA)
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
summary(l)$r.sq
})})
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
round(summary(l)$r.sq), 2)
})})
round(summary(l)$r.sq, 2)
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
round(summary(l)$r.sq, 2)
})})
myrsquared <- sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
round(summary(l)$r.sq, 2)
})})
reshape(myrsquared)
reshape(myrsquared, direction = "long")
reshape(myrsquared, direction = "wide")
melt(myrsquared)
myrsquared <- melt(myrsquared)
names(myrsquared)
names(myrsquared) <- c("infection_isolate", "Mouse_genotype", "R-squared")
myrsquared
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
length(l)
})})
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% MG[1] &
dataset$infection_isolate %in% II[1])
## And plot
predTolSlopes <- data.frame(predTolSlopes)
names(predTolSlopes)[names(predTolSlopes) %in% c("x", "group")] <- c("Mouse_genotype", "infection_isolate")
# make line up to 5e6 OPG for plot
pts <- predTolSlopes
pts$predicted <- pts$predicted*5
pts$relWL_OPGnull <- 0
names(pts)[names(pts) %in% c("predicted")] <- "relWL_5MOPG"
pts <- melt(pts, measure.vars = c("relWL_OPGnull", "relWL_5MOPG"))
names(pts)[names(pts) %in% c("variable", "value")] <- c("max.OPG", "relWL")
pts$max.OPG <- as.character(pts$max.OPG)
pts$max.OPG[pts$max.OPG %in% "relWL_OPGnull"] <- "0"
pts$max.OPG[pts$max.OPG %in% "relWL_5MOPG"] <- "5e6"
pts$max.OPG <- as.numeric(pts$max.OPG)
pts$group <- factor(paste(pts$Mouse_genotype, pts$infection_isolate, sep = "_"))
T1 <- ggplot(pts, aes(x = max.OPG, y = relWL, col = Mouse_genotype)) +
geom_line(aes(group = group)) +
facet_grid(.~infection_isolate) +
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 5000000, 1000000),
labels = seq(0, 5000000, 1000000)/1000000) +
scale_y_continuous(name = "maximum weight loss compared to day of infection",
breaks = seq(0,0.3, 0.05),
labels = c("0%", "5%", "10%", "15%", "20%", "25%", "30%")) +
geom_point(data = dataset, size = 4, pch = 1)+
coord_cartesian(ylim=c(0, 0.30)) +
theme(legend.position = "top")
## Means & 95% CI of each slope
T2 <- ggplot(predTolSlopes, aes(x = infection_isolate, y = predicted, col = Mouse_genotype)) +
geom_point(size = 4, position = position_dodge(width = .5)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = .1,
position = position_dodge(width = .5)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
name = "(predicted) relative weight loss per million OPG") +
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
theme(legend.position = "top")
FigTOL <- cowplot::plot_grid(T1, T2,
labels=c("A", "B"), label_size = 20)
return(list(testIsolate = testIsolate, testMouse = testMouse, testInteraction = testInteraction,
predTolSlopes = predTolSlopes, T1 = T1, T2 = T2, FigTOL = FigTOL))
}
### with full dataset
tolAll <- toleranceAnalysis(dataset = art2al_SUMdf)
tolAll
### with conservative dataset
tol77mice <- toleranceAnalysis(dataset = SUBsummaryDF77mice)
tol77mice$T1
pdf(file = "../figures/tol77mice.pdf",
width = 12, height = 6)
tol77mice$FigTOL
dev.off()
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% MG[1] &
dataset$infection_isolate %in% II[1],])
l
summary(l)
s <- summary(l)
s$call
s$terms
s$fstatistic
nobs(l)
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
length(l)
nobs(l)
})})
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
length(l)
})})
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
nobs(l)
})})
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
nobs(l, na = F)
})})
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
nobs(l)
})})
summary(l)
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% MG[1] &
dataset$infection_isolate %in% II[1],])
l$coefficients
l$coefficients * 1e6
predTolSlopes
l$coefficients * 1e6
# Calculate slopes, N, R-squared by group
getStuff <- function(what){
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
if (what == "rsquared") {round(summary(l)$r.sq, 2)}
else if (what == "N") {nobs(l)}
else if (what == "slope") { l$coefficients * 1e6}
})})
}
getStuff(what = "rsquared")
getStuff(what = "N")
getStuff(what = "slope")
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
if (what == "rsquared") {round(summary(l)$r.sq, 2)}
else if (what == "N") {nobs(l)}
else if (what == "slope") {round(l$coefficients * 1e6, 2)}
})})}
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
if (what == "rsquared") {round(summary(l)$r.sq, 2)}
else if (what == "N") {nobs(l)}
else if (what == "slope") {round(l$coefficients * 1e6, 2)}
})})}
# Calculate slopes, N, R-squared by group
getStuff <- function(what){
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
if (what == "rsquared") {round(summary(l)$r.sq, 2)}
else if (what == "N") {nobs(l)}
else if (what == "slope") {round(l$coefficients * 1e6, 2)}
})})
}
getStuff(what = "rsquared")
getStuff(what = "N")
getStuff(what = "slope")
melt(getStuff(what = "rsquared"))
rbind(melt(getStuff(what = "rsquared")),
melt(getStuff(what = "N")), melt(getStuff(what = "slope")))
merge(melt(getStuff(what = "rsquared")),
melt(getStuff(what = "N")), melt(getStuff(what = "slope")))
melt(getStuff(what = "rsquared"))
melt(getStuff(what = "rsquared"))
names(melt(getStuff(what = "rsquared")))
names(melt(getStuff(what = "rsquared"))) <- c("infection_isolate", "Mouse_genotype", "rsquared")
names(melt(getStuff(what = "rsquared"))) #<- c("infection_isolate", "Mouse_genotype", "rsquared")
c("infection_isolate", "Mouse_genotype", "rsquared")
names(melt(getStuff(what = "rsquared"))) <-
c("infection_isolate", "Mouse_genotype", "rsquared")
colnames(melt(getStuff(what = "rsquared"))) <-
c("infection_isolate", "Mouse_genotype", "rsquared")
R <- melt(getStuff(what = "rsquared")))
R <- melt(getStuff(what = "rsquared"))
names(R)
names(R)    <- c("infection_isolate", "Mouse_genotype", "rsquared")
names(melt(getStuff(what = "rsquared"))) <- c("infection_isolate", "Mouse_genotype", "rsquared")
R <- melt(getStuff(what = "rsquared"))
names(R) <- c("infection_isolate", "Mouse_genotype", "rsquared")
N <- melt(getStuff(what = "N"))
names(N) <- c("infection_isolate", "Mouse_genotype", "N")
N <- melt(getStuff(what = "slope"))
names(N) <- c("infection_isolate", "Mouse_genotype", "slope")
merge/R, N
merge(R, N)
merge(R, N, all=T)
# Calculate slopes, N, R-squared by group
getStuff <- function(what){
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
if (what == "rsquared") {round(summary(l)$r.sq, 2)}
else if (what == "N") {nobs(l)}
else if (what == "slope") {round(l$coefficients * 1e6, 2)}
})})
}
R <- melt(getStuff(what = "rsquared"))
names(R) <- c("infection_isolate", "Mouse_genotype", "rsquared")
N <- melt(getStuff(what = "N"))
names(N) <- c("infection_isolate", "Mouse_genotype", "N")
N <- melt(getStuff(what = "slope"))
names(N) <- c("infection_isolate", "Mouse_genotype", "slope")
merge(R, N, all=T)
R <- melt(getStuff(what = "rsquared"))
R <- melt(getStuff(what = "rsquared"))
names(R) <- c("infection_isolate", "Mouse_genotype", "rsquared")
N <- melt(getStuff(what = "N"))
names(N) <- c("infection_isolate", "Mouse_genotype", "N")
S <- melt(getStuff(what = "slope"))
names(S) <- c("infection_isolate", "Mouse_genotype", "slope")
R
S
N
S
# Calculate slopes, N, R-squared by group
getStuff <- function(what){
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
if (what == "rsquared") {round(summary(l)$r.sq, 2)}
else if (what == "N") {nobs(l)}
else if (what == "slope") {round(l$coefficients * 1e6, 2)}
})})
}
getStuff(what = "rsquared")
R <- melt(getStuff(what = "rsquared"))
R
names(R) <- c("infection_isolate", "Mouse_genotype", "rsquared")
R
N <- melt(getStuff(what = "N"))
N
names(N) <- c("infection_isolate", "Mouse_genotype", "N")
S <- melt(getStuff(what = "slope"))
S
l
l$coefficients
l$coefficients * 1e6
# Calculate slopes, N, R-squared by group
getStuff <- function(what){
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
if (what == "rsquared") {round(summary(l)$r.sq, 2)}
else if (what == "N") {nobs(l)}
else if (what == "slope") {round(l$coefficients * 1e6, 2)}
})})
}
getStuff(slope)
getStuff("slope")
# Calculate slopes, N, R-squared by group
getStuff <- function(what){
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
if (what == "rsquared") {
round(summary(l)$r.sq, 2)
}else if (what == "N") {
nobs(l)
} else if (what == "slope") {
round(l$coefficients * 1e6, 2)
}
}
}
}
}
}
getStuff("slope")
l$coefficients * 1e6
R <- melt(getStuff(what = "rsquared"))
names(R) <- c("infection_isolate", "Mouse_genotype", "rsquared")
N <- melt(getStuff(what = "N"))
names(N) <- c("infection_isolate", "Mouse_genotype", "N")
S <- melt(getStuff(what = "slope"))
names(S) <- c("infection_isolate", "Mouse_genotype", "slope")
merge(R, N, all=T)
## And plot
predTolSlopes <- data.frame(predTolSlopes)
names(predTolSlopes)[names(predTolSlopes) %in% c("x", "group")] <- c("Mouse_genotype", "infection_isolate")
# make line up to 5e6 OPG for plot
pts <- predTolSlopes
pts$predicted <- pts$predicted*5
pts$relWL_OPGnull <- 0
names(pts)[names(pts) %in% c("predicted")] <- "relWL_5MOPG"
pts <- melt(pts, measure.vars = c("relWL_OPGnull", "relWL_5MOPG"))
names(pts)[names(pts) %in% c("variable", "value")] <- c("max.OPG", "relWL")
pts$max.OPG <- as.character(pts$max.OPG)
pts$max.OPG[pts$max.OPG %in% "relWL_OPGnull"] <- "0"
pts$max.OPG[pts$max.OPG %in% "relWL_5MOPG"] <- "5e6"
pts$max.OPG <- as.numeric(pts$max.OPG)
pts$group <- factor(paste(pts$Mouse_genotype, pts$infection_isolate, sep = "_"))
T1 <- ggplot(pts, aes(x = max.OPG, y = relWL, col = Mouse_genotype)) +
geom_line(aes(group = group)) +
facet_grid(.~infection_isolate) +
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_x_continuous("maximum oocysts per gram of feces (x10e6)",
breaks = seq(0, 5000000, 1000000),
labels = seq(0, 5000000, 1000000)/1000000) +
scale_y_continuous(name = "maximum weight loss compared to day of infection",
breaks = seq(0,0.3, 0.05),
labels = c("0%", "5%", "10%", "15%", "20%", "25%", "30%")) +
geom_point(data = dataset, size = 4, pch = 1)+
coord_cartesian(ylim=c(0, 0.30)) +
theme(legend.position = "top")
## Means & 95% CI of each slope
T2 <- ggplot(predTolSlopes, aes(x = infection_isolate, y = predicted, col = Mouse_genotype)) +
geom_point(size = 4, position = position_dodge(width = .5)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = .1,
position = position_dodge(width = .5)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
name = "(predicted) relative weight loss per million OPG") +
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
theme(legend.position = "top")
FigTOL <- cowplot::plot_grid(T1, T2,
labels=c("A", "B"), label_size = 20)
return(list(testIsolate = testIsolate, testMouse = testMouse, testInteraction = testInteraction,
predTolSlopes = predTolSlopes, T1 = T1, T2 = T2, FigTOL = FigTOL))
}
### with full dataset
tolAll <- toleranceAnalysis(dataset = art2al_SUMdf)
tolAll
### with conservative dataset
tol77mice <- toleranceAnalysis(dataset = SUBsummaryDF77mice)
tol77mice$T1
pdf(file = "../figures/tol77mice.pdf",
width = 12, height = 6)
tol77mice$FigTOL
dev.off()
# Calculate slopes, N, R-squared by group
getStuff <- function(what){
sapply(levels(dataset$Mouse_genotype), function(mg){
sapply(levels(dataset$infection_isolate), function(ii){
l <- lm(relWL ~ 0 + max.OPG, data = dataset[dataset$Mouse_genotype %in% mg &
dataset$infection_isolate %in% ii,])
if (what == "rsquared") {
round(summary(l)$r.sq, 2)
}else if (what == "N") {
nobs(l)
} else if (what == "slope") {
round(l$coefficients * 1e6, 2)
}
})
})
}
getStuff("slope")
