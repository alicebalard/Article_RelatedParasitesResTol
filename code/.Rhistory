# ggmap(area) +
ggplot(hmhzline)+
geom_line(aes(lon, lat))
# ggmap(area) +
ggplot(hmhzline)+
geom_line(aes(lat, lon))
hmhzline
# ggmap(area) +
ggplot(hmhzline)+
geom_line(aes(lon, lat))
###### Map of our samples FIGURE 1 (with design) ######
hmhzline <- read.csv("../data/HMHZ.csv")
# ggmap(area) +
ggplot(hmhzline)+
geom_line(aes(lon, lat))
# ggmap(area) +
ggplot(hmhzline)+
geom_point(aes(lon, lat))
# ggmap(area) +
ggplot(hmhzline)+
geom_point(aes(lon, lat)) +
geom_line()
# ggmap(area) +
ggplot(hmhzline,aes(lon, lat))+
geom_point() +
geom_line()
View(hmhzline)
# ggmap(area) +
ggplot(hmhzline,aes(lon, lat))+
geom_point() +
geom_line(aes(y = lon))
# ggmap(area) +
ggplot(hmhzline,aes(lon, lat))+
geom_point() +
geom_line(aes(y = lat))
# ggmap(area) +
ggplot(hmhzline[order(hmhzline$lat),],aes(lon, lat))+
geom_point() +
geom_line(aes(y = lat))
# ggmap(area) +
ggplot(hmhzline[order(hmhzline$lat),],aes(lon, lat))+
geom_point() +
geom_line()
###### Map of our samples FIGURE 1 (with design) ######
hmhzline <- read.csv("../data/HMHZ.csv")
# ggmap(area) +
ggplot(hmhzline[order(hmhzline$order),],aes(lon, lat))+
geom_point() +
geom_line()
hmhzline[order(hmhzline$order),]
# ggmap(area) +
ggplot(hmhzline[order(hmhzline$order),], aes(lon, lat))+
geom_point() +
geom_path()
# ggmap(area) +
ggplot(hmhzline[order(hmhzline$order),], aes(lon, lat))+
# geom_point() +
geom_path()
map <- ggmap(area) +
geom_path(hmhzline[order(hmhzline$order),], aes(lon, lat))
map <- ggmap(area) +
geom_path(hmhzline[order(hmhzline$order),], aes(lon, lat))
map <- ggmap(area) +
geom_path(hmhzline[order(hmhzline$order),], aes(lon, lat)) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map <- ggmap(area) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
geom_path(hmhzline[order(hmhzline$order),], aes(x = lon, y = lat)) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map <- ggmap(area) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
# geom_path(hmhzline[order(hmhzline$order),], aes(x = lon, y = lat)) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map +
geom_path(hmhzline[order(hmhzline$order),], aes(x = lon, y = lat))
map +
geom_path(hmhzline, aes(x = lon, y = lat))
map +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat))
map <- ggmap(area) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat)) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat)) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat)) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple") +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
area <- get_stamenmap(bbox = c(9, 49, 17, 53.5), zoom = 7,
maptype = "toner-lite")
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
area <- get_stamenmap(bbox = c(9, 49, 17, 53.7), zoom = 7,
maptype = "toner-lite")
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, col = color),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, linecol = color),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, segment.color = color),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, segment.color = color),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, segment.colour = color),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, segment.colr = color),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, segment.col = color),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, fill = color),
box.padding = 2, segment.colour = "grey", size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, fill = color),
box.padding = 2, segment.colour = "grey", size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
scale_fill_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, fill = color),
box.padding = 2, segment.colour = "grey", size = 5) +
geom_point(data = forMap, aes(longitude, latitude), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
scale_fill_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, fill = color, color = 'white'),
box.padding = 2, segment.colour = "grey", size = 5) +
geom_point(data = forMap, aes(longitude, latitude), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
scale_fill_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, fill = color), color = 'white',
box.padding = 2, segment.colour = "grey", size = 5) +
geom_point(data = forMap, aes(longitude, latitude), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
scale_fill_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
hmhzline <- read.csv("../data/HMHZ.csv")
area <- get_stamenmap(bbox = c(9, 49, 17, 53.7), zoom = 7,
maptype = "toner-lite")
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
pdf(file = "../figures/mapIsolatesandStrains.pdf", width = 5, height =5)
map
dev.off()
#### Load data and functions within ####
source("dataPreparation.R")
DF_all # all 168 mice
length(na.omit(ALL_summary_F0$relWL))# 108 F0 mice
length(na.omit(ALL_summary_F1$relWL))# 60 F1 mice
length(na.omit(ALL_summary_F0$peak.oocysts.per.g.mouse))# 99 F0 mice
length(na.omit(ALL_summary_F1$peak.oocysts.per.g.mouse))# 59 F1 mice
length(na.omit(ALL_summary_F0$invtolerance))# 103 F0 mice
length(na.omit(ALL_summary_F1$invtolerance))# 60 F0 mice
ALL_summary$Exp_2groups <- "group2"
ALL_summary$Exp_2groups[ALL_summary$Exp_ID %in% c("Exp_003", "Exp_004")] <- "group1"
ALL_summary[ALL_summary$Exp_2groups %in% "group1",] %>%
dplyr::select(Mouse_genotype, infection_isolate) %>%
dplyr::group_by(Mouse_genotype, infection_isolate)%>%
dplyr::summarize(sum=n())%>%
tidyr::spread(infection_isolate, value = sum)
ALL_summary[ALL_summary$Exp_2groups %in% "group2",] %>%
dplyr::select(Mouse_genotype, infection_isolate) %>%
dplyr::group_by(Mouse_genotype, infection_isolate)%>%
dplyr::summarize(sum=n())%>%
tidyr::spread(infection_isolate, value = sum)
###### what is the overall peak day for each parasite isolate? ######
aggregate(ALL_summary$dpi_max.oocysts.per.tube,
list(ALL_summary$infection_isolate), function(x) {paste(length(x), median(x), round(sd(x),2))})
aggregate(ALL_summary$dpi_minWeight,
list(ALL_summary$infection_isolate), function(x) {paste(length(x), median(x), round(sd(x),2))})
###### what is the overall prepatent period for each parasite isolate? ######
d <- as.data.frame(
DF_all[!is.na(DF_all$oocysts.per.tube) & DF_all$oocysts.per.tube > 0,] %>%
dplyr::group_by(EH_ID) %>%
dplyr::slice(which.min(dpi)) %>%
dplyr::select(EH_ID, weight, HI, startingWeight, ageAtInfection, Sex,
Mouse_genotype, Eimeria_species, Mouse_subspecies,
infection_isolate, Exp_ID, dpi))
aggregate(d$dpi,
list(d$infection_isolate), function(x) {paste(length(x), median(x), round(sd(x),2))})
ggplot(DF_all, aes(dpi, oocysts.per.tube, group = EH_ID)) + geom_line() + facet_grid(.~infection_isolate)
xRes <- as.numeric(na.omit(ALL_summary$peak.oocysts.per.g.mouse))
xImp <- as.numeric(na.omit(ALL_summary$relWL))
xTol <- as.numeric(na.omit(ALL_summary$invtolerance))
hist(xRes, breaks = 100)
descdist(xRes)
findGoodDist(x = xRes, distribs = c("normal", "negative binomial", "poisson"),
distribs2 = c("norm", "nbinom", "pois"))
hist(xImp, breaks = 100)
descdist(xImp)
findGoodDist(x = xImp+ 0.01, distribs = c("normal", "beta", "gamma", "weibull"),
distribs2 = c("norm", "beta", "gamma", "weibull"))
### weibull for impact on health
ALL_summary$impact <- ALL_summary$relWL +0.01
ALL_summary_F0$impact <- ALL_summary_F0$relWL +0.01
ALL_summary_F1$impact <- ALL_summary_F1$relWL +0.01
# for tolerance, we need to find a way to deal with the massive extreme values
hist(xTol, breaks = 1000)
descdist(xTol)
## too skewed, so we log transform it
translation <- 1e-8
xTol2 <- log10(xTol+translation)
range(xTol2)
hist(xTol2, breaks = 1000)
descdist(xTol2)
findGoodDist(x = xTol2, distribs = c("normal"),
distribs2 = c("norm"))
### We translate, log transfor the data to deal with skewness
ALL_summary$tolerance <- log10(ALL_summary$invtolerance+translation) + 8
ALL_summary_F0$tolerance <- log10(ALL_summary_F0$invtolerance+translation) + 8
ALL_summary_F1$tolerance <- log10(ALL_summary_F1$invtolerance+translation) + 8
ALL_summary[is.na(ALL_summary$tolerance), c("EH_ID", "Mouse_genotype", "relWL", "peak.oocysts.per.g.mouse")]
# Resistance on F0 (parental strains)
modRes <- glm.nb(peak.oocysts.per.g.mouse ~ infection_isolate*Mouse_genotype, data = ALL_summary_F0)
anova(modRes, test = "LRT")
# SIGNIF infection isolate (p-value = 0.01902) + interactions with mice (p-value = 8.432e-05)
plot_model(modRes, type = "int", dot.size = 4, dodge = .5)
modRes2 <- glm.nb(peak.oocysts.per.g.mouse ~ Eimeria_species*Mouse_subspecies, data = ALL_summary_F0)
anova(modRes2)
# SIGNIF infection isolate (p-value = 0.02236) + interactions with mice (p-value = 6.52e-07)
plot_model(modRes2, type = "int", dot.size = 4, dodge = .5)
## Translation of 1% because Weibull doesn't support nul data
modImp <- survreg(Surv(impact)~infection_isolate*Mouse_genotype, data = ALL_summary_F0, dist="weibull")
anova(modImp)
length(ALL_summary_F0$relWL)
## Plot
plot_model(modImp, type = "int",dot.size = 4, dodge = .5)
modImp2 <- survreg(Surv(impact)~Eimeria_species*Mouse_subspecies, data = ALL_summary_F0, dist="weibull")
anova(modImp2) # Eimeria species AND mouse subspecies significant
plot_model(modImp2, type = "int",dot.size = 4, dodge = .5)
length(na.omit(ALL_summary_F0$tolerance))
modTol <- lm(tolerance ~ infection_isolate*Mouse_genotype, data = ALL_summary_F0)
anova(modTol)
## Plot
plot_model(modTol, type = "int", dot.size = 4, dodge = .5)
modTol2 <- lm(tolerance ~ Eimeria_species*Mouse_subspecies, data = ALL_summary_F0)
anova(modTol2)
plot_model(modTol2, type = "int", dot.size = 4, dodge = .5)
ALL_summary_F1$hybridLevel <- "hybrid"
ALL_summary_F1$hybridLevel[ALL_summary_F1$HI<0.2] <- "outbred domesticus"
ALL_summary_F1$hybridLevel[ALL_summary_F1$HI>0.8] <- "outbred musculus"
ALL_summary_F1$hybridLevel <- factor(ALL_summary_F1$hybridLevel, levels = c("outbred domesticus", "hybrid", "outbred musculus"))
ALL_summary_F1$Eimeria_species <- as.factor(ALL_summary_F1$Eimeria_species)
# to fix the scaling issue
hist(ALL_summary_F1$peak.oocysts.per.g.mouse, breaks = 100)
hist(round(ALL_summary_F1$peak.oocysts.per.g.mouse/1000), breaks = 100)
length(ALL_summary_F1$peak.oocysts.per.g.mouse)
ALL_summary_F1$peak.oocysts.per.g.mouse.div100 <- round(ALL_summary_F1$peak.oocysts.per.g.mouse/100)
## 1. discrete lm : test factors P & H & interactions
modResF1 <- glm.nb(peak.oocysts.per.g.mouse ~ hybridLevel*Eimeria_species, data = ALL_summary_F1)
anova(modResF1, test = "LRT") # eimeria, host, inter signif
plot_model(modResF1, type = "int", dot.size = 4, dodge = .5,
colors = c("orange", "darkgreen"), title = "Resistance")
## 2. continuous ML : test HV
fitRes <- parasiteLoad::analyse(data = ALL_summary_F1,
response = "peak.oocysts.per.g.mouse.div100",
group = "Eimeria_species", model = "negbin")
coef(fitRes$H1)
# to plot on axis
scaleOO <- c(50, 100, 200, 500, 1000, 3000)
parasiteLoad::bananaPlot(mod = fitRes$H1,
data = ALL_summary_F1,
response = "peak.oocysts.per.g.mouse.div100",
islog10 = T, group = "Eimeria_species",
cols = c("orange", "darkgreen")) + theme_bw() +
ylab("Maximum parasite load (oocysts) per mouse gram") +
xlab("Hybrid index") +
scale_y_log10(breaks=scaleOO, labels = format(scaleOO*100, scientific = TRUE))+
theme(axis.title.x = element_text(hjust=1), axis.text = element_text(size=13))
coef(fitRes$H3$groupA)
coef(fitRes$H3$groupB)
parasiteLoad::bananaPlot(mod = fitRes$H3,
data = ALL_summary_F1,
response = "peak.oocysts.per.g.mouse.div100",
islog10 = T, group = "Eimeria_species",
cols = c("orange", "darkgreen"))
length(ALL_summary_F1$peak.oocysts.per.g.mouse[!is.na(ALL_summary_F1$peak.oocysts.per.g.mouse)])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$peak.oocysts.per.g.mouse)])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$peak.oocysts.per.g.mouse),])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$peak.oocysts.per.g.mouse) &
ALL_summary_F1$Eimeria_species %in% "E.falciformis",])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$peak.oocysts.per.g.mouse) &
ALL_summary_F1$Eimeria_species %in% "E.ferrisi",])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$impact),])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$impact) &
ALL_summary_F1$impact %in% "E.falciformis",])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$peak.oocysts.per.g.mouse) &
ALL_summary_F1$impact %in% "E.ferrisi",])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$impact),])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$impact) &
ALL_summary_F1$Eimeria_species %in% "E.falciformis",])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$impact) &
ALL_summary_F1$Eimeria_species %in% "E.ferrisi",])
## 1. discrete lm : test factors P & H & interactions
modImpF1 <- survreg(Surv(impact)~ hybridLevel*Eimeria_species, data = ALL_summary_F1, dist="weibull")
anova(modImpF1) # Eimeria signif. 0.022
plot_model(modImpF1, type = "int", dot.size = 4, dodge = .5,
colors = c("orange", "darkgreen"), title = "Impact on host health")
## 2. discrete lm : test HV
modImpF1 <- survreg(Surv(impact)~ hybridLevel*Eimeria_species, data = ALL_summary_F1, dist="weibull")
modResF1_fal <- survreg(Surv(impact)~ hybridLevel*Eimeria_species,  dist="weibull",
data = ALL_summary_F1[ALL_summary_F1$Eimeria_species %in% "E.falciformis",])
anova(modResF1_fal) # no signif
modResF1_fer <- survreg(Surv(impact)~ hybridLevel*Eimeria_species,  dist="weibull",
data = ALL_summary_F1[ALL_summary_F1$Eimeria_species %in% "E.ferrisi",])
## 1. discrete lm : test factors P & H & interactions
modImpF1 <- survreg(Surv(impact)~ hybridLevel*Eimeria_species, data = ALL_summary_F1, dist="weibull")
anova(modImpF1) # Eimeria signif. 0.022
plot_model(modImpF1, type = "int", dot.size = 4, dodge = .5,
colors = c("orange", "darkgreen"), title = "Impact on host health")
## 2. discrete lm : test HV
modImpF1 <- survreg(Surv(impact)~ hybridLevel*Eimeria_species, data = ALL_summary_F1, dist="weibull")
modResF1_fal <- survreg(Surv(impact)~ hybridLevel*Eimeria_species,  dist="weibull",
data = ALL_summary_F1[ALL_summary_F1$Eimeria_species %in% "E.falciformis",])
anova(modResF1_fal) # no signif
modResF1_fer <- survreg(Surv(impact)~ hybridLevel*Eimeria_species,  dist="weibull",
data = ALL_summary_F1[ALL_summary_F1$Eimeria_species %in% "E.ferrisi",])
anova(modResF1_fer) # no signif
## 3. continuous ML : test HV
fitImp <- parasiteLoad::analyse(data = ALL_summary_F1,
response = "impact",
group = "Eimeria_species", model = "weibull")
###############
## Tolerance ##
###############
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$tolerance),])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$tolerance) &
ALL_summary_F1$Eimeria_species %in% "E.falciformis",])
nrow(ALL_summary_F1[!is.na(ALL_summary_F1$tolerance) &
ALL_summary_F1$Eimeria_species %in% "E.ferrisi",])
