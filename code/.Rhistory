x
names(x) <- ""
x
names(x) <- " "
x
data.frame(mycols = x)
data.frame(mycols = x, row.names = F)
data.frame(mycols = x, row.names = " ")
data.frame(mycols = x, row.names = "x")
data.frame(mycols = x)
x <- data.frame(mycols = x)
rownames(x)
rownames(x) <- "TORM"
rownames(x) <- rep("TORM", nrow(x))
rownames(x) <- NA
write.csv(x, "x.csv", row.names = F)
x <- data.frame(mycols = x)
write.csv(x, "x.csv", row.names = F)
x <- unlist(lapply(strsplit(rownames(S.T$linfct), " - "), `[[`, 1))
x <- data.frame(mycols = x)
write.csv(x, "x.csv", row.names = F)
x
x$mycols
unique(x$mycols)
x <- unlist(lapply(strsplit(rownames(S.T$linfct), " - "), `[[`, 1))
x <- data.frame(mycols = unique(x))
write.csv(x, "x.csv", row.names = F)
#### Load data and functions within ####
source("dataPreparation.R")
#### Load data and functions within ####
source("dataPreparation.R")
###### Map of our samples FIGURE 1 (with design) ######
hmhzline <- read.csv("../data/HMHZ.csv")
area <- get_stamenmap(bbox = c(9, 49, 17, 53.7), zoom = 7,
maptype = "toner-lite")
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
pdf(file = "../figures/Fig1.pdf", width = 5, height =5)
map
dev.off()
table(summaryDF108mice$infection_isolate, summaryDF108mice$Mouse_genotype, summaryDF108mice$anth)
## Age of mice
range(as.numeric(rawDF108mice$ageAtInfection))
###### what is the overall peak day for each parasite isolate? ######
aggregate(summaryDF108mice$dpi_max.oocysts.per.tube,
list(summaryDF108mice$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
aggregate(summaryDF108mice$dpi_minWeight,
list(summaryDF108mice$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### what is the overall prepatent period for each parasite isolate? ######
d <- as.data.frame(
rawDF108mice[!is.na(rawDF108mice$oocysts.per.tube) & rawDF108mice$oocysts.per.tube > 0,] %>%
dplyr::group_by(EH_ID) %>%
dplyr::slice(which.min(dpi)) %>%
dplyr::select(EH_ID, weight, HI, startingWeight, ageAtInfection, Sex,
Mouse_genotype, Eimeria_species, Mouse_subspecies,
infection_isolate, Exp_ID, dpi))
aggregate(d$dpi,
list(d$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### Course of infection FIGURE 2 ######
rawDF108mice$parasiteDensity <- rawDF108mice$oocysts.per.tube / rawDF108mice$weight
forplot <- rawDF108mice %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(parasiteDensity*10e-6, na.rm = TRUE),
sd = sd(parasiteDensity*10e-6, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.1 <- ggplot(forplot, aes(dpi, mean, group = infection_isolate, col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("parasite density (10e6 oocysts per mouse gram)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.8)) +
labs(color = "Eimeria isolate")
forplot2 <- rawDF108mice %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(relativeWeight, na.rm = TRUE),
sd = sd(relativeWeight, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.2 <- ggplot(forplot2, aes(dpi, mean, group = infection_isolate,
col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("relative weight compared to day 0 (%)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.2)) +
labs(color = "Eimeria isolate")
library(cowplot)
Fig2 <- plot_grid(F2.1, F2.2,
labels=c("A", "B"), label_size = 20)
pdf(file = "../figures/Fig2.pdf", width = 10, height = 5)
Fig2
dev.off()
## Correlation sum of oocysts / peak oocysts
ggplot(summaryDF108mice, aes(sumoocysts.per.tube, max.oocysts.per.tube)) +
geom_smooth(method = "lm")+ geom_point()
cor(summaryDF108mice$sumoocysts.per.tube , summaryDF108mice$max.oocysts.per.tube,
method = "pearson")
## RESISTANCE
# for models, inverse of parasite density:
summaryDF108mice$peak.oocysts.per.g.mouse
# for plots, invert + translation positive (300000) / 10000:
getResistanceIndex <- function(x){
y = (- x + 300000)/300000
return(y)}
summaryDF108mice$ResistanceIndex <- getResistanceIndex(summaryDF108mice$peak.oocysts.per.g.mouse)
plotChoiceResIndex <- ggplot(summaryDF108mice, aes(peak.oocysts.per.g.mouse, ResistanceIndex)) +
geom_point(size = 4, pch =21) +
ylab("Resistance Index") +
xlab("Parasite density (oocysts per mouse gram) at peak day")
plotChoiceResIndex
xRes <- as.numeric(na.omit(summaryDF108mice$peak.oocysts.per.g.mouse))
hist(xRes, breaks = 100)
descdist(xRes)
pdf("../figures/supfig1.1.pdf")
findGoodDist(x = xRes, distribs = c("normal", "negative binomial"),
distribs2 = c("norm", "nbinom"))
dev.off()
## IMPACT ON HEALTH
xImp <- as.numeric(na.omit(summaryDF108mice$relWL))
hist(xImp, breaks = 100)
descdist(xImp)
pdf("../figures/supfig1.2.pdf")
findGoodDist(x = xImp+ 0.01, distribs = c("normal", "weibull"),
distribs2 = c("norm", "weibull"))
dev.off()
### weibull for impact on health
summaryDF108mice$impact <- summaryDF108mice$relWL +0.01
## TOLERANCE
summaryDF108mice$ToleranceIndex <- log10(
summaryDF108mice$relWL / summaryDF108mice$peak.oocysts.per.g.mouse + 1e-8) / (-8)
plotChoiceTolIndex <- ggplot(summaryDF108mice,
aes(x=peak.oocysts.per.g.mouse, y =relWL, fill = ToleranceIndex))+
geom_point(size = 4, pch =21) +
scale_fill_gradient(low = "white", high = "black") +
xlab("Parasite density (oocysts per mouse gram) at peak day") +
ylab("Maximum relative weight loss compared to day 0 (%)") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
labs(fill = "Tolerance Index") +
theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
)
plotChoiceTolIndex
xTol <- as.numeric(na.omit(summaryDF108mice$ToleranceIndex))
# for tolerance, we need to find a way to deal with the massive extreme values
hist(xTol, breaks = 1000)
descdist(xTol)
pdf("../figures/supfig1.3.pdf")
findGoodDist(x = xTol, distribs = c("normal"),
distribs2 = c("norm"))
dev.off()
summaryDF108mice[is.na(summaryDF108mice$ToleranceIndex), c("EH_ID", "Mouse_genotype", "relWL", "peak.oocysts.per.g.mouse")]
#
pdf(file = "../figures/choiceIndexes.pdf", width = 10, height = 5)
plot_grid(plotChoiceResIndex,
plotChoiceTolIndex,
labels=c("A", "B"), label_size = 15)
dev.off()
################
## Resistance ##
################
# Mmd vs Mmm
modResSubsp <- glm.nb(peak.oocysts.per.g.mouse ~ Eimeria_species*Mouse_subspecies, data = summaryDF108mice)
modResSubsp
anova(modResSubsp)
summary(modResSubsp)
a <- aov(modResSubsp)
summary.lm(a)
summary(modResSubsp)
# by strains
modResStrain <- glm.nb(peak.oocysts.per.g.mouse ~ infection_isolate*Mouse_genotype,
data = summaryDF108mice)
anova(modResStrain, test = "LRT")
# postHoc test
summaryDF108mice$intFac <- interaction(summaryDF108mice$infection_isolate,
summaryDF108mice$Mouse_genotype, drop=T)
modResStrainformulticomp <- glm.nb(peak.oocysts.per.g.mouse ~ intFac, data = summaryDF108mice)
summary(glht(modResStrainformulticomp, linfct=mcp(intFac = "Tukey")))
summary(glht(modResStrainformulticomp, linfct=mcp(intFac = "Tukey")))
S <- summary(glht(modResStrainformulticomp, linfct=mcp(intFac = "Tukey")))
S$coef
S$rhs
S
S$linfct
S$vcov
S$df
S$alternative
S$type
S$model
S
S$coef
S$test
S$test$coefficients
grep("burg139", S$test$coefficients)
grep("burg139", names(S$test$coefficients))
S$test$coefficients[grep("burg139", names(S$test$coefficients))]
grep("burg139", names(S$test$coefficients))
S$test$coefficients
S$test
install.packages("papaja")
devtools::install_github("crsh/papaja")
library(papaja)
apa_barplot()
papaja::apa_print(S)
postHocRes <- summary(glht(modResStrainformulticomp, linfct=mcp(intFac = "Tukey")))
knitr::opts_chunk$set(echo = TRUE)
library(papaja)
source("Article2_analysis.R")
apa_print(postHocRes)
apa_print(postHocRes)
apa_print(postHocRes)
?apa_print
tinytex::install_tinytex()
postHocRes
### Code for data analysis of Article 2
### August 2019
### Alice Balard
## INFO
# Mouse AA_0088, HI = 0.2
# Mouse AA_0064, HI = 0.08
# Mouse AA_0139, HI = 0.85
#### Load data and functions within ####
source("dataPreparation.R")
###### Map of our samples FIGURE 1 (with design) ######
hmhzline <- read.csv("../data/HMHZ.csv")
area <- get_stamenmap(bbox = c(9, 49, 17, 53.7), zoom = 7,
maptype = "toner-lite")
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 4) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name),
box.padding = 2, size = 5) +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
pdf(file = "../figures/Fig1.pdf", width = 5, height =5)
map
dev.off()
######################################
########## Read information ##########
######################################
table(summaryDF108mice$infection_isolate, summaryDF108mice$Mouse_genotype, summaryDF108mice$anth)
## Age of mice
range(as.numeric(rawDF108mice$ageAtInfection))
###### what is the overall peak day for each parasite isolate? ######
aggregate(summaryDF108mice$dpi_max.oocysts.per.tube,
list(summaryDF108mice$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
aggregate(summaryDF108mice$dpi_minWeight,
list(summaryDF108mice$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### what is the overall prepatent period for each parasite isolate? ######
d <- as.data.frame(
rawDF108mice[!is.na(rawDF108mice$oocysts.per.tube) & rawDF108mice$oocysts.per.tube > 0,] %>%
dplyr::group_by(EH_ID) %>%
dplyr::slice(which.min(dpi)) %>%
dplyr::select(EH_ID, weight, HI, startingWeight, ageAtInfection, Sex,
Mouse_genotype, Eimeria_species, Mouse_subspecies,
infection_isolate, Exp_ID, dpi))
aggregate(d$dpi,
list(d$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### Course of infection FIGURE 2 ######
rawDF108mice$parasiteDensity <- rawDF108mice$oocysts.per.tube / rawDF108mice$weight
forplot <- rawDF108mice %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(parasiteDensity*10e-6, na.rm = TRUE),
sd = sd(parasiteDensity*10e-6, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.1 <- ggplot(forplot, aes(dpi, mean, group = infection_isolate, col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("parasite density (10e6 oocysts per mouse gram)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.8)) +
labs(color = "Eimeria isolate")
forplot2 <- rawDF108mice %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(relativeWeight, na.rm = TRUE),
sd = sd(relativeWeight, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.2 <- ggplot(forplot2, aes(dpi, mean, group = infection_isolate,
col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("relative weight compared to day 0 (%)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.2)) +
labs(color = "Eimeria isolate")
library(cowplot)
Fig2 <- plot_grid(F2.1, F2.2,
labels=c("A", "B"), label_size = 20)
pdf(file = "../figures/Fig2.pdf", width = 10, height = 5)
Fig2
dev.off()
## Correlation sum of oocysts / peak oocysts
ggplot(summaryDF108mice, aes(sumoocysts.per.tube, max.oocysts.per.tube)) +
geom_smooth(method = "lm")+ geom_point()
cor(summaryDF108mice$sumoocysts.per.tube , summaryDF108mice$max.oocysts.per.tube,
method = "pearson")
###############################################################
########## Define our indexes and their distribution ##########
###############################################################
## RESISTANCE
# for models, inverse of parasite density:
summaryDF108mice$peak.oocysts.per.g.mouse
# for plots, invert + translation positive (300000) / 10000:
getResistanceIndex <- function(x){
y = (- x + 300000)/300000
return(y)}
summaryDF108mice$ResistanceIndex <- getResistanceIndex(summaryDF108mice$peak.oocysts.per.g.mouse)
plotChoiceResIndex <- ggplot(summaryDF108mice, aes(peak.oocysts.per.g.mouse, ResistanceIndex)) +
geom_point(size = 4, pch =21) +
ylab("Resistance Index") +
xlab("Parasite density (oocysts per mouse gram) at peak day")
plotChoiceResIndex
xRes <- as.numeric(na.omit(summaryDF108mice$peak.oocysts.per.g.mouse))
hist(xRes, breaks = 100)
descdist(xRes)
pdf("../figures/supfig1.1.pdf")
findGoodDist(x = xRes, distribs = c("normal", "negative binomial"),
distribs2 = c("norm", "nbinom"))
dev.off()
### nbinom for resistance
## IMPACT ON HEALTH
xImp <- as.numeric(na.omit(summaryDF108mice$relWL))
hist(xImp, breaks = 100)
descdist(xImp)
pdf("../figures/supfig1.2.pdf")
findGoodDist(x = xImp+ 0.01, distribs = c("normal", "weibull"),
distribs2 = c("norm", "weibull"))
dev.off()
### weibull for impact on health
summaryDF108mice$impact <- summaryDF108mice$relWL +0.01
## TOLERANCE
summaryDF108mice$ToleranceIndex <- log10(
summaryDF108mice$relWL / summaryDF108mice$peak.oocysts.per.g.mouse + 1e-8) / (-8)
plotChoiceTolIndex <- ggplot(summaryDF108mice,
aes(x=peak.oocysts.per.g.mouse, y =relWL, fill = ToleranceIndex))+
geom_point(size = 4, pch =21) +
scale_fill_gradient(low = "white", high = "black") +
xlab("Parasite density (oocysts per mouse gram) at peak day") +
ylab("Maximum relative weight loss compared to day 0 (%)") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
labs(fill = "Tolerance Index") +
theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
)
plotChoiceTolIndex
xTol <- as.numeric(na.omit(summaryDF108mice$ToleranceIndex))
# for tolerance, we need to find a way to deal with the massive extreme values
hist(xTol, breaks = 1000)
descdist(xTol)
pdf("../figures/supfig1.3.pdf")
findGoodDist(x = xTol, distribs = c("normal"),
distribs2 = c("norm"))
dev.off()
summaryDF108mice[is.na(summaryDF108mice$ToleranceIndex), c("EH_ID", "Mouse_genotype", "relWL", "peak.oocysts.per.g.mouse")]
# 9 mice died before peak
#
pdf(file = "../figures/choiceIndexes.pdf", width = 10, height = 5)
plot_grid(plotChoiceResIndex,
plotChoiceTolIndex,
labels=c("A", "B"), label_size = 15)
dev.off()
################################
##### Statistical analyses #####
################################
################
## Resistance ##
################
# Mmd vs Mmm
modResSubsp <- glm.nb(peak.oocysts.per.g.mouse ~ Eimeria_species*Mouse_subspecies, data = summaryDF108mice)
modResSubsp
anova(modResSubsp)
summary(modResSubsp)
a <- aov(modResSubsp)
summary.lm(a)
# SIGNIF infection isolate (p-value = 0.02236) + interactions with mice (p-value = 6.52e-07)
summary(modResSubsp)
# by strains
modResStrain <- glm.nb(peak.oocysts.per.g.mouse ~ infection_isolate*Mouse_genotype,
data = summaryDF108mice)
anova(modResStrain, test = "LRT")
# SIGNIF infection isolate (p-value = 0.01902) + interactions with mice (p-value = 8.432e-05)
# postHoc test
summaryDF108mice$intFac <- interaction(summaryDF108mice$infection_isolate,
summaryDF108mice$Mouse_genotype, drop=T)
modResStrainformulticomp <- glm.nb(peak.oocysts.per.g.mouse ~ intFac, data = summaryDF108mice)
postHocRes <- summary(glht(modResStrainformulticomp, linfct=mcp(intFac = "Tukey")))
postHocRes
postHocRes
postHocRes$test
postHocRes[1]
postHocRes
postHocRes$test
postHocRes$test$coefficients
postHocRes
# extract row and column
names(postHocRes$test$coefficients)
12*12
12*12 /2
12*12 /2 - 12
# extract row and column
names(postHocRes$test$coefficients)
12*12 - 12
(12*12 - 12)/2
# extract row and column
strsplit(names(postHocRes$test$coefficients))
# extract row and column
strsplit(names(postHocRes$test$coefficients), " - ")
# extract row and column
strsplit(names(postHocRes$test$coefficients), " - ")[1]
# extract row and column
x <- strsplit(names(postHocRes$test$coefficients), " - ")
lapply(x, `[[`, 1)
unlist(lapply(x, `[[`, 1))
rownames y- unlist(lapply(x, `[[`, 1))
rownames <- unlist(lapply(x, `[[`, 1))
colnames <- unlist(lapply(x, `[[`, 2))
# make a matrix
matrix(nrow = 66, mcol = 66)
# make a matrix
matrix(nrow = 66, ncol = 66)
# make a matrix
mymat <- matrix(nrow = 66, ncol = 66)
rownames(mymat) <- rownames
colnames(mymat) <- colnames
mymat
rownames
# make a matrix
mymat <- matrix(nrow = length(rownames), ncol = length(colnames))
rownames(mymat) <- rownames
colnames(mymat) <- colnames
mymat
rownames <- unique(unlist(lapply(x, `[[`, 1)))
colnames <- unique(unlist(lapply(x, `[[`, 2)))
# make a matrix
mymat <- matrix(nrow = length(rownames), ncol = length(colnames))
rownames(mymat) <- rownames
colnames(mymat) <- colnames
mymat
# grep the good value
paste(rownames[1], colnames[1], sep = " - ")
# grep the good value
grep(paste(rownames[1], colnames[1], sep = " - "), names(postHocRes$test$coefficients))
names(postHocRes$test$coefficients)
paste(rownames[1], colnames[1], sep = " - ")
# grep the good value
grepl(paste(rownames[1], colnames[1], sep = " - "), names(postHocRes$test$coefficients))
paste(rownames[1], colnames[1], sep = " - ")
names(postHocRes$test$coefficients)[1]
paste(rownames[1], colnames[1], sep = " - ") == names(postHocRes$test$coefficients)[1]
paste(rownames[1], colnames[1], sep = " - ") %in% names(postHocRes$test$coefficients)[1]
paste(rownames[1], colnames[1], sep = " - ") %in% names(postHocRes$test$coefficients)
grep(paste(rownames[1], colnames[1], sep = " - "), names(postHocRes$test$coefficients))
names(postHocRes$test$coefficients)[grepl(paste(rownames[1], colnames[1], sep = " - "), names(postHocRes$test$coefficients))]
postHocRes$test$coefficients[grepl(paste(rownames[1], colnames[1], sep = " - "), names(postHocRes$test$coefficients))]
names(postHocRes$test)
rownames(postHocRes$test)
colames(postHocRes$test)
colnames(postHocRes$test)
names(postHocRes$test$coefficients))
postHocRes$test$coefficients
myEstimates <- postHocRes$test$coefficients
myEstimates[grepl(paste(rownames[1], colnames[1], sep = " - "),myEstimates]
myEstimates[grepl(paste(rownames[1], colnames[1], sep = " - "),myEstimates)]
grepl(paste(rownames[1], colnames[1], sep = " - "),myEstimates)
grepl(paste(rownames[1], colnames[1], sep = " - "), names(myEstimates))
names(myEstimates)
paste(rownames[1], colnames[1], sep = " - ")
pattern <- paste(rownames[1], colnames[1], sep = " - ")
pattern %in% names(myEstimates)
names(myEstimates) %in% pattern
myEstimates[names(myEstimates) %in% pattern]
y <- myEstimates[names(myEstimates) %in% pattern]
mymat[1,1]
mymat[1,1] <- y
mymat
