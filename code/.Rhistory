modTolSubspecies_Para <- lm(ToleranceIndex ~ Mouse_subspecies, data = summaryDF108mice)
modTolSubspecies_Mous <- lm(ToleranceIndex ~ Eimeria_species, data = summaryDF108mice)
modTolSubspecies_inter <- lm(ToleranceIndex ~ Eimeria_species+Mouse_subspecies, data = summaryDF108mice)
myLRTsignificanceFactors(modTolSubspeciesFULL, modTolSubspecies_Para, modTolSubspecies_Mous, modTolSubspecies_inter)
## posthoc
modTolSubspformulticomp <- lm(ToleranceIndex ~ intFacSPECIES, data = summaryDF108mice)
# Fig 3.
Fig3 <- plot_grid(plotR_F0_subsp + theme(legend.position = "none"),
plotI_F0_subsp + theme(legend.position = "none"),
plotT_F0_subsp+ theme(legend.position = "none"),
plotT_F0_subsp ,
labels=c("A", "B", "C", "D"), label_size = 20)
Fig3
pdf(file = "../figures/Fig3.pdf",
width = 9, height = 9)
Fig3
dev.off()
## Fig 4
Fig4 <- plot_grid(plotR_F0_strains + theme(legend.position = "none"),
plotI_F0_strains + theme(legend.position = "none"),
plotT_F0_strain + theme(legend.position = "none"),
plotT_F0_strain,
labels=c("A", "B", "C", "D"), label_size = 20)
Fig4
pdf(file = "../figures/Fig4.pdf",
width = 9, height = 9)
Fig4
dev.off()
### Code for data analysis of Article 2
### August 2019
### Alice Balard
## INFO
# Mouse AA_0088, HI = 0.2
# Mouse AA_0064, HI = 0.08
# Mouse AA_0139, HI = 0.85
#### Load data and functions within ####
source("dataPreparation.R")
###### Map of our samples FIGURE 1 (with design) ######
hmhzline <- read.csv("../data/HMHZ.csv")
# change not visible color
forMap$color <- as.character(forMap$color)
forMap$color[forMap$color %in% "green"] <- "green4"
forMap$color <- as.factor(forMap$color)
area <- get_stamenmap(bbox = c(8, 48, 18, 54), zoom = 6, maptype = "toner-lite")
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 1) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, fill = color),
box.padding = 2, size = 7, col = "white", segment.colour = "black") +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
scale_fill_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
# pdf(file = "../figures/Fig1.pdf", width = 8, height = 8)
# map
# dev.off()
######################################
########## Read information ##########
######################################
## Read batches (Exp_003 treated by anthelminthcs only)
table(summaryDF108mice$infection_isolate, summaryDF108mice$Mouse_genotype, summaryDF108mice$Exp_ID)
## Read anthelminthics
table(summaryDF108mice$infection_isolate, summaryDF108mice$Mouse_genotype, summaryDF108mice$anth)
## Age of mice
range(as.numeric(rawDF108mice$ageAtInfection))
###### what is the overall peak day for each parasite isolate? ######
aggregate(summaryDF108mice$dpi_max.oocysts.per.tube,
list(summaryDF108mice$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
aggregate(summaryDF108mice$dpi_minWeight,
list(summaryDF108mice$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### what is the overall prepatent period for each parasite isolate? ######
d <- as.data.frame(
rawDF108mice[!is.na(rawDF108mice$oocysts.per.tube) & rawDF108mice$oocysts.per.tube > 0,] %>%
dplyr::group_by(EH_ID) %>%
dplyr::slice(which.min(dpi)) %>%
dplyr::select(EH_ID, weight, HI, startingWeight, ageAtInfection, Sex,
Mouse_genotype, Eimeria_species, Mouse_subspecies,
infection_isolate, Exp_ID, dpi))
aggregate(d$dpi,
list(d$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### Course of infection FIGURE 2 ######
rawDF108mice$parasiteDensity <- rawDF108mice$oocysts.per.tube / rawDF108mice$weight
forplot <- rawDF108mice %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(parasiteDensity*10e-6, na.rm = TRUE),
sd = sd(parasiteDensity*10e-6, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.1 <- ggplot(forplot, aes(dpi, mean, group = infection_isolate, col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("parasite density (10e6 oocysts per mouse gram)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.8)) +
labs(color = "Eimeria isolate")
forplot2 <- rawDF108mice %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(relativeWeight, na.rm = TRUE),
sd = sd(relativeWeight, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.2 <- ggplot(forplot2, aes(dpi, mean, group = infection_isolate,
col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("relative weight compared to day 0 (%)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.2)) +
labs(color = "Eimeria isolate")
library(cowplot)
Fig2 <- plot_grid(F2.1, F2.2,
labels=c("A", "B"), label_size = 20)
#pdf(file = "../figures/Fig2.pdf", width = 10, height = 5)
Fig2
#dev.off()
## Correlation sum of oocysts / peak oocysts
ggplot(summaryDF108mice, aes(sumoocysts.per.tube, max.oocysts.per.tube)) +
geom_smooth(method = "lm")+ geom_point()
cor(summaryDF108mice$sumoocysts.per.tube , summaryDF108mice$max.oocysts.per.tube,
method = "pearson")
###############################################################
########## Define our indexes and their distribution ##########
###############################################################
## RESISTANCE
# for models, inverse of parasite density:
range(summaryDF108mice$peak.oocysts.per.g.mouse, na.rm = TRUE)
# for plots, invert + translation positive (300000) / 10000:
getResistanceIndex <- function(x){
y = (- x + 300000)/300000
return(y)}
summaryDF108mice$ResistanceIndex <- getResistanceIndex(summaryDF108mice$peak.oocysts.per.g.mouse)
plotChoiceResIndex <- ggplot(summaryDF108mice, aes(peak.oocysts.per.g.mouse, ResistanceIndex)) +
geom_point(size = 4, pch =21) +
ylab("Resistance Index") +
xlab("Parasite density (oocysts per mouse gram) at peak day")
plotChoiceResIndex
xRes <- as.numeric(na.omit(summaryDF108mice$peak.oocysts.per.g.mouse))
hist(xRes, breaks = 100)
descdist(xRes)
#pdf("../figures/supfig1.1.pdf")
findGoodDist(x = xRes, distribs = c("normal", "negative binomial"),
distribs2 = c("norm", "nbinom"))
#dev.off()
### nbinom for resistance
## IMPACT ON HEALTH
xImp <- as.numeric(na.omit(summaryDF108mice$relWL))
hist(xImp, breaks = 100)
descdist(xImp)
#pdf("../figures/supfig1.2.pdf")
findGoodDist(x = xImp+ 0.01, distribs = c("normal", "weibull"),
distribs2 = c("norm", "weibull"))
#dev.off()
### weibull for impact on health
summaryDF108mice$impact <- summaryDF108mice$relWL + 0.01
## TOLERANCE
range(summaryDF108mice$relWL / summaryDF108mice$peak.oocysts.per.g.mouse, na.rm = T)
range(summaryDF108mice$relWL / summaryDF108mice$peak.oocysts.per.g.mouse + 1e-8, na.rm = T)
range(log10(summaryDF108mice$relWL / summaryDF108mice$peak.oocysts.per.g.mouse + 1e-8), na.rm = T)
range(log10(summaryDF108mice$relWL / summaryDF108mice$peak.oocysts.per.g.mouse + 1e-8)/-1, na.rm = T)
range(log10(summaryDF108mice$relWL / summaryDF108mice$peak.oocysts.per.g.mouse + 1e-8)/-8, na.rm = T)
summaryDF108mice$ToleranceIndex <- log10(
summaryDF108mice$relWL / summaryDF108mice$peak.oocysts.per.g.mouse + 1e-8) / (-8)
plotChoiceTolIndex <- ggplot(summaryDF108mice,
aes(x=peak.oocysts.per.g.mouse, y =relWL, fill = ToleranceIndex))+
geom_point(size = 4, pch =21) +
scale_fill_gradient(low = "white", high = "black") +
xlab("Parasite density (oocysts per mouse gram) at peak day") +
ylab("Maximum relative weight loss compared to day 0 (%)") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
labs(fill = "Tolerance Index") +
theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
)
plotChoiceTolIndex
xTol <- as.numeric(na.omit(summaryDF108mice$ToleranceIndex))
# for tolerance, we need to find a way to deal with the massive extreme values
hist(xTol, breaks = 1000)
descdist(xTol)
#pdf("../figures/supfig1.3.pdf")
findGoodDist(x = xTol, distribs = c("normal"),
distribs2 = c("norm"))
#dev.off()
summaryDF108mice[is.na(summaryDF108mice$ToleranceIndex), c("EH_ID", "Mouse_genotype", "relWL", "peak.oocysts.per.g.mouse")]
# 9 mice died before peak
#
# pdf(file = "../figures/choiceIndexes.pdf", width = 10, height = 5)
plot_grid(plotChoiceResIndex,
plotChoiceTolIndex,
labels=c("A", "B"), label_size = 15)
# dev.off()
################################
##### Statistical analyses #####
################################
## LRT test
homemadeGtest <- function(full, base){
dLL = logLik(full) - logLik(base)
dDF = base$df.residual - full$df.residual
pvalue <- 1 - stats::pchisq(2*dLL, df=dDF)
chisqvalue <- stats::qchisq(p = pvalue, df=dDF)
print(paste0("G=",round(2*dLL, 1), " ,df=", dDF, " ,p=", round(pvalue, 6)))
}
## LRT significance for each factor
myLRTsignificanceFactors <- function(modFull, modPar, modMouse, modInt){
print("significance of parasite:")
homemadeGtest(modFull, modPar)
print("significance of mouse:")
homemadeGtest(modFull, modMouse)
print("significance of interaction:")
homemadeGtest(modFull, modInt)
}
################
## Resistance ##
################
# Mmd vs Mmm
modResSubspFULL <- glm.nb(peak.oocysts.per.g.mouse ~ Eimeria_species*Mouse_subspecies, data = summaryDF108mice)
modResSubsp_Para <- glm.nb(peak.oocysts.per.g.mouse ~ Mouse_subspecies, data = summaryDF108mice)
modResSubsp_Mous <- glm.nb(peak.oocysts.per.g.mouse ~ Eimeria_species, data = summaryDF108mice)
modResSubsp_inter <- glm.nb(peak.oocysts.per.g.mouse ~ Eimeria_species+Mouse_subspecies, data = summaryDF108mice)
myLRTsignificanceFactors(modResSubspFULL, modResSubsp_Para, modResSubsp_Mous, modResSubsp_inter)
### POST-HOC: all by all
summaryDF108mice$intFacSPECIES <- interaction(summaryDF108mice$Eimeria_species,
summaryDF108mice$Mouse_subspecies, drop=T)
summaryDF108mice$intFacSTRAINS <- interaction(summaryDF108mice$infection_isolate,
summaryDF108mice$Mouse_genotype, drop=T)
modResSubsp_multicomp <- glm.nb(peak.oocysts.per.g.mouse ~ intFacSPECIES, data = summaryDF108mice)
postHocResSubsp <- summary(glht(modResSubsp_multicomp, linfct=mcp(intFacSPECIES = "Tukey")))
postHocResSubsp
myMatpostHoc_Res_Subsp <- getMatrixPostHoc(postHocResSubsp)
write.csv(myMatpostHoc_Res_Subsp, "../figures/TableRes.csv")
# by strains
modResStrainFULL <- glm.nb(peak.oocysts.per.g.mouse ~ infection_isolate*Mouse_genotype, data = summaryDF108mice)
modResStrain_Para <- glm.nb(peak.oocysts.per.g.mouse ~ Mouse_genotype, data = summaryDF108mice)
modResStrain_Mous <- glm.nb(peak.oocysts.per.g.mouse ~ infection_isolate, data = summaryDF108mice)
modResStrain_inter <- glm.nb(peak.oocysts.per.g.mouse ~ infection_isolate+Mouse_genotype, data = summaryDF108mice)
myLRTsignificanceFactors(modResStrainFULL, modResStrain_Para, modResStrain_Mous, modResStrain_inter)
# postHoc test
modResStrainformulticomp <- glm.nb(peak.oocysts.per.g.mouse ~ intFacSTRAINS, data = summaryDF108mice)
postHocResStrains <- summary(glht(modResStrainformulticomp, linfct=mcp(intFacSTRAINS = "Tukey")))
# Create a matrix to present the post-hoc tests
myMatpostHoc_Res_Strains <- getMatrixPostHoc(postHocResStrains)
write.csv(myMatpostHoc_Res_Strains, "../figures/supTableRes.csv")
## And plot:
## To add Ns on top of bars
getNs <- function(proxy, df, groupMus = "Mouse_genotype", groupPar = "infection_isolate"){
noNA = df[!is.na(df[[proxy]]),]
noNA$groupMus = noNA[[groupMus]]
noNA$groupPar = noNA[[groupPar]]
tab = table(noNA$groupPar, noNA$groupMus)
Ns = as.character(as.vector(t(tab)[as.vector(t(tab))!=0]))
return(Ns)
}
## Fig 3
# plot marginal effects of interaction terms
posx.1 <- c(0.9,1.1, 1.9,2.1)
plotR_F0_subsp <- plot_model(modResSubspFULL, type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "red"),
name = "Mouse subspecies",labels = c("Mmd", "Mmm")) +
ggtitle("Maximum oocysts density \n(mean and standard deviation)") +
scale_y_continuous("(predicted) maximum oocysts per mouse gram")+
xlab("Eimeria species") +
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.1,y=90000,label=getNs("peak.oocysts.per.g.mouse", summaryDF108mice,
"Mouse_subspecies", "Eimeria_species")), vjust=0)
plotR_F0_subsp
# plot marginal effects of interaction terms by isolates & strains
posx.2 <- c(0.8+c(0,1/8,2/8,3/8),1.8+c(0,1/8,2/8,3/8),2.8+c(0,1/8,2/8,3/8))
## and plot
plotR_F0_strains <- plot_model(modResStrainFULL, type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
scale_y_continuous("(predicted) maximum oocysts per mouse gram")+
ggtitle("Maximum oocysts density \n(mean and standard deviation)") +
xlab("Eimeria isolate") +
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.2,y=120000,label=getNs("peak.oocysts.per.g.mouse", summaryDF108mice)),vjust=0)
plotR_F0_strains
############
## Impact ##
############
## NB: summaryDF108mice$impact <- summaryDF108mice$relWL + 0.01
summaryDF108mice %>%
group_by(Mouse_subspecies, Eimeria_species) %>%
summarise(meanImp = mean(impact, na.rm = T))
modImpSubspFULL <- survreg(Surv(impact)~Eimeria_species*Mouse_subspecies, data = summaryDF108mice, dist="weibull")
modImpSubsp_Para <- survreg(Surv(impact)~Mouse_subspecies, data = summaryDF108mice, dist="weibull")
modImpSubsp_Mous <- survreg(Surv(impact)~Eimeria_species, data = summaryDF108mice, dist="weibull")
modImpSubsp_inter <- survreg(Surv(impact)~Eimeria_species+Mouse_subspecies, data = summaryDF108mice, dist="weibull")
myLRTsignificanceFactors(modImpSubspFULL, modImpSubsp_Para, modImpSubsp_Mous, modImpSubsp_inter)
## Translation of 1% because Weibull doesn't support nul data
coef(modImpSubspFULL)
coefImp <- exp(coef(modImpSubspFULL))
coefImp[1] - 0.01# Efer-MmD: 6.1%
coefImp[1] * coefImp[2] - 0.01 # Efal-MmD: 9.3%
coefImp[1] * coefImp[3] - 0.01# Efer-Mmm: 8.3%
coefImp[1] * coefImp[2] * coefImp[3] * coefImp[4] -0.01 # Efal-Mmm: 18.7%
### POST-HOC: all by all
modImpSubsp_multicomp <-  survreg(Surv(impact)~intFacSPECIES, data = summaryDF108mice, dist="weibull")
postHocImpSubsp <- summary(glht(modImpSubsp_multicomp, linfct=mcp(intFacSPECIES = "Tukey")))
postHocImpSubsp
myMatpostHoc_Imp_Subsp <- getMatrixPostHoc(postHocImpSubsp)
write.csv(myMatpostHoc_Imp_Subsp, "../figures/TableImp.csv")
## Part 2. imp
modImpStrainFULL <- survreg(Surv(impact)~infection_isolate*Mouse_genotype, data = summaryDF108mice, dist="weibull")
modImpStrain_Para <- survreg(Surv(impact)~Mouse_genotype, data = summaryDF108mice, dist="weibull")
modImpStrain_Mous <- survreg(Surv(impact)~infection_isolate, data = summaryDF108mice, dist="weibull")
modImpStrain_inter <- survreg(Surv(impact)~infection_isolate+Mouse_genotype, data = summaryDF108mice, dist="weibull")
myLRTsignificanceFactors(modImpStrainFULL, modImpStrain_Para, modImpStrain_Mous, modImpStrain_inter)
## post-hoc Tukey test
modImpStrainformulticomp <- survreg(Surv(impact)~intFacSTRAINS, data = summaryDF108mice, dist="weibull")
postHocImp <- summary(glht(modImpStrainformulticomp, linfct=mcp(intFacSTRAINS = "Tukey")))
myMatpostHocImpp_Strains <- getMatrixPostHoc(postHocImp)
myMatpostHocImpp_Strains
write.csv(myMatpostHocImp, "../figures/SupplTableImp.csv")
## NB. translate back 0.01
transValuesImp <- seq(0.01,0.26, 0.05)
as.character(transValuesImp - 0.01)
realValuesImpLabels <- c("0%", "5%", "10%", "15%", "20%", "25%")
plotI_F0_subsp <- plot_model(modImpSubspFULL, type = "int",dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue","red"),
name = "Mouse subspecies",labels = c("Mmd", "Mmm")) +
xlab("Eimeria species") +
ggtitle("Maximum weight loss \n(mean and standard deviation)") +
scale_y_continuous(breaks = transValuesImp, labels = realValuesImpLabels,
name = "(predicted) max weight loss compared to day of infection")+
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.1,y=0,label=getNs("relWL", summaryDF108mice,
"Mouse_subspecies", "Eimeria_species")),vjust=0)
plotI_F0_subsp
plotI_F0_strains <- plot_model(modImpStrainFULL, type = "int",dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
xlab("Eimeria isolate") +
ggtitle("Maximum weight loss \n(mean and standard deviation)") +
scale_y_continuous(breaks = transValuesImp, labels = realValuesImpLabels,
name = "(predicted) max weight loss compared to day of infection")+
theme(axis.title.x = element_text(hjust=1), axis.text=element_text(size=13)) +
geom_text(aes(x=posx.2,y=0,label=getNs("relWL", summaryDF108mice)),vjust=0)
plotI_F0_strains
###############
## Tolerance ##
###############
modTolSubspeciesFULL <- lm(ToleranceIndex ~ Eimeria_species*Mouse_subspecies, data = summaryDF108mice)
modTolSubspecies_Para <- lm(ToleranceIndex ~ Mouse_subspecies, data = summaryDF108mice)
modTolSubspecies_Mous <- lm(ToleranceIndex ~ Eimeria_species, data = summaryDF108mice)
modTolSubspecies_inter <- lm(ToleranceIndex ~ Eimeria_species+Mouse_subspecies, data = summaryDF108mice)
myLRTsignificanceFactors(modTolSubspeciesFULL, modTolSubspecies_Para, modTolSubspecies_Mous, modTolSubspecies_inter)
## posthoc
modTolSubspformulticomp <- lm(ToleranceIndex ~ intFacSPECIES, data = summaryDF108mice)
postHocTolSubsp <- summary(glht(modTolSubspformulticomp, linfct=mcp(intFacSPECIES = "Tukey")))
myMatpostHoc_Tol_Subsp<- getMatrixPostHoc(postHocTolSubsp)
write.csv(myMatpostHoc_Tol_Subsp, "../figures/TableTol.csv")
## part 2 strains level
modTolStrainFULL <- lm(ToleranceIndex ~ infection_isolate*Mouse_genotype, data = summaryDF108mice)
modTolStrain_Para <- lm(ToleranceIndex ~ Mouse_genotype, data = summaryDF108mice)
modTolStrain_Mous <- lm(ToleranceIndex ~ infection_isolate, data = summaryDF108mice)
modTolStrain_inter <- lm(ToleranceIndex ~ infection_isolate+Mouse_genotype, data = summaryDF108mice)
myLRTsignificanceFactors(modTolStrainFULL, modTolStrain_Para, modTolStrain_Mous, modTolStrain_inter)
## post-hoc Tukey test -> for lm should be the same results with TukeyHSD and glht: indeed :)
modTolStrainformulticomp <- lm(ToleranceIndex ~ intFacSTRAINS, data = summaryDF108mice)
postHocTolStrains <- summary(glht(modTolStrainformulticomp, linfct=mcp(intFacSTRAINS = "Tukey")))
myMatpostHocToStrainsl<- getMatrixPostHoc(postHocTolStrains)
write.csv(myMatpostHocToStrainsl, "../figures/supTableTol.csv")
plotT_F0_subsp <- plot_model(modTolSubspecies, type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "red"),
name = "Mouse subspecies",labels = c("Mmd", "Mmm")) +
xlab("Eimeria species") +
ggtitle("Tolerance index") +
scale_y_continuous("(predicted) tolerance index")+
theme(axis.title.x = element_text(hjust=1), axis.text = element_text(size=13))+
geom_text(aes(x=posx.1,y=0.4,label=getNs("ToleranceIndex", summaryDF108mice,
"Mouse_subspecies", "Eimeria_species")),vjust=0)
plotT_F0_subsp
plotT_F0_strain <- plot_model(modTolStrain, type = "int", dot.size = 4, dodge = .5) + # mean-value and +/- 1 standard deviation
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1"),
name = "Mouse strain",labels = c("SCHUNT", "STRA", "BUSNA", "PWD")) +
xlab("Eimeria isolate") +
ggtitle("Tolerance index") +
scale_y_continuous("(predicted) tolerance index")+
theme(axis.title.x = element_text(hjust=1), axis.text = element_text(size=13))+
geom_text(aes(x=posx.2,y=0.4,label=getNs("ToleranceIndex", summaryDF108mice)),vjust=0)
plotT_F0_strain
# Fig 3.
Fig3 <- plot_grid(plotR_F0_subsp + theme(legend.position = "none"),
plotI_F0_subsp + theme(legend.position = "none"),
plotT_F0_subsp+ theme(legend.position = "none"),
plotT_F0_subsp ,
labels=c("A", "B", "C", "D"), label_size = 20)
Fig3
pdf(file = "../figures/Fig3.pdf",
width = 9, height = 9)
Fig3
dev.off()
## Fig 4
Fig4 <- plot_grid(plotR_F0_strains + theme(legend.position = "none"),
plotI_F0_strains + theme(legend.position = "none"),
plotT_F0_strain + theme(legend.position = "none"),
plotT_F0_strain,
labels=c("A", "B", "C", "D"), label_size = 20)
Fig4
pdf(file = "../figures/Fig4.pdf",
width = 9, height = 9)
Fig4
dev.off()
# Pretty table outputs
# library(stargazer)
# stargazer(modResSubsp, modImpSubsp, modTolSubspecies)#,  type = "html")
# stargazer(modResStrain, modImpStrain, modTolStrain,  type = "html")
### Second part: correlation resistance / tolerance
# Calculate mean per group
# Packages we need
library(ggplot2)
library(dplyr)
# Create a group-means data set
gd <- summaryDF108mice %>%
group_by(Mouse_genotype, infection_isolate) %>%
summarise(
ResistanceIndexMean = mean(ResistanceIndex, na.rm = T),
ResistanceIndexSd = sd(ResistanceIndex, na.rm = T),
Impact = mean(impact, na.rm=T),
ToleranceIndexMean = mean(ToleranceIndex, na.rm = T),
ToleranceIndexSd = sd(ToleranceIndex, na.rm = T)
)
gd
# define the 8 groups
summaryDF108mice$group <- paste(summaryDF108mice$Mouse_genotype, summaryDF108mice$infection_isolate, sep = "_")
# Plot both data sets
restolplot <- ggplot(summaryDF108mice, aes(x = ResistanceIndex, y = ToleranceIndex)) +
geom_smooth(method = "lm", col = "black", alpha = .2, aes(linetype = Eimeria_species)) +
geom_point(alpha = .4, aes(col = Mouse_genotype, fill = Mouse_genotype, shape = infection_isolate), size = 4) +
geom_point(data = gd, aes(x = ResistanceIndexMean, y = ToleranceIndexMean,
fill = Mouse_genotype, shape = infection_isolate), size = 10) +
theme_bw()+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1")) +
scale_fill_manual(values = c("blue", "cornflowerblue", "red4", "indianred1")) +
scale_shape_manual(values = c(24,22,21)) +
ylab(label = "Tolerance index") +
scale_x_continuous(name = "Resistance index")
restolplot
pdf("../figures/Fig5.pdf", width = 12, height = 9)
restolplot
dev.off()
# https://stats.idre.ucla.edu/r/seminars/interactions-r/
# Test the difference between slopes:
modResTol <- lm(formula = ToleranceIndex ~ ResistanceIndex * Eimeria_species, data = summaryDF108mice)
summary(modResTol)
#p-value of the t-statistic for the interaction between ResistanceIndex and Eimeria_species: 1.39e-05 ***
# ResistanceIndex:Eimeria_speciesE.falciformis -1.17999    0.25744  -4.584 1.39e-05 ***
# The interaction ResistanceIndex * Eimeria_species is significant, which suggests
# that the relationship of ToleranceIndex by ResistanceIndex does vary by Eimeria spieces
# Since our goal is to obtain simple slopes of parasite:
library(lsmeans)
emtrends(modResTol, ~ Eimeria_species, var="ResistanceIndex")
# The 95% confidence interval does not contain zero for females but contains zero for males, so the simple slope is significant for females but not for males.
# plot with sd
ggplot(summaryDF108mice, aes(x = ResistanceIndex, y = ToleranceIndex)) +
geom_smooth(method = "lm", col = "black", alpha = .2, aes(linetype = Eimeria_species)) +
geom_point(alpha = .4, aes(col = Mouse_genotype, fill = Mouse_genotype, shape = infection_isolate), size = 4) +
geom_point(data = gd, aes(x = ResistanceIndexMean, y = ToleranceIndexMean,
fill = Mouse_genotype, shape = infection_isolate), size = 10) +
geom_errorbar(data = gd, aes(x = ResistanceIndexMean, y = ToleranceIndexMean, col = Mouse_genotype,
ymin = ToleranceIndexMean - ToleranceIndexSd,
ymax = ToleranceIndexMean + ToleranceIndexSd)) +
geom_errorbarh(data = gd, aes(x = ResistanceIndexMean, y = ToleranceIndexMean, col = Mouse_genotype,
xmin = ResistanceIndexMean - ResistanceIndexSd,
xmax = ResistanceIndexMean + ResistanceIndexSd)) +
theme_bw()+
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1")) +
scale_fill_manual(values = c("blue", "cornflowerblue", "red4", "indianred1")) +
scale_shape_manual(values = c(24,22,21)) +
ylab(label = "Tolerance index") +
scale_x_continuous(name = "Resistance index")
##########
# Some toy
rawDF108mice$oocysts.per.g.mouse <- rawDF108mice$oocysts.per.tube / rawDF108mice$weight
ggplot(rawDF108mice, aes(x = oocysts.per.g.mouse, y =relativeWeight,
color = Mouse_genotype, shape = infection_isolate, fill = infection_isolate)) +
geom_smooth(method = "lm")+
# geom_point() +
# scale_x_log10()+
theme_bw()+
scale_fill_manual(values = c(1,2,3)) +
scale_color_manual(values = c("blue", "cornflowerblue", "red4", "indianred1")) +
scale_shape_manual(values = c(15,16,10))
# Bonus: Disease trajectory?
# NB quite a bunch of animals died before end
infDF <- rawDF108mice %>%
dplyr::group_by(Mouse_genotype, infection_isolate, dpi)%>%
dplyr::summarise(meanOO = mean(oocysts.per.tube, na.rm = T),
meanWR = mean(weightRelativeToInfection, na.rm = T)) %>%
as.data.frame()
infDF$group <- paste(infDF$Mouse_genotype, infDF$infection_isolate, sep = "_")
ggplot(infDF, aes(x = meanOO , y =meanWR, col = as.factor(dpi), group = group)) +
geom_point() +
geom_path() +
facet_grid(infection_isolate~Mouse_genotype) +
scale_x_log10() +
geom_hline(yintercept = 100) +
geom_label(aes(label = dpi))
