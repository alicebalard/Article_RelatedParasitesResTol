scale_color_manual(values = mycolors) +
scale_shape_manual(values = myshapes) +
annotate("text", x = posx1, y = posy1, label = testcor1)+
theme(legend.position = "none")+ theme(text = element_text(size=15))
P2 <- ggplot(finalplotDF, aes(x = predicted_OPG, y = -predicted_Tol)) +
geom_smooth(method = "lm", se = F, col = "black") +
geom_errorbar(aes(ymin = -conf.low_Tol, ymax = -conf.high_Tol), color = "grey") +
geom_errorbarh(aes(xmin = conf.low_OPG, xmax = conf.high_OPG), color = "grey") +
geom_point(aes(col = Genotype), size = 7, pch = 22, fill = "white")+
scale_x_continuous("Maximum million OPG \n (inverse of) RESISTANCE ",
breaks = seq(0.5,5,0.5)*1e6,
labels = seq(0.5,5,0.5))+
scale_y_continuous(name = "TOLERANCE (inverse of) slope of\n maximum weight loss on maximum OPG ")+
geom_text(aes(label=substring(Genotype, 1, 1), col = Genotype))+
scale_color_manual(values = mycolors) +
scale_shape_manual(values = myshapes) +
annotate("text", x = posx2, y = posy2, label = testcor2)+
theme(legend.position = "none")+ theme(text = element_text(size=15))
return(list(P1, P2))
}
# to apply on our 2 DF (one more conservative):
MyListDF <- list(full = art2SummaryDF, cons = art2SummaryDF_conservative)
listPar <- list("Brandenburg139 (E. ferrisi)","Brandenburg64 (E. ferrisi)", "Brandenburg88 (E. falciformis)")
names(listPar) <- c("Brandenburg139", "Brandenburg64", "Brandenburg88")
############### 1. E. ferrisi64 and E.fal88: res, impact, tolerance
MyListDF_64 <- MyListDF
MyListDF_64$full <- dropLevelsAllFactorsDF(MyListDF_64$full[grepl("64", MyListDF_64$full$infection_isolate),])
MyListDF_64$cons <- dropLevelsAllFactorsDF(MyListDF_64$cons[grepl("64", MyListDF_64$cons$infection_isolate),])
MyListDF_88 <- MyListDF
MyListDF_88$full <- dropLevelsAllFactorsDF(MyListDF_88$full[grepl("88", MyListDF_88$full$infection_isolate),])
MyListDF_88$cons <- dropLevelsAllFactorsDF(MyListDF_88$cons[grepl("88", MyListDF_88$cons$infection_isolate),])
MyListDF_64_88 <- MyListDF
MyListDF_64_88$full <- rbind(MyListDF_64$full, MyListDF_88$full)
MyListDF_64_88$cons <- rbind(MyListDF_64$cons, MyListDF_88$cons)
## test factor significance
# RES
# nbin or zeroinfl
mod1 <- glm.nb(max.OPG ~ infection_isolate*Genotype, data = MyListDF_64_88$full)
mod2 <- zeroinfl(max.OPG ~ infection_isolate*Genotype, data = MyListDF_64_88$full, dist = "negbin")
summary(mod1)
summary(mod2)
AIC(mod1)
AIC(mod2)
mod1$twologlik/2
mod2$loglik
# RES
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "RES")$LRT})# similar
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "RES_ZI")$LRT})
# IMP
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "IMP")$LRT})
## multiple comparison for impact on weight
MyListDF_64_88$full$MoPa <- as.factor(paste(MyListDF_64_88$full$Genotype, MyListDF_64_88$full$infection_isolate))
mimp <- lm(relWL~MoPa, data = MyListDF_64_88$full)
ANOVA <- aov(mimp)
# Tukey test to study each pair of treatment :
TUKEY <- TukeyHSD(x=ANOVA, 'MoPa', conf.level=0.95)
# Extract only significant differences:
tukeyDF <- data.frame(TUKEY$MoPa)
tukeyDF[tukeyDF$p.adj<0.05,]
# TOL
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "TOL")$LRT})
# RES
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "RES")$LRT})# similar
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "RES_ZI")$LRT})
# IMP
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "IMP")$LRT})
# TOL
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "TOL")$LRT})
TukeyHSD
?TukeyHSD
############### Local adaptation of pure strains for E. ferrisi
MyListDF_locad <- MyListDF
############### Local adaptation of pure strains for E. ferrisi
MyListDF_locad <- MyListDF
MyListDF_locad$full$infection_isolate <- relevel(MyListDF_locad$full$infection_isolate, "Brandenburg64 (E. ferrisi)")
MyListDF_locad$full <- MyListDF_locad$full[!grepl("-", MyListDF_locad$full$Mouse_genotype),]
MyListDF_locad$full <- dropLevelsAllFactorsDF(
MyListDF_locad$full[grep("ferrisi", MyListDF_locad$full$infection_isolate),])
MyListDF_locad$cons$infection_isolate <- relevel(MyListDF_locad$cons$infection_isolate, "Brandenburg64 (E. ferrisi)")
MyListDF_locad$cons <- MyListDF_locad$cons[!grepl("-", MyListDF_locad$cons$Mouse_genotype),]
MyListDF_locad <- MyListDF
MyListDF_locad$full$infection_isolate <- relevel(MyListDF_locad$full$infection_isolate, "Brandenburg64 (E. ferrisi)")
MyListDF_locad$full <- MyListDF_locad$full[!grepl("-", MyListDF_locad$full$Mouse_genotype),]
MyListDF_locad$full <- dropLevelsAllFactorsDF(
MyListDF_locad$full[grep("ferrisi", MyListDF_locad$full$infection_isolate),])
MyListDF_locad$cons$infection_isolate <- relevel(MyListDF_locad$cons$infection_isolate, "Brandenburg64 (E. ferrisi)")
MyListDF_locad$cons <- MyListDF_locad$cons[!grepl("-", MyListDF_locad$cons$Mouse_genotype),]
MyListDF_locad$cons <- dropLevelsAllFactorsDF(
MyListDF_locad$cons[grep("ferrisi", MyListDF_locad$cons$infection_isolate),])
## Matching vs unmatching
MyListDF_locad$full
## Matching vs unmatching
MyListDF_locad$full$Mouse_subspecies
MyListDF_locad$full$infection_isolate
## Matching vs unmatching
MyListDF_locad$full$combi <- "unmatching"
MyListDF_locad$full$Mouse_subspecies
MyListDF_locad$full$Mouse_subspecies %in% "M.m.dom"
MyListDF_locad$full$infection_isolate %in% "Brandenburg64 (E. ferrisi)"
MyListDF_locad$full$Mouse_subspecies %in% "M.m.dom" & MyListDF_locad$full$infection_isolate %in% "Brandenburg64 (E. ferrisi)"
MyListDF_locad$full[MyListDF_locad$full$Mouse_subspecies %in% "M.m.dom" & MyListDF_locad$full$infection_isolate %in% "Brandenburg64 (E. ferrisi)",]
MyListDF_locad$full[(MyListDF_locad$full$Mouse_subspecies %in% "M.m.dom" & MyListDF_locad$full$infection_isolate %in% "Brandenburg64 (E. ferrisi)")|
(MyListDF_locad$full$Mouse_subspecies %in% "M.m.mus" & MyListDF_locad$full$infection_isolate %in% "Brandenburg139 (E. ferrisi)"),]
MyListDF_locad$full$combi[(MyListDF_locad$full$Mouse_subspecies %in% "M.m.dom" & MyListDF_locad$full$infection_isolate %in% "Brandenburg64 (E. ferrisi)")|
(MyListDF_locad$full$Mouse_subspecies %in% "M.m.mus" & MyListDF_locad$full$infection_isolate %in% "Brandenburg139 (E. ferrisi)")]
MyListDF_locad$full$combi[(MyListDF_locad$full$Mouse_subspecies %in% "M.m.dom" & MyListDF_locad$full$infection_isolate %in% "Brandenburg64 (E. ferrisi)")|
(MyListDF_locad$full$Mouse_subspecies %in% "M.m.mus" & MyListDF_locad$full$infection_isolate %in% "Brandenburg139 (E. ferrisi)")] <- "matching"
MyListDF_locad$full
MyListDF_locad$cons$combi <- "unmatching"
MyListDF_locad$cons$combi[(MyListDF_locad$cons$Mouse_subspecies %in% "M.m.dom" & MyListDF_locad$cons$infection_isolate %in% "Brandenburg64 (E. ferrisi)")|
(MyListDF_locad$cons$Mouse_subspecies %in% "M.m.mus" & MyListDF_locad$cons$infection_isolate %in% "Brandenburg139 (E. ferrisi)")] <- "matching"
MyListDF_locad$full$max.OPG
MyListDF_locad$full$combi
plot(MyListDF_locad$full$max.OPG ~ MyListDF_locad$full$combi)
MyListDF_locad$full$max.OPG
MyListDF_locad$full$combi <- factor(MyListDF_locad$full$combi)
MyListDF_locad$cons$combi <- factor(MyListDF_locad$cons$combi)
### Res
plot(MyListDF_locad$full$max.OPG ~ MyListDF_locad$full$combi)
### Res
ggplot(MyListDF_locad$full, aes(x = max.OPG, y = combi, col = Mouse_genotype)) +
geom_jitter()
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi, col = Mouse_genotype)) +
geom_jitter()
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi, col = Mouse_subspecies)) +
geom_jitter()
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi, col = Mouse_subspecies)) +
geom_jitter() +
geom_violin()
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_jitter() +
geom_violin()
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_violin() +
geom_jitter()
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_violin() +
geom_boxplot() +
geom_jitter()
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter()
zeroinfl(max.OPG ~ combi, data = MyListDF_locad$full, dist = "negbin")
zeroinfl(max.OPG ~ combi, data = MyListDF_locad$full, dist = "negbin")
MyListDF_locad$full
# no zero, so we use "classic" negbin:
glm.nb(max.OPG ~ combi, data = MyListDF_locad$full)
# no zero, so we use "classic" negbin:
summary(glm.nb(max.OPG ~ combi, data = MyListDF_locad$full))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi, col = Mouse_genotype)) +
geom_boxplot() +
geom_jitter()
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot(aes(col = Mouse_genotype)) +
geom_jitter()
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot(aes(fill = Mouse_genotype)) +
geom_jitter()
# no zero, so we use "classic" negbin:
anova(glm.nb(max.OPG ~ combi, data = MyListDF_locad$full))
# no zero, so we use "classic" negbin:
summary(glm.nb(max.OPG ~ combi, data = MyListDF_locad$full))
table(MyListDF_locad$full$combi)
table(MyListDF_locad$full$combi, MyListDF_locad$full$Mouse_subspecies)
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot(aes(fill = Mouse_genotype)) +
geom_jitter(aes(shape = infection_isolate))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot(aes(fill = Mouse_genotype)) +
geom_jitter(aes(shape = infection_isolate)) +
scale_shape_manual(values = c(1,16))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot(aes(fill = Mouse_genotype)) +
geom_jitter(aes(shape = infection_isolate)) +
scale_shape_manual(values = c(21,16))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot(aes(fill = Mouse_genotype)) +
geom_point(aes(shape = infection_isolate)) +
scale_shape_manual(values = c(21,16))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = Mouse_genotype)) +
geom_boxplot(aes(fill = Mouse_genotype)) +
geom_point(aes(shape = infection_isolate)) +
scale_shape_manual(values = c(21,16))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot(aes(fill = Mouse_genotype)) +
geom_point(aes(shape = infection_isolate)) +
scale_shape_manual(values = c(21,16))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot(aes(fill = Mouse_genotype)) +
geom_point(aes(shape = infection_isolate)) +
scale_shape_manual(values = c(21,16)) +
facet_grid(.~combi)
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot(aes(fill = Mouse_genotype)) +
geom_point(aes(shape = infection_isolate)) +
scale_shape_manual(values = c(21,16))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot(aes(fill = Genotype)) +
geom_point(aes(shape = infection_isolate)) +
scale_shape_manual(values = c(21,16))
# no zero, so we use "classic" negbin:
summary(glm.nb(max.OPG ~ combi, data = MyListDF_locad$full))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_point(aes(col= Genotype, shape = infection_isolate)) +
scale_shape_manual(values = c(21,16))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate)) +
scale_shape_manual(values = c(21,16))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16))
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
facet_grid(.~ExpID)
### Res
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
facet_grid(.~Exp_ID)
summary(glm.nb(max.OPG ~ combi, data = MyListDF_locad$cons))
ggplot(MyListDF_locad$cons, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
facet_grid(.~Exp_ID)
glmer.nb(max.OPG ~ combi + 1|Exp_ID, data = MyListDF_locad$full)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16))
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "blue", "red", "red"))
summary(glm.nb(max.OPG ~ combi, data = MyListDF_locad$cons))
### Res
# no zero, so we use "classic" negbin:
modResLA <- glm.nb(max.OPG ~ combi, data = MyListDF_locad$full)
summary(modResLA)
ggpredict(modResLA)
ggplot(modResLA)
ggplot(modResLA)
plot_model(modResLA)
plot_model(modResLA, type = "est")
plot_model(modResLA, type = "pred")
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "blue", "red", "red"))
plot_model(modResLA, type = "pred") +
geom_jitter()
plot_model(modResLA, type = "pred") +
geom_jitter()
plot_model(modResLA, type = "pred") +
geom_jitter()
plot_model(modResLA, type = "pred")
plot_model(modResLA, type = "pred", show.data = TRUE)
plot_model(modResLA, type = "pred", colors = c(1,2), show.data = TRUE)
plot_model(modResLA, type = "pred", colors = "green", show.data = TRUE)
plot_model(modResLA, type = "pred", show.data = TRUE)
ggplot(ggpredict(modResLA, type = "pred", show.data = TRUE))
ggplot(ggpredict(modResLA))
plot(ggpredict(modResLA))
plot_model(modResLA, type = "pred", show.data = TRUE)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "blue", "red", "red"))
### Tol
modTolLA <- lm(relWL ~ 0 + max.OPG : combi, data = MyListDF_locad$full)
summary(modTolLA)
plot_model(modTolLA, type = "pred", show.data = TRUE)
anova(modTolLA)
plot_model(modTolLA, type = "pred", terms = "combi",show.data = TRUE)
plot_model(modResLA, type = "pred", show.data = TRUE)
### Res
# no zero, so we use "classic" negbin:
modResLA <- glm.nb(max.OPG ~ combi, data = MyListDF_locad$full)
summary(modResLA)
plot_model(modResLA, type = "pred", show.data = TRUE)
plot_model(modResLA, type = "pred")#, show.data = TRUE)
plot_model(modTolLA, type = "pred", terms = "combi", show.data = TRUE)
anova(modTolLA)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "blue", "red", "red")) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "blue2", "red", "red2")) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "violet", "red", "red2")) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "violet", "red", "pink")) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "purple", "red", "pink")) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "lightblue", "red", "pink")) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "lightblue", "red", "lightred")) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "lightblue", "red", "red4")) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "blue3", "red", "red4")) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "blue3", "red", "red4")) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "blue4", "red", "red4")) +
facet_grid(.~Exp_ID)
anova(modTolLA)
ggplot(MyListDF_locad$full, aes(x=max.OPG, y=relWL, col = combi)) +
geom_smooth(method = "lm")
ggplot(MyListDF_locad$full, aes(x=max.OPG, y=relWL, col = combi)) +
geom_smooth(method = "lm") +
geom_point()
ggplot(MyListDF_locad$full, aes(x=max.OPG, y=relWL, col = combi)) +
geom_smooth(method = "lm", formula=y~x-1) +
geom_point()
##### 2.1. within E64
# RES
lapply(MyListDF_64, function(xlist){testSignifWithinParas(xlist, "RES")$LRT})
############### Local adaptation of pure strains for E. ferrisi
MyListDF_locad <- MyListDF
MyListDF_locad$full$infection_isolate <- relevel(MyListDF_locad$full$infection_isolate, "Brandenburg64 (E. ferrisi)")
MyListDF_locad$full <- MyListDF_locad$full[!grepl("-", MyListDF_locad$full$Mouse_genotype),]
MyListDF_locad$full <- dropLevelsAllFactorsDF(
MyListDF_locad$full[grep("ferrisi", MyListDF_locad$full$infection_isolate),])
MyListDF_locad$cons$infection_isolate <- relevel(MyListDF_locad$cons$infection_isolate, "Brandenburg64 (E. ferrisi)")
MyListDF_locad$cons <- MyListDF_locad$cons[!grepl("-", MyListDF_locad$cons$Mouse_genotype),]
MyListDF_locad$cons <- dropLevelsAllFactorsDF(
MyListDF_locad$cons[grep("ferrisi", MyListDF_locad$cons$infection_isolate),])
## Matching vs unmatching
MyListDF_locad$full$combi <- "unmatching"
MyListDF_locad$full$combi[(MyListDF_locad$full$Mouse_subspecies %in% "M.m.dom" & MyListDF_locad$full$infection_isolate %in% "Brandenburg64 (E. ferrisi)")|
(MyListDF_locad$full$Mouse_subspecies %in% "M.m.mus" & MyListDF_locad$full$infection_isolate %in% "Brandenburg139 (E. ferrisi)")] <- "matching"
MyListDF_locad$full$combi <- factor(MyListDF_locad$full$combi)
MyListDF_locad$cons$combi <- "unmatching"
MyListDF_locad$cons$combi[(MyListDF_locad$cons$Mouse_subspecies %in% "M.m.dom" & MyListDF_locad$cons$infection_isolate %in% "Brandenburg64 (E. ferrisi)")|
(MyListDF_locad$cons$Mouse_subspecies %in% "M.m.mus" & MyListDF_locad$cons$infection_isolate %in% "Brandenburg139 (E. ferrisi)")] <- "matching"
MyListDF_locad$cons$combi <- factor(MyListDF_locad$cons$combi)
### Res
# no zero, so we use "classic" negbin:
modResLA <- glm.nb(max.OPG ~ combi, data = MyListDF_locad$full)
summary(modResLA)
plot_model(modResLA, type = "pred")#, show.data = TRUE)
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "blue4", "red", "red4")) +
facet_grid(.~Exp_ID)
summary(glm.nb(max.OPG ~ combi, data = MyListDF_locad$cons))
summary(glm.nb(max.OPG ~ combi, data = MyListDF_locad$cons))
plot_model(glm.nb(max.OPG ~ combi, data = MyListDF_locad$cons), type = "pred")
ggplot(MyListDF_locad$full, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "blue4", "red", "red4")) +
facet_grid(.~Exp_ID)
ggplot(MyListDF_locad$cons, aes(y = max.OPG, x = combi)) +
geom_boxplot() +
geom_jitter(aes(col= Genotype, shape = infection_isolate), size = 4) +
scale_shape_manual(values = c(21,16)) +
scale_color_manual(values = c("blue", "blue4", "red", "red4")) +
facet_grid(.~Exp_ID)
# RES
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "RES")$LRT})# similar
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "RES_ZI")$LRT})
# IMP
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "IMP")$LRT})
## multiple comparison for impact on weight
MyListDF_64_88$full$MoPa <- as.factor(paste(MyListDF_64_88$full$Genotype, MyListDF_64_88$full$infection_isolate))
mimp <- lm(relWL~MoPa, data = MyListDF_64_88$full)
ANOVA <- aov(mimp)
# Tukey test to study each pair of treatment :
TUKEY <- TukeyHSD(x=ANOVA, 'MoPa', conf.level=0.95)
# Extract only significant differences:
tukeyDF <- data.frame(TUKEY$MoPa)
tukeyDF[tukeyDF$p.adj<0.05,]
# TOL
lapply(MyListDF_64_88, function(xlist){testSignif(xlist, "TOL")$LRT})
##### 2.1. within E64
# RES
lapply(MyListDF_64, function(xlist){testSignifWithinParas(xlist, "RES")$LRT})
# IMP
lapply(MyListDF_64, function(xlist){testSignifWithinParas(xlist, "IMP")$LRT})
# TOL
lapply(MyListDF_64, function(xlist){testSignifWithinParas(xlist, "TOL")$LRT})
##### 2.2. within E88
# RES
lapply(MyListDF_88, function(xlist){testSignifWithinParas(xlist, "RES_ZI")$LRT})
# IMP
lapply(MyListDF_88, function(xlist){testSignifWithinParas(xlist, "IMP")$LRT})
# TOL
lapply(MyListDF_88, function(xlist){testSignifWithinParas(xlist, "TOL")$LRT})
##### 2.3. plot within E64 (figure 4)
## Plot Figure 4:
listPlotRes_64 <- lapply(MyListDF_64, function(x){get_plot_par(x, npara = 1,  plottype = "RES", cols = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
pointshape = c(15,16,17,15,16,15,16, 17))})
listPlotImp_64 <-lapply(MyListDF_64, function(x){get_plot_par(x, npara = 1,  plottype = "IMP", cols = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
pointshape = c(15,16,17,15,16,15,16, 17))})
listPlotTol_64 <- lapply(MyListDF_64, function(x){get_plot_par(x, npara = 1,  plottype = "TOL", cols = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
pointshape = c(15,16,17,15,16,15,16, 17),
linetype = c(1,2,3,1,2,1,2,3),)})
listBigPlot_64 <- lapply(MyListDF_64, function(x){
getCouplingPlot(x, posx1 = 1.5e6, posy1 = 0.01, posx2 = 1.5e6, posy2 = -0.09, mycolors = c("blue", "blue", "blue", "purple", "purple", "red", "red","red", "red"),
myshapes = c(15,16,17,15,16,15,16, 17))
})
make5panelsPlot <- function(res, imp, tol, bp1, bp2){
p1 <- plot_grid(res + theme(legend.position = "none"),
imp + theme(legend.position = "none"), labels = c('A', 'B'), label_size = 20)
p2 <- plot_grid(p1, tol, labels = c("", "C"), label_size = 20,
ncol =1, align = "v", rel_widths = c(1.5, .5))
p3 <- plot_grid(bp1, bp2, ncol =1, align = "v", labels = c("D", "E"), label_size = 20)
return(plot_grid(p2,p3,rel_widths = c(1, 1)))
}
Fig4 <- make5panelsPlot(res = listPlotRes_64$full, imp = listPlotImp_64$full, tol = listPlotTol_64$full,
bp1 = listBigPlot_64$full[[1]], bp2 = listBigPlot_64$full[[2]])
Fig4
make5panelsPlot <- function(res, imp, tol, bp1, bp2){
p1 <- plot_grid(res + theme(legend.position = "none"), labels = c('A'), label_size = 20)
p2 <- plot_grid(p1, tol, labels = c("", "C"), label_size = 20,
ncol =1, align = "v", rel_widths = c(1.5, .5))
p3 <- plot_grid(bp1, bp2, ncol =1, align = "v", labels = c("D", "E"), label_size = 20)
return(plot_grid(p2,p3,rel_widths = c(1, 1)))
}
Fig4 <- make5panelsPlot(res = listPlotRes_64$full, imp = listPlotImp_64$full, tol = listPlotTol_64$full,
bp1 = listBigPlot_64$full[[1]], bp2 = listBigPlot_64$full[[2]])
Fig4
