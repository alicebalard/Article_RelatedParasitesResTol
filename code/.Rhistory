"Brandenburg88 (E. falciformis)", "EfLab (E.falciformis)"))
# Put E.ferrisi first (prettier for plots)
DF_all$Eimeria_species <- relevel(as.factor(DF_all$Eimeria_species), "E.ferrisi")
# drop unused levels
DF_all <- data.frame(lapply(DF_all, function(x) if (is.factor(x)) droplevels(x) else x))
# add hybrid index for inbred strains, based on genotype
DF_all$HI <- 0
DF_all$HI[grep("MMm", DF_all$Mouse_genotype)] <- 1
DF_all$HI[grep("Mmm-Mmd", DF_all$Mouse_genotype)] <- 0.5
# Calculate OPG
DF_all <- calculateOPG(DF_all)
# Calculate relative weight loss in individuals
DF_all <- calculateWeightLoss(DF_all)
# Summarize all
ALL_summary <- makeSummaryTable(DF_all[DF_all$dpi %in% 4:11,])
##############################
#### PB1. dead before end ####
##############################
###### what is the overall peak day for each parasite isolate? ######
aggregate(ALL_summary$dpi_max.OPG,
list(ALL_summary$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
aggregate(ALL_summary$dpi_minWeight,
list(ALL_summary$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
# Which animals died before median peak day?
notCompleteFal <- unique(DF_all[is.na(DF_all$weight) &  DF_all$dpi %in% 9 &
DF_all$Eimeria_species %in% "E.falciformis" ,"EH_ID"])
notCompleteFer <- unique(DF_all[is.na(DF_all$weight) &  DF_all$dpi %in% 5 &
DF_all$Eimeria_species %in% "E.ferrisi" ,"EH_ID"])
notComplete <- c(as.character(notCompleteFal), as.character(notCompleteFer))
# mice died before the end (E88)
notComplete
ALL_summary[ALL_summary$EH_ID %in% notComplete,]
d <- DF_all[DF_all$EH_ID %in% notComplete,]
ggplot(d, aes(dpi, weight, group=EH_ID, col = Eimeria_species)) +
geom_point() + geom_line() + facet_grid(.~Exp_ID)
ggplot(d, aes(dpi, oocysts.per.tube, group=EH_ID, col = Eimeria_species)) +
geom_point() + geom_line() + facet_grid(.~Exp_ID)
table(ALL_summary[ALL_summary$EH_ID %in% notComplete, "Mouse_genotype"])
# MMm_F1 (Bu-Pw)     MMm_F0 (Bu-Bu)     MMm_F0 (Pw-Pw)
# 2                  3                  3
############################################
#### PB2. no oocysts at median peak day ####
############################################
# All problematic animals: no shedding at all, no oocysts at median OO peak
# How many mice did not shed at all?
noOO <- ALL_summary[ALL_summary$sumoocysts.per.tube == 0,"EH_ID"]
DF_all[DF_all$EH_ID %in% noOO & DF_all$dpi >7,c("EH_ID", "dpi", "weight", "oocysts.per.tube", "Eimeria", "Mouse_strain")] %>%
dplyr::arrange(EH_ID, dpi)
# 5 mice didn't show Oo but they died before the end of the experiment: NA for oo
# 187,230,244,250,253. 244 died after peak WL
# which mice did not have oocysts collected on peak day?
m1 <- as.character(DF_all[DF_all$Eimeria_species %in% "E.falciformis" &
(DF_all$oocysts.per.tube %in% 0 |is.na(DF_all$oocysts.per.tube)) &
DF_all$dpi == 8, "EH_ID"])
m2 <- as.character(DF_all[DF_all$Eimeria_species %in% "E.ferrisi" &
(DF_all$oocysts.per.tube %in% 0 | is.na(DF_all$oocysts.per.tube)) &
DF_all$dpi == 6, "EH_ID"])
ALL_summary[ALL_summary$EH_ID %in% c(m1, m2), c("Mouse_genotype", "infection_isolate")] %>%
arrange(Mouse_genotype) %>%
dplyr::group_by(Mouse_genotype,infection_isolate) %>%
dplyr::summarize(sum=n())
# 10 animals didn't have collection of oocysts at peak day (4 Bu-Bu E88 + 1 Pw-Pw E88) -> set to NA
ALL_summary$max.OPG[ALL_summary$EH_ID %in% c(m1,m2)] <- NA
###############################################
#### Finalize datasets for article 2 Alice ####
###############################################
ALL_summary_F0 <- ALL_summary[grep("F0", ALL_summary$Mouse_genotype),]
ALL_summary_F1 <- ALL_summary[grep("F1", ALL_summary$Mouse_genotype),]
# Coinfection to adress somehow. Try at the end with / without second batch
conta <- DF_all[DF_all$dpi %in% 0 & !DF_all$oocysts.per.tube %in% 0 & !is.na(DF_all$oocysts.per.tube), ]
table(conta$infection_isolate)
# full data used for Article 2
art2al_RAWdf <- dropLevelsAllFactorsDF(DF_all[grep("F0", DF_all$Mouse_genotype),])
art2al_SUMdf <- dropLevelsAllFactorsDF(ALL_summary_F0)
length(na.omit(art2al_SUMdf$relWL))# 108 F0 mice
length(na.omit(art2al_SUMdf$max.OPG))# 99 F0 mice
## Set infection group (group 1 had anthelminthics, did not kill worms, stopped after: test effect)
art2al_SUMdf$batch <- art2al_SUMdf$Exp_ID
levels(art2al_SUMdf$batch) <- c("B1", "B2", "B3", "B4", "B5", "B6")
art2al_SUMdf$anth<- FALSE
art2al_SUMdf$anth[art2al_SUMdf$batch %in% "B1"] <- TRUE
### The end ###
# Summarize all
ALL_summary <- makeSummaryTable(DF_all[DF_all$dpi %in% 4:11,])
ALL_summary2 <- makeSummaryTable(DF_all)
# Summarize all
ALL_summary <- makeSummaryTable(DF_all[DF_all$dpi %in% 4:11,])
### data preparation
ExpeDF_003_4 <- readRDS(file = "../data/ExpeDF_003_4_Alice.rds")
ExpeDF_005 <- readRDS(file = "../data/ExpeDF_005_Alice.rds")
forMap <- read.csv("../data/geolocalisation.csv")
source("myFunctions.R")
# Define a theme
theme_set(theme_bw())
## Packages
list.of.packages <- c("parasiteLoad", "bbmle", "devtools", "optimx", # for bbmle it needs to be required(?)
"ggplot2", "VennDiagram","fitdistrplus", # evaluate distribution
"epiR", # Sterne's exact method
"ggmap", "gridExtra",# several plots in one panel
"wesanderson", # nice colors
"ggpubr", "tidyr", "stats", "ggrepel",
"lme4", "lmerTest", "reshape",
"ggeffects", "sjmisc", "sjPlot")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(list.of.packages)
## Reinstall the package in case I updated it
# devtools::install_github("alicebalard/parasiteLoad")
# library(parasiteLoad)
# devtools::install_github("vqv/ggbiplot")
# library(ggbiplot)
###### data cleaning ######
DF_all<- merge(ExpeDF_003_4, ExpeDF_005, all = T)
# NB. Let's not consider which parent is which, but make A_B mouse = B_A mouse
# we don't have enough individuals to test this effect, and we are not interested in it anyway!
DF_all$Mouse_strain <- as.character(DF_all$Mouse_strain)
x <- strsplit(DF_all$Mouse_strain, "_")
y <- lapply(x, sort)
z <- unlist(lapply(y, FUN = function(x){paste(x, collapse="-")}))
DF_all$Mouse_genotype <- z
rm(x, y, z)
## Order the levels to be more clear in later plots (parents will be low and down
## on the legend, hybrids in between...)
DF_all$Mouse_genotype <- factor(
DF_all$Mouse_genotype,
levels = c("NMRI", "WSB", "WP", "PWD1", "SCHUNT-SCHUNT",
"STRA-STRA", "SCHUNT-STRA", "BUSNA-STRA","PWD-SCHUNT",
"BUSNA-PWD", "BUSNA-BUSNA", "PWD-PWD"),
labels = c("NMRI", "MMd_F0 (Ws-Ws)", "Mmm-Mmd_Hybrid (WP)", "MMm_F0 (Pw1-Pw1)", "MMd_F0 (Sc-Sc)",
"MMd_F0 (St-St)", "MMd_F1 (Sc-St)", "Mmm-Mmd_F1 (Bu-St)", "Mmm-Mmd_F1 (Pw-Sc)",
"MMm_F1 (Bu-Pw)", "MMm_F0 (Bu-Bu)", "MMm_F0 (Pw-Pw)"))
# add subspecies information based on genotype
DF_all$Mouse_subspecies <- NA
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% "NMRI"] <- "NMRI"
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% c("MMd_F0 (Ws-Ws)", "MMd_F0 (St-St)", "MMd_F0 (Sc-Sc)", "MMd_F1 (Sc-St)")] <- "M.m.dom"
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% c("MMm_F0 (Bu-Bu)", "MMm_F0 (Pw-Pw)", "MMm_F0 (Pw1-Pw1)", "MMm_F1 (Bu-Pw)")] <- "M.m.mus"
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% c("Mmm-Mmd_Hybrid (WP)", "Mmm-Mmd_F1 (Bu-St)", "Mmm-Mmd_F1 (Pw-Sc)")] <- "Hybrid_mus_dom"
DF_all$Mouse_subspecies <- factor(DF_all$Mouse_subspecies, levels = c("M.m.dom", "Hybrid_mus_dom", "M.m.mus"))
# add crossing level (F0, F1...) information based on genotype
DF_all$crossingLevel <- NA
DF_all$crossingLevel[DF_all$Mouse_genotype %in% "NMRI"] <- "inbredNMRI"
DF_all$crossingLevel[grep("F0", DF_all$Mouse_genotype)] <- "F0"
DF_all$crossingLevel[grep("F1", DF_all$Mouse_genotype)] <- "F1"
# rename properly infection isolates
DF_all$infection_isolate <- factor(
DF_all$infection_isolate,
levels = c("E139", "E64", "E88", "EfLab"),
labels = c("Brandenburg139 (E. ferrisi)", "Brandenburg64 (E. ferrisi)",
"Brandenburg88 (E. falciformis)", "EfLab (E.falciformis)"))
# Put E.ferrisi first (prettier for plots)
DF_all$Eimeria_species <- relevel(as.factor(DF_all$Eimeria_species), "E.ferrisi")
# drop unused levels
DF_all <- data.frame(lapply(DF_all, function(x) if (is.factor(x)) droplevels(x) else x))
# add hybrid index for inbred strains, based on genotype
DF_all$HI <- 0
DF_all$HI[grep("MMm", DF_all$Mouse_genotype)] <- 1
DF_all$HI[grep("Mmm-Mmd", DF_all$Mouse_genotype)] <- 0.5
# Calculate OPG
DF_all <- calculateOPG(DF_all)
# Calculate relative weight loss in individuals
DF_all <- calculateWeightLoss(DF_all)
# Summarize all
ALL_summary <- makeSummaryTable(DF_all[DF_all$dpi %in% 4:11,])
### data preparation
ExpeDF_003_4 <- readRDS(file = "../data/ExpeDF_003_4_Alice.rds")
ExpeDF_005 <- readRDS(file = "../data/ExpeDF_005_Alice.rds")
forMap <- read.csv("../data/geolocalisation.csv")
source("myFunctions.R")
# Define a theme
theme_set(theme_bw())
## Packages
list.of.packages <- c("parasiteLoad", "bbmle", "devtools", "optimx", # for bbmle it needs to be required(?)
"ggplot2", "VennDiagram","fitdistrplus", # evaluate distribution
"epiR", # Sterne's exact method
"ggmap", "gridExtra",# several plots in one panel
"wesanderson", # nice colors
"ggpubr", "tidyr", "stats", "ggrepel",
"lme4", "lmerTest", "reshape",
"ggeffects", "sjmisc", "sjPlot")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(list.of.packages)
## Reinstall the package in case I updated it
# devtools::install_github("alicebalard/parasiteLoad")
# library(parasiteLoad)
# devtools::install_github("vqv/ggbiplot")
# library(ggbiplot)
###### data cleaning ######
DF_all<- merge(ExpeDF_003_4, ExpeDF_005, all = T)
# NB. Let's not consider which parent is which, but make A_B mouse = B_A mouse
# we don't have enough individuals to test this effect, and we are not interested in it anyway!
DF_all$Mouse_strain <- as.character(DF_all$Mouse_strain)
x <- strsplit(DF_all$Mouse_strain, "_")
y <- lapply(x, sort)
z <- unlist(lapply(y, FUN = function(x){paste(x, collapse="-")}))
DF_all$Mouse_genotype <- z
rm(x, y, z)
## Order the levels to be more clear in later plots (parents will be low and down
## on the legend, hybrids in between...)
DF_all$Mouse_genotype <- factor(
DF_all$Mouse_genotype,
levels = c("NMRI", "WSB", "WP", "PWD1", "SCHUNT-SCHUNT",
"STRA-STRA", "SCHUNT-STRA", "BUSNA-STRA","PWD-SCHUNT",
"BUSNA-PWD", "BUSNA-BUSNA", "PWD-PWD"),
labels = c("NMRI", "MMd_F0 (Ws-Ws)", "Mmm-Mmd_Hybrid (WP)", "MMm_F0 (Pw1-Pw1)", "MMd_F0 (Sc-Sc)",
"MMd_F0 (St-St)", "MMd_F1 (Sc-St)", "Mmm-Mmd_F1 (Bu-St)", "Mmm-Mmd_F1 (Pw-Sc)",
"MMm_F1 (Bu-Pw)", "MMm_F0 (Bu-Bu)", "MMm_F0 (Pw-Pw)"))
# add subspecies information based on genotype
DF_all$Mouse_subspecies <- NA
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% "NMRI"] <- "NMRI"
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% c("MMd_F0 (Ws-Ws)", "MMd_F0 (St-St)", "MMd_F0 (Sc-Sc)", "MMd_F1 (Sc-St)")] <- "M.m.dom"
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% c("MMm_F0 (Bu-Bu)", "MMm_F0 (Pw-Pw)", "MMm_F0 (Pw1-Pw1)", "MMm_F1 (Bu-Pw)")] <- "M.m.mus"
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% c("Mmm-Mmd_Hybrid (WP)", "Mmm-Mmd_F1 (Bu-St)", "Mmm-Mmd_F1 (Pw-Sc)")] <- "Hybrid_mus_dom"
DF_all$Mouse_subspecies <- factor(DF_all$Mouse_subspecies, levels = c("M.m.dom", "Hybrid_mus_dom", "M.m.mus"))
# add crossing level (F0, F1...) information based on genotype
DF_all$crossingLevel <- NA
DF_all$crossingLevel[DF_all$Mouse_genotype %in% "NMRI"] <- "inbredNMRI"
DF_all$crossingLevel[grep("F0", DF_all$Mouse_genotype)] <- "F0"
DF_all$crossingLevel[grep("F1", DF_all$Mouse_genotype)] <- "F1"
# rename properly infection isolates
DF_all$infection_isolate <- factor(
DF_all$infection_isolate,
levels = c("E139", "E64", "E88", "EfLab"),
labels = c("Brandenburg139 (E. ferrisi)", "Brandenburg64 (E. ferrisi)",
"Brandenburg88 (E. falciformis)", "EfLab (E.falciformis)"))
# Put E.ferrisi first (prettier for plots)
DF_all$Eimeria_species <- relevel(as.factor(DF_all$Eimeria_species), "E.ferrisi")
# drop unused levels
DF_all <- data.frame(lapply(DF_all, function(x) if (is.factor(x)) droplevels(x) else x))
# add hybrid index for inbred strains, based on genotype
DF_all$HI <- 0
DF_all$HI[grep("MMm", DF_all$Mouse_genotype)] <- 1
DF_all$HI[grep("Mmm-Mmd", DF_all$Mouse_genotype)] <- 0.5
# Calculate OPG
DF_all <- calculateOPG(DF_all)
# Calculate relative weight loss in individuals
DF_all <- calculateWeightLoss(DF_all)
# Summarize all
ALL_summary <- makeSummaryTable(DF_all[DF_all$dpi %in% 4:11,])
ALL_summary2 <- makeSummaryTable(DF_all)
ALL_summary == ALL_summary2
ALL_summary[ALL_summary != ALL_summary2]
View(ALL_summary)
ALL_summary != ALL_summary2
ALL_summary[ALL_summary != ALL_summary2, "dpi_minWeight"]
ALL_summary[ALL_summary != ALL_summary2, "minWeight"]
ALL_summary[ALL_summary != ALL_summary2, ]
ALL_summary[ALL_summary != ALL_summary2, ]
ALL_summary != ALL_summary2
# Summarize all
ALL_summary <- makeSummaryTable(DF_all[DF_all$dpi %in% 4:11,])
ALL_summary2 <- makeSummaryTable(DF_all)
ALL_summary != ALL_summary2
ALL_summary[ALL_summary != ALL_summary2, ]
ALL_summary[ALL_summary != ALL_summary2 ]
ALL_summary[ALL_summary != ALL_summary2, ]
ALL_summary != ALL_summary2
which(ALL_summary != ALL_summary2)
ALL_summary[which(ALL_summary != ALL_summary2)]
ALL_summary[which(ALL_summary != ALL_summary2),]
ALL_summary != ALL_summary2
ALL_summary$dpi_minWeight != ALL_summary2$dpi_minWeight
a <- ALL_summary$dpi_minWeight != ALL_summary2$dpi_minWeight
ALL_summary$dpi_minWeight[a]
ALL_summary2$dpi_minWeight[a]
ALL_summary[a]
ALL_summary[a,]
ALL_summary2[a,]
forplot2
forplot2 <- art2al_RAWdf %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(relativeWeight, na.rm = TRUE),
sd = sd(relativeWeight, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.2 <- ggplot(forplot2, aes(dpi, mean, group = infection_isolate,
col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("relative weight compared to day 0 (%)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.2)) +
labs(color = "Eimeria isolate")
F2.2
ggplot(art2al_RAWdf, aes(dpi, weight, group = infection_isolate,
col = infection_isolate))
ggplot(art2al_RAWdf, aes(dpi, weight, group = infection_isolate,
col = infection_isolate)) +
geom_point()
ggplot(art2al_RAWdf, aes(dpi, weight, group = infection_isolate,
col = infection_isolate)) +
geom_line()
ggplot(art2al_RAWdf, aes(dpi, weight, group = EH_ID,
col = infection_isolate)) +
geom_line()
### data preparation
ExpeDF_003_4 <- readRDS(file = "../data/ExpeDF_003_4_Alice.rds")
ExpeDF_005 <- readRDS(file = "../data/ExpeDF_005_Alice.rds")
forMap <- read.csv("../data/geolocalisation.csv")
source("myFunctions.R")
# Define a theme
theme_set(theme_bw())
## Packages
list.of.packages <- c("parasiteLoad", "bbmle", "devtools", "optimx", # for bbmle it needs to be required(?)
"ggplot2", "VennDiagram","fitdistrplus", # evaluate distribution
"epiR", # Sterne's exact method
"ggmap", "gridExtra",# several plots in one panel
"wesanderson", # nice colors
"ggpubr", "tidyr", "stats", "ggrepel",
"lme4", "lmerTest", "reshape",
"ggeffects", "sjmisc", "sjPlot")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(list.of.packages)
## Reinstall the package in case I updated it
# devtools::install_github("alicebalard/parasiteLoad")
# library(parasiteLoad)
# devtools::install_github("vqv/ggbiplot")
# library(ggbiplot)
###### data cleaning ######
DF_all<- merge(ExpeDF_003_4, ExpeDF_005, all = T)
# NB. Let's not consider which parent is which, but make A_B mouse = B_A mouse
# we don't have enough individuals to test this effect, and we are not interested in it anyway!
DF_all$Mouse_strain <- as.character(DF_all$Mouse_strain)
x <- strsplit(DF_all$Mouse_strain, "_")
y <- lapply(x, sort)
z <- unlist(lapply(y, FUN = function(x){paste(x, collapse="-")}))
DF_all$Mouse_genotype <- z
rm(x, y, z)
## Order the levels to be more clear in later plots (parents will be low and down
## on the legend, hybrids in between...)
DF_all$Mouse_genotype <- factor(
DF_all$Mouse_genotype,
levels = c("NMRI", "WSB", "WP", "PWD1", "SCHUNT-SCHUNT",
"STRA-STRA", "SCHUNT-STRA", "BUSNA-STRA","PWD-SCHUNT",
"BUSNA-PWD", "BUSNA-BUSNA", "PWD-PWD"),
labels = c("NMRI", "MMd_F0 (Ws-Ws)", "Mmm-Mmd_Hybrid (WP)", "MMm_F0 (Pw1-Pw1)", "MMd_F0 (Sc-Sc)",
"MMd_F0 (St-St)", "MMd_F1 (Sc-St)", "Mmm-Mmd_F1 (Bu-St)", "Mmm-Mmd_F1 (Pw-Sc)",
"MMm_F1 (Bu-Pw)", "MMm_F0 (Bu-Bu)", "MMm_F0 (Pw-Pw)"))
# add subspecies information based on genotype
DF_all$Mouse_subspecies <- NA
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% "NMRI"] <- "NMRI"
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% c("MMd_F0 (Ws-Ws)", "MMd_F0 (St-St)", "MMd_F0 (Sc-Sc)", "MMd_F1 (Sc-St)")] <- "M.m.dom"
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% c("MMm_F0 (Bu-Bu)", "MMm_F0 (Pw-Pw)", "MMm_F0 (Pw1-Pw1)", "MMm_F1 (Bu-Pw)")] <- "M.m.mus"
DF_all$Mouse_subspecies[DF_all$Mouse_genotype %in% c("Mmm-Mmd_Hybrid (WP)", "Mmm-Mmd_F1 (Bu-St)", "Mmm-Mmd_F1 (Pw-Sc)")] <- "Hybrid_mus_dom"
DF_all$Mouse_subspecies <- factor(DF_all$Mouse_subspecies, levels = c("M.m.dom", "Hybrid_mus_dom", "M.m.mus"))
# add crossing level (F0, F1...) information based on genotype
DF_all$crossingLevel <- NA
DF_all$crossingLevel[DF_all$Mouse_genotype %in% "NMRI"] <- "inbredNMRI"
DF_all$crossingLevel[grep("F0", DF_all$Mouse_genotype)] <- "F0"
DF_all$crossingLevel[grep("F1", DF_all$Mouse_genotype)] <- "F1"
# rename properly infection isolates
DF_all$infection_isolate <- factor(
DF_all$infection_isolate,
levels = c("E139", "E64", "E88", "EfLab"),
labels = c("Brandenburg139 (E. ferrisi)", "Brandenburg64 (E. ferrisi)",
"Brandenburg88 (E. falciformis)", "EfLab (E.falciformis)"))
# Put E.ferrisi first (prettier for plots)
DF_all$Eimeria_species <- relevel(as.factor(DF_all$Eimeria_species), "E.ferrisi")
# drop unused levels
DF_all <- data.frame(lapply(DF_all, function(x) if (is.factor(x)) droplevels(x) else x))
# add hybrid index for inbred strains, based on genotype
DF_all$HI <- 0
DF_all$HI[grep("MMm", DF_all$Mouse_genotype)] <- 1
DF_all$HI[grep("Mmm-Mmd", DF_all$Mouse_genotype)] <- 0.5
# Calculate OPG
DF_all <- calculateOPG(DF_all)
# Calculate relative weight loss in individuals
DF_all <- calculateWeightLoss(DF_all)
# Summarize all
ALL_summary <- makeSummaryTable(DF_all)
a <- ALL_summary$dpi_minWeight != ALL_summary2$dpi_minWeight
ALL_summary$dpi_minWeight[a]
ALL_summary2$dpi_minWeight[a]
### Code for data analysis of Article 2
### August 2019
### Alice Balard
## INFO
# Mouse AA_0088, HI = 0.2
# Mouse AA_0064, HI = 0.08
# Mouse AA_0139, HI = 0.85
#### Load data and functions within ####
source("1_dataPreparation.R")
library(cowplot)
library(ggplot2)
library(dplyr)
###### Map of our samples FIGURE 1 (with design) ######
hmhzline <- read.csv("../data/HMHZ.csv")
# change not visible color
forMap$color <- as.character(forMap$color)
forMap$color[forMap$color %in% "green"] <- "green4"
forMap$color <- as.factor(forMap$color)
area <- get_stamenmap(bbox = c(8, 48, 18, 54), zoom = 6, maptype = "toner-lite")
map <- ggmap(area) +
geom_path(hmhzline, mapping =  aes(x = lon, y = lat), col = "purple", size = 1) +
geom_label_repel(data = forMap,
aes(longitude, latitude, label = Name, fill = color),
box.padding = 2, size = 7, col = "white", segment.colour = "black") +
geom_point(data = forMap, aes(longitude, latitude, col = color), size = 6) +
scale_color_manual(values = as.character(levels(forMap$color))) +
scale_fill_manual(values = as.character(levels(forMap$color))) +
theme_bw() +
theme(legend.position = 'none', axis.ticks=element_blank())
map
# pdf(file = "../figures/Fig1.pdf", width = 8, height = 8)
# map
# dev.off()
######################################
########## Read information ##########
######################################
## Read batches (Exp_003 treated by anthelminthcs only)
table(art2al_SUMdf$infection_isolate, art2al_SUMdf$Mouse_genotype, art2al_SUMdf$Exp_ID)
## Read anthelminthics
table(art2al_SUMdf$infection_isolate, art2al_SUMdf$Mouse_genotype, art2al_SUMdf$anth)
## Make subdata, removing coinfected (N=9) and anthelminthic trt mice (N=22)
contaAnimals <- art2al_RAWdf[art2al_RAWdf$oocysts.per.tube > 0 & !is.na(art2al_RAWdf$oocysts.per.tube) &
art2al_RAWdf$dpi == 0, "EH_ID"]
SUBsummaryDF77mice <- art2al_SUMdf[!art2al_SUMdf$EH_ID %in% contaAnimals &
art2al_SUMdf$anth == FALSE,]
## which mice?
problemMice <- art2al_SUMdf[art2al_SUMdf$EH_ID %in% contaAnimals |
art2al_SUMdf$anth == TRUE,]
table(problemMice$Mouse_genotype, problemMice$infection_isolate)
# 2 SCHUNT & 1 PWD falciformis, rest ferrisi
table(art2al_SUMdf$Mouse_genotype, art2al_SUMdf$infection_isolate)
## Age of mice
range(as.numeric(art2al_RAWdf$ageAtInfection))
###### what is the overall peak day for each parasite isolate? ######
aggregate(art2al_SUMdf$dpi_max.OPG,
list(art2al_SUMdf$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
aggregate(art2al_SUMdf$dpi_minWeight,
list(art2al_SUMdf$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### what is the overall prepatent period for each parasite isolate? ######
d <- as.data.frame(
art2al_RAWdf[!is.na(art2al_RAWdf$OPG) & art2al_RAWdf$OPG > 0,] %>%
dplyr::group_by(EH_ID) %>%
dplyr::slice(which.min(dpi)) %>%
dplyr::select(EH_ID, weight, HI, startingWeight, ageAtInfection, Sex,
Mouse_genotype, Eimeria_species, Mouse_subspecies,
infection_isolate, Exp_ID, dpi))
aggregate(d$dpi,
list(d$infection_isolate),
function(x) {paste(length(x), median(x), round(sd(x),2))})
###### Course of infection FIGURE 2 ######
forplot <- art2al_RAWdf %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(OPG*10e-6, na.rm = TRUE),
sd = sd(OPG*10e-6, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.1 <- ggplot(forplot, aes(dpi, mean, group = infection_isolate, col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("OPG (x10^6)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.8)) +
labs(color = "Eimeria isolate")
F2.1
forplot2 <- art2al_RAWdf %>%
group_by(infection_isolate, dpi) %>%
summarise(mean = mean(relativeWeight, na.rm = TRUE),
sd = sd(relativeWeight, na.rm = TRUE),
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
F2.2 <- ggplot(forplot2, aes(dpi, mean, group = infection_isolate,
col = infection_isolate)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = .2)+
ylab("relative weight compared to day 0 (%)") +
scale_x_continuous(breaks = 0:11, name = "days post infection") +
theme(legend.position = c(0.25, 0.2)) +
labs(color = "Eimeria isolate")
F2.2
Fig2 <- cowplot::plot_grid(F2.1, F2.2,
labels=c("A", "B"), label_size = 20)
# pdf(file = "../figures/Fig2.pdf", width = 10, height = 5)
# Fig2
# dev.off()
## Correlation sum of oocysts / peak oocysts
ggplot(art2al_SUMdf, aes(sumoocysts.per.tube, max.oocysts.per.tube)) +
geom_smooth(method = "lm")+ geom_point()
cor(art2al_SUMdf$sumoocysts.per.tube , art2al_SUMdf$max.oocysts.per.tube,
method = "pearson")
longDF <- melt(art2al_SUMdf, measure.vars=c("startingWeight", "minweight"))
names(longDF)[names(longDF)%in% "value"] <- "weight"
art2al_SUMdf$dpi_minWeight
art2al_SUMdf$dpi_start.OPG
